{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Assets/Icons/Close.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Components/Player/Steaming/MP3/Utils/Common.js","Components/Player/Steaming/MP3/Utils/Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Parser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Token.js","Components/Player/Steaming/MP3/ID3v2/FrameParser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Parser.js","Components/Player/Steaming/MP3/ID3Parser.js","Utils/Media.js","Stores/PlayerStore.js","Utils/User.js","Components/Viewer/FileProgress.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Assets/Icons/Download.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Components/Message/MessageAuthor.js","Components/Tile/User.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VideoNote.js","Components/Message/Media/VoiceNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","cancelLoadAnimationContent","cancelGetRemoteFile","loadAnimationContent","PRELOAD_ANIMATION_SIZE","cancelLoadAnimationThumbnailContent","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","cancelLoadBigPhotoContent","getSize","PHOTO_BIG_SIZE","loadBigPhotoContent","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","cancelLoadVideoContent","loadVideoContent","PRELOAD_VIDEO_SIZE","cancelLoadVideoThumbnailContent","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerMinithumbnail","minithumbnail","getViewerThumbnail","getViewerFile","getMediaMiniPreview","getMediaPreviewFile","getMediaFile","mime_type","cancelLoadIVMediaViewerContent","blocks","cancelLoadMediaViewerContent","loadIVMediaViewerContent","useSizeLimit","loadMediaViewerContent","cancelPreloadIVMediaViewerContent","index","preload","cancelPreloadMediaViewerContent","history","preloadMediaViewerContent","preloadIVMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","full","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","replace","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","createSvgIcon","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","strtokBITSET","buf","bit","decodeString","buffer","encoding","slice","label","TextDecoder","decode","readUTF16String","readUTF8String","readWindows1292String","Error","UINT32SYNCSAFE","UINT8","UINT32_BE","UINT24_BE","UINT16_BE","ASCII_TEXT","len","Id3v1StringType","pos0","trimRightNull","trim","undefined","ID3v1Header","artist","album","year","comment","zeroByte","track","genre","ID3v1Parser","hasID3v1Header","ID3v2Header","fileIdentifier","version","major","revision","flags","raw","unsynchronisation","isExtendedHeader","expIndicator","ExtendedHeader","extendedFlags","sizeOfPadding","crcDataPresent","crcData","TextEncodingToken","bom","FrameParser","output","debug","splitValue","tag","trimArray","ID3v2Parser","tags","frameHeaderLength","getFrameHeaderLength","id3Header","frameHeaderBytes","frameHeader","readFrameHeader","frameDataBytes","readFrameData","extendedHeader","parseId3Data","dataLen","parseMetadata","parseExtendedHeader","readI","writeI","majorVer","includeCovers","warningCollector","frameParser","readData","format","removeUnsyncBytes","data_length_indicator","tag_alter_preservation","file_alter_preservation","read_only","grouping_identity","compression","encryption","v","readFrameFlags","hasID3v2Header","ID3Parser","fr","readAsArrayBuffer","getArrayBuffer","arrayBuffer","Uint8Array","id3Tags","artistTag","find","titleTag","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaTags","src","addEventListener","trunc","getMediaDocumentFromFile","getRandomInt","name","album_cover_minithumbnail","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","worker","PakoWorker","handlers","inflateBlob","random","toString","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","hint","sticker_set_ids","is_installed","assign","foundStickers","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","User","showStatus","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","opacity","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","onClientUpdateMediaSeeking","playerDuration","seekProgress","seeking","timeString","getTimeString","onClientUpdateMediaSeek","Infinity","onClientUpdateMediaTime","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","strings","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","input","extra","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","ToASCII","domain_array","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","dragging","handleMouseDown","handleChangeCommitted","handleChange","thumb","min","step","onChange","onChangeCommitted","onMouseDown","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","sourceRef","getTracks","stop","load","progressTime","clamp","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","DocumentAction","Download","viewBox","data-name","data-ext","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","clipboard","writeText","copyOld","element","successful","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","focus","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","aria-describedby","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","remove","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","removeItem","clear","cache","contacts","CacheManager","saveChatsInternal","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","CacheStore","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","visible","onEnter","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","handleCancel","onCancel","textRef","urlRef","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","editMessageAction","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","sendAsFile","performance","cancel","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","Slider","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","synchronous","canCopyLink","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.420c1e58.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction cancelLoadAnimationContent(animation) {\n    const { animation: file } = animation;\n    if (!file) return;\n\n    const { id } = file;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction cancelLoadAnimationThumbnailContent(animation){\n    if (!animation) return;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction cancelLoadBigPhotoContent(photo) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction cancelLoadVideoContent(video) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction cancelLoadVideoThumbnailContent(video) {\n    if (!video) return;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nexport function getViewerMinithumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'document': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'photo': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'video': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nexport function getMediaMiniPreview(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.minithumbnail) {\n                return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.minithumbnail) {\n                return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.minithumbnail) {\n                    return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n                }\n\n                if (document && document.minithumbnail) {\n                    return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n                }\n\n                if (video.minithumbnail) {\n                    return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n                }\n\n                if (photo && photo.minithumbnail) {\n                    return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video && video.minithumbnail) {\n                return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null, ''];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation, media.mime_type];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo, ''];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document, document.mime_type];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video, media.mime_type];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null, ''];\n\n    const { content } = message;\n    if (!content) return [0, 0, null, ''];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                const { width, height, animation: file, mime_type } = animation;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                const { document: file, mime_type } = document;\n                return [50, 50, file, mime_type];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    const { width, height, animation: file, mime_type } = animation;\n                    return [width, height, file, mime_type];\n                }\n\n                if (document) {\n                    const { document: file, mime_type } = document;\n                    return [50, 50, file, mime_type];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        const { width, height, photo: file } = photoSize;\n                        return [width, height, file, ''];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    const { width, height, video: file, mime_type } = video;\n                    return [width, height, file, mime_type];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                const { width, height, video: file, mime_type } = video;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nexport function cancelLoadIVMediaViewerContent(blocks) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { animation, photo, video } = web_page;\n\n                        if (animation) {\n                            cancelLoadAnimationThumbnailContent(animation);\n                            cancelLoadAnimationContent(animation);\n                        }\n\n                        if (photo) {\n                            cancelLoadBigPhotoContent(photo);\n                        }\n\n                        if (video) {\n                            cancelLoadVideoThumbnailContent(video);\n                            cancelLoadVideoContent(video);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function loadIVMediaViewerContent(blocks, useSizeLimit = false) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, null, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, null);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, null);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, null);\n                    loadVideoContent(store, video, null, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function cancelPreloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    cancelLoadIVMediaViewerContent([blocks[index]]);\n    cancelLoadIVMediaViewerContent(blocks);\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nexport function preloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    loadIVMediaViewerContent([blocks[index]], false);\n    loadIVMediaViewerContent(preload, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background, false);\n    });\n}\n\nexport function loadBackgroundContent(store, background, full = false) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM, PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                // openDocument(audio, message, fileCancel);\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\n    text = text.replace(/<div>/gi, '<br>');\n    text = text.replace(/<\\/div>/gi, '');\n\n    text = text.split('<br>').join('\\n');\n\n    // console.log(`[ge] start text=${text}`);\n\n    let index = -1; // first index of end tag\n    let lastIndex = 0; // first index after end tag\n    let start = -1; // first index of start tag\n    let isPre = false;\n    const mono = '`';\n    const pre = '```';\n    const bold = '**';\n    const italic = '__';\n\n    // 0 looking for html entities\n    const result = new DOMParser().parseFromString(text, 'text/html');\n    let offset = 0;\n    let length = 0;\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    // console.log(`[ge] pre and code text=${text}`, entities);\n    // 2 looking for bold, italic entities\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n    // console.log(`[ge] result text=${text}`, entities);\n\n    return { text, entities };\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","export const strtokBITSET = {\n    get: (buf, off, bit) => {\n        return (buf[off] & (1 << bit)) !== 0;\n    },\n    len: 1\n};\n\nfunction readUTF16String(buffer) {\n    let offset = 2;\n    let label = 'utf-16';\n    if (buffer[0] === 0xFE && buffer[1] === 0xFF) { // big endian\n        offset = 2;\n        label = 'utf-16be';\n    } else if (buffer[0] === 0xFF && buffer[1] === 0xFE) { // little endian\n        offset = 2;\n        label = 'utf-16le';\n    }\n\n    return new TextDecoder(label).decode(buffer.slice(offset));\n}\n\nfunction readUTF8String(buffer) {\n    return new TextDecoder('utf-8').decode(buffer);\n}\n\nfunction readWindows1292String(buffer) {\n    return new TextDecoder('iso-8859-1').decode(buffer);\n}\n\n/**\n *\n * @param buffer Decoder input data\n * @param encoding 'utf16le' | 'utf16' | 'utf8' | 'iso-8859-1'\n * @return {string}\n */\nexport function decodeString(buffer, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (buffer[0] === 0xFF && buffer[1] === 0xFE && buffer[2] === 0xFE && buffer[3] === 0xFF) {\n        buffer = buffer.slice(2);\n    }\n\n    if (encoding === 'utf16le' || encoding === 'utf16') {\n        return readUTF16String(buffer);\n    } else if (encoding === 'utf8') {\n        return readUTF8String(buffer);\n    } else if (encoding === 'iso-8859-1') {\n        return readWindows1292String(buffer);\n    }\n\n    throw Error(encoding + ' encoding is not supported!');\n}\n\nexport function trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\n\nexport function LOG(message, ...optionalParams) {\n    console.log(message, optionalParams);\n}\n\nexport function ERROR(message, ...optionalParams) {\n    console.error(message, optionalParams);\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return {number} decoded bit aligned number\n */\nexport function getBitAllignedNumber(buf, byteOffset, bitOffset, len){\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = buf[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    } else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(buf, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is least significant bit\n * @return {boolean} decoded bit aligned number\n */\nexport function isBitSet(buf, byteOffset, bitOffset) {\n    return getBitAllignedNumber(buf, byteOffset, bitOffset, 1) === 1;\n}","import { trimRightNull } from './Common';\n\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexport const UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | (buf[off + 2] << 7) | (buf[off + 1] << 14) | (buf[off] << 21);\n    },\n    len: 4\n};\n\nexport const UINT8 = {\n    get: (buf, off) => {\n        return buf[off];\n    }\n}\n\nexport const UINT32_BE = {\n    get: (buf, off) => {\n        return buf[off + 3] | (buf[off + 2] << 8) | (buf[off + 1] << 16) | (buf[off] << 24);\n    }\n}\n\nexport const UINT24_BE = {\n    get: (buf, off) => {\n        return buf[off + 2] | (buf[off + 1] << 8) | (buf[off] << 16);\n    }\n}\n\nexport const UINT16_BE = {\n    get: (buf, off) => {\n        return buf[off + 1] | (buf[off] << 8);\n    }\n}\n\nexport const ASCII_TEXT = {\n    get: (buf, off, len) => {\n        return new TextDecoder('ascii').decode(buf.slice(off, off + len));\n    }\n}\n\nexport const Id3v1StringType = {\n    get: (buf, off, len) => {\n        let value = new TextDecoder('ascii').decode(buf.slice(off, off + len));\n        value = trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}","import {Id3v1StringType, UINT8} from '../Utils/Token';\n\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nexport const ID3v1Header = {\n    len: 128,\n\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = Id3v1StringType.get(buf, off, 3);\n        return header === 'TAG' ? {\n            header,\n            title: Id3v1StringType.get(buf, off + 3, 30),\n            artist: Id3v1StringType.get(buf, off + 33, 30),\n            album: Id3v1StringType.get(buf, off + 63, 30),\n            year: Id3v1StringType.get(buf, off + 93, 4),\n            comment: Id3v1StringType.get(buf, off + 97, 28),\n            // ID3v1.1 separator for track\n            zeroByte: UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: UINT8.get(buf, off + 126),\n            genre: UINT8.get(buf, off + 127)\n        } : null;\n    }\n};","import {ID3v1Header} from './ID3v1Token';\nimport {Id3v1StringType} from '../Utils/Token';\n\nexport class ID3v1Parser {\n    parse(buffer) {\n        if (buffer.length < 128) {\n            console.log('[ID3v1Parser] Skip checking for ID3v1 because the file-size is less than 128 bytes');\n            return null;\n        }\n\n        return ID3v1Header.get(buffer, buffer.length - ID3v1Header.len);\n    }\n}\n\nexport function hasID3v1Header(buffer) {\n    if (buffer.length >= 128) {\n        const tag = Id3v1StringType.get(buffer, buffer.length - 128, 3);\n        return tag === 'TAG';\n    }\n    return false;\n}","import { strtokBITSET } from '../Utils/Common';\nimport { UINT16_BE, UINT32_BE, ASCII_TEXT, UINT32SYNCSAFE } from '../Utils/Token';\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n */\nexport const ID3v2Header = {\n    get: (buffer, offset) => {\n        // ID3v2/file identifier   'ID3'\n        const fileIdentifier = ASCII_TEXT.get(buffer, offset, 3); // new TextDecoder('ascii').decode(buffer.slice(offset, 3));\n\n        // ID3v2 versionIndex\n        const version = {\n            major: buffer[offset + 3],\n            revision: buffer[offset + 4]\n        };\n\n        // ID3v2 flags\n        const flags = {\n            raw: buffer[offset + 5],\n            // Unsynchronisation\n            unsynchronisation: strtokBITSET.get(buffer, offset + 5, 7),\n            // Extended header\n            isExtendedHeader: strtokBITSET.get(buffer, offset + 5, 6),\n            // Experimental indicator\n            expIndicator: strtokBITSET.get(buffer, offset + 5, 5),\n            footer: strtokBITSET.get(buffer, offset + 5, 4)\n        };\n\n        // ID3v2 size\n        // The ID3v2 tag size is the size of the complete tag after unsychronisation, including padding, excluding the header but not excluding the extended header\n        const size = UINT32SYNCSAFE.get(buffer, offset + 6);\n\n        return {\n            fileIdentifier,\n            version,\n            flags,\n            size\n        };\n    },\n    len: 10\n}\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_extended_header\n */\nexport const ExtendedHeader = {\n    len: 10,\n\n    get: (buf, off) => {\n        // Extended header size (10 or 6 excluding itself)\n        const size = UINT32_BE.get(buf, off);\n\n        // Extended Flags\n        const extendedFlags = UINT16_BE.get(buf, off + 4);\n\n        // Size of padding\n        const sizeOfPadding = UINT32_BE.get(buf, off + 6);\n\n        // CRC data present\n        const crcDataPresent = strtokBITSET.get(buf, off + 4, 31);\n\n        const crcData = crcDataPresent ? UINT32_BE.get(buf, off + 10) : null;\n\n        return {\n            size,\n            extendedFlags,\n            sizeOfPadding,\n            crcDataPresent,\n            crcData\n        };\n    }\n}\n\nexport const TextEncodingToken = {\n    len: 1,\n\n    get: (buf, off) => {\n        switch (buf[off]) {\n            case 0x00:\n                return { encoding: 'iso-8859-1' }; // binary\n            case 0x01:\n                return { encoding: 'utf16', bom: true };\n            case 0x02:\n                return { encoding: 'utf16', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n\n        }\n    }\n};","import {TextEncodingToken} from './ID3v2Token';\nimport {decodeString} from '../Utils/Common';\n\nconst defaultEnc = 'iso-8859-1';\n\nexport class FrameParser {\n\n    /**\n     * Create id3v2 frame parser\n     * @param major - Major version, e.g. (4) for  id3v2.4\n     */\n    constructor(major)  {\n        this.major = major;\n    }\n\n    readData(b, type) {\n\n        if (b.length === 0) {\n            console.log(`id3v2.${this.major} header has empty tag type=${type}`);\n            return;\n        }\n\n        const {encoding, bom} = TextEncodingToken.get(b, 0);\n        let output = [];\n\n        console.debug(`Parsing tag type=${type}, encoding=${encoding}, bom=${bom}`);\n        switch (type) {\n            case 'TPE1': // 4.2.1. Text information frames - details\n            case 'TIT2': {\n                const text = decodeString(b.slice(1), encoding).replace(/\\x00+$/, '');\n                output = this.major >= 4 ? this.splitValue(type, text) : [text];\n            }\n            default:\n                //console.log('Warning: unsupported id3v2-tag-type: ' + type);\n                break;\n        }\n\n        return output;\n    }\n\n    /**\n     * id3v2.4 defines that multiple T* values are separated by 0x00\n     * id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n     * @param tag - Tag name\n     * @param text - Concatenated tag value\n     * @returns Split tag value\n     */\n    splitValue(tag, text) {\n        let values;\n        if (this.major < 4) {\n            values = text.split(/\\x00/g);\n            if (values.length > 1) {\n                console.log(`ID3v2.${this.major} ${tag} uses non standard null-separator.`);\n            } else {\n                values = text.split(/\\//g);\n            }\n        } else {\n            values = text.split(/\\x00/g);\n        }\n        return FrameParser.trimArray(values);\n    }\n\n    static trimArray(values) {\n        return values.map(value => value.replace(/\\x00+$/, '').trim());\n    }\n}","import { ExtendedHeader, ID3v2Header } from './ID3v2Token';\nimport { strtokBITSET } from '../Utils/Common';\nimport { ASCII_TEXT, UINT24_BE, UINT32_BE, UINT32SYNCSAFE } from '../Utils/Token';\nimport { FrameParser } from './FrameParser';\n\nexport class ID3v2Parser {\n    static removeUnsyncBytes(buffer) {\n        let readI = 0;\n        let writeI = 0;\n        while (readI < buffer.length - 1) {\n            if (readI !== writeI) {\n                buffer[writeI] = buffer[readI];\n            }\n            readI += (buffer[readI] === 0xFF && buffer[readI + 1] === 0) ? 2 : 1;\n            writeI++;\n        }\n        if (readI < buffer.length) {\n            buffer[writeI++] = buffer[readI];\n        }\n        return buffer.slice(0, writeI);\n    }\n\n    static readFrameData(buf, frameHeader, majorVer, includeCovers, warningCollector) {\n        const frameParser = new FrameParser(majorVer, warningCollector);\n        switch (majorVer) {\n            case 2:\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            case 3:\n            case 4:\n                if (frameHeader.flags.format.unsynchronisation) {\n                    buf = ID3v2Parser.removeUnsyncBytes(buf);\n                }\n                if (frameHeader.flags.format.data_length_indicator) {\n                    buf = buf.slice(4, buf.length);\n                }\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n    }\n\n    static readFrameFlags(b) {\n        return {\n            status: {\n                tag_alter_preservation: strtokBITSET.get(b, 0, 6),\n                file_alter_preservation: strtokBITSET.get(b, 0, 5),\n                read_only: strtokBITSET.get(b, 0, 4)\n            },\n            format: {\n                grouping_identity: strtokBITSET.get(b, 1, 7),\n                compression: strtokBITSET.get(b, 1, 3),\n                encryption: strtokBITSET.get(b, 1, 2),\n                unsynchronisation: strtokBITSET.get(b, 1, 1),\n                data_length_indicator: strtokBITSET.get(b, 1, 0)\n            }\n        };\n    }\n\n    static readFrameHeader(v, majorVer) {\n        let header;\n        switch (majorVer) {\n\n            case 2:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 3),\n                    length: UINT24_BE.get(v, 3)\n                };\n                break;\n\n            case 3:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32_BE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            case 4:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32SYNCSAFE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n\n        return header;\n    }\n\n    static getFrameHeaderLength(majorVer) {\n        switch (majorVer) {\n            case 2:\n                return 6;\n            case 3:\n            case 4:\n                return 10;\n            default:\n                throw new Error('header versionIndex is incorrect');\n        }\n    }\n\n    parseMetadata(data) {\n        let offset = 0;\n        const tags = [];\n\n        while (true) {\n            if (offset === data.length) break;\n\n            const frameHeaderLength = ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);\n            if (offset + frameHeaderLength > data.length) {\n                console.log('Illegal ID3v2 tag length');\n                break;\n            }\n\n            const frameHeaderBytes = data.slice(offset, offset += frameHeaderLength);\n            const frameHeader = ID3v2Parser.readFrameHeader(frameHeaderBytes, this.id3Header.version.major);\n\n            // Last frame. Check first char is a letter, bit of defensive programming\n            if (frameHeader.id === '' || frameHeader.id === '\\u0000\\u0000\\u0000\\u0000' || 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(frameHeader.id[0]) === -1) {\n                console.log('Illegal ID3v2 tag header', frameHeaderBytes, frameHeader.id);\n                break;\n            }\n\n            const frameDataBytes = data.slice(offset, offset += frameHeader.length);\n            const values = ID3v2Parser.readFrameData(frameDataBytes, frameHeader, this.id3Header.version.major, true, []);\n\n            console.log('[ID3v2Parser] parseMetadata', offset, frameHeader.length, frameHeader.id, values);\n            tags.push({ id: frameHeader.id, value: values });\n        }\n        return tags;\n    }\n\n    parseExtendedHeader(buffer) {\n        const extendedHeader = ExtendedHeader.get(buffer, 10);\n\n        return this.parseId3Data(buffer, this.id3Header.size + extendedHeader.size + 4, this.id3Header.size);\n    }\n\n    parseId3Data(buf, offset, dataLen) {\n        const buffer = buf.slice(offset, offset + dataLen);\n        return this.parseMetadata(buffer)\n    }\n\n    parse(buffer) {\n        const id3Header = ID3v2Header.get(buffer, 0);\n\n        this.id3Header = id3Header;\n        if (id3Header.fileIdentifier !== 'ID3') {\n            throw new Error('expected ID3-header file-identifier \\'ID3\\' was not found');\n        }\n\n        if (id3Header.flags.isExtendedHeader) {\n            return this.parseExtendedHeader(buffer);\n        } else {\n            return this.parseId3Data(buffer, ID3v2Header.len, id3Header.size);\n        }\n    }\n}\n\nexport function hasID3v2Header(buffer) {\n    if (buffer.length > 10) {\n        const tag = ASCII_TEXT.get(buffer, 0, 3);\n        return tag === 'ID3';\n    }\n    return false;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { hasID3v1Header, ID3v1Parser } from './ID3v1/ID3v1Parser';\nimport { hasID3v2Header, ID3v2Parser } from './ID3v2/ID3v2Parser';\n\nexport class ID3Parser {\n    getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    async parse(file) {\n        const tags = { artist: '', title: '' };\n        const result = { tags };\n\n        if (!file) return result;\n\n        const arrayBuffer = await this.getArrayBuffer(file);\n        if (!arrayBuffer) return result;\n\n        const buffer = new Uint8Array(arrayBuffer);\n        if (!buffer) return result;\n\n        if (hasID3v2Header(buffer)) {\n            const id3Tags = new ID3v2Parser().parse(buffer);\n            if (id3Tags) {\n                const artistTag = id3Tags.find(x => x.id === 'TPE1');\n                if (artistTag && artistTag.value.length > 0){\n                    tags.artist = artistTag.value[0];\n                }\n                const titleTag = id3Tags.find(x => x.id === 'TIT2');\n                if (titleTag && titleTag.value.length > 0){\n                    tags.title = titleTag.value[0];\n                }\n            }\n        } else if (hasID3v1Header(buffer)) {\n            const id3Tags = new ID3v1Parser().parse(buffer);\n\n            if (id3Tags) {\n                tags.artist = id3Tags.artist;\n                tags.title = id3Tags.title;\n            }\n        }\n\n        return result;\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\nimport { getRandomInt, readImageSize } from './Common';\nimport FileStore from '../Stores/FileStore';\nimport { ID3Parser } from '../Components/Player/Steaming/MP3/ID3Parser';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n\nexport async function getMediaTags(file) {\n    return new Promise(async resolve => {\n        const tag = await new ID3Parser().parse(file);\n\n        const { tags } = tag;\n        const { artist, title } = tags;\n\n        const audio = document.createElement('audio');\n        const url = URL.createObjectURL(file);\n\n        audio.src = url;\n        audio.addEventListener('loadedmetadata', function(){\n            URL.revokeObjectURL(url);\n            const duration = audio.duration;\n            audio.src = null;\n            resolve({ title, performer : artist, duration : Math.trunc(duration) });\n        },false);\n        audio.addEventListener('error', function() {\n            resolve(null);\n        });\n    })\n}\n\nexport async function getMediaDocumentFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileId = -getRandomInt(1, 1000000);\n    FileStore.setBlob(fileId, file);\n\n    const { name, type, size } = file;\n\n    if (type === 'audio/mp3') {\n        const tags = await getMediaTags(file);\n        if (tags) {\n            const { title, performer, duration } = tags;\n\n            return ({\n                '@type': 'messageAudio',\n                audio: {\n                    '@type': 'audio',\n                    duration,\n                    title,\n                    performer,\n                    file_name: name,\n                    mime_type: type,\n                    album_cover_minithumbnail: null,\n                    album_cover_thumbnail: null,\n                    audio: {\n                        '@type': 'file',\n                        id: fileId,\n                        size,\n                        expected_size: size,\n                        local: {\n                            is_downloading_completed: true\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    return ({\n        '@type': 'messageDocument',\n        document: {\n            '@type': 'document',\n            file_name: name,\n            mime_type: type,\n            minithumbnail: null,\n            thumbnail: null,\n            document: {\n                '@type': 'file',\n                id: fileId,\n                size,\n                expected_size: size,\n                local: {\n                    is_downloading_completed: true\n                }\n            }\n        }\n    });\n}\n\nexport async function getMediaPhotoFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    if (file.type.startsWith('image')) {\n        const [width, height] = await readImageSize(file);\n\n        const fileId = -getRandomInt(1, 1000000);\n        FileStore.setBlob(fileId, file);\n\n        const photoSize = {\n            '@type': 'photoSize',\n            photo: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            },\n            width,\n            height\n        };\n\n        return ({\n            '@type': 'messagePhoto',\n            photo: {\n                '@type': 'photo',\n                has_stickers: false,\n                minithumbnail: null,\n                sizes: [ photoSize ]\n            }\n        });\n    } else {\n        return null;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeek': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeeking': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        // console.log('[photo] render', displaySize, fitPhotoSize);\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                (this.ivInView && !this.openIVMedia))\n        ) {\n            player.play();\n        } else {\n            player.pause();\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n        const source = src ? <source src={src} type={mime_type}/> : null;\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        >\n                            {source}\n                        </video>\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing, active } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioSubtitle(audio);\n        const audioSubtitle = getAudioShortTitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='audio-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action' style={{ opacity: active ? 0 : 1 }}>{audioSubtitle}</div>\n                    <VoiceNoteSlider className='audio-slider' chatId={chatId} messageId={messageId} duration={duration} style={{ opacity: active ? 1 : 0 }}/>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            seekProgress: 0,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    onClientUpdateMediaSeeking = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: update.value,\n                seeking: true,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: 0,\n                seeking: false,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, playerDuration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file, seekProgress, seeking } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const time = seeking ? seekProgress * playerDuration : update.currentTime;\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(time, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: active ? this.state.timeString : this.getTimeString(0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString} / ${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize} / ${size}` : `${size}`;\n        const strings = [];\n        if (!isDownloadingCompleted) {\n            strings.push(sizeString);\n        }\n        if (!isDownloadingActive) {\n            strings.push(timeString);\n        }\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {<span>{strings.join(', ')}</span>}\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, dragging } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (messageId !== update.messageId) return;\n\n        const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n        const value = this.getValue(update.currentTime, playerDuration, active);\n\n        if (dragging) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration\n            });\n        } else {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, dragging } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            let value = this.state.value;\n            if (!dragging) {\n                value = this.getValue(active ? currentTime : 0, playerDuration, true);\n            }\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        this.setState({\n            dragging: true\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { chatId, messageId } = this.props;\n        const { value, active } = this.state;\n        if (!active) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaSeek',\n            chatId,\n            messageId,\n            value\n        });\n\n        this.setState({\n            dragging: false\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { chatId, messageId } = this.props;\n        const { active, dragging } = this.state;\n        if (!active) return;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaSeeking',\n                chatId,\n                messageId,\n                value\n            });\n        }\n\n        this.setState({\n            value\n        });\n    };\n\n    render() {\n        const { className, style } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className={classNames('voice-note-slider', className)} style={style}>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        thumb: 'voice-note-slider-thumb',\n                        active: 'voice-note-slider-active'\n                    }}\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    value={value}\n                    onChange={this.handleChange}\n                    onChangeCommitted={this.handleChangeCommitted}\n                    onMouseDown={this.handleMouseDown}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { clamp, getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.sourceRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n\n        const source = this.sourceRef.current;\n        if (!source) return;\n\n        if (source.src !== src) {\n            source.src = src;\n            player.load();\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = clamp(progressTime / videoDuration * 100, 0, 100);\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        >\n                            <source ref={this.sourceRef} src={null} type='video/mp4'/>\n                        </video>\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e33e8791554f674a437f.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            AppStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { openArchive } from '../../Actions/Client';\nimport './Archive.css';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings } = this.state;\n        if (!openSearch && !openContacts && !openSettings) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch } = this.state;\n        if (openSettings || openContacts || openSearch) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        editMessage(chatId, 0);\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            AppStore.changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose } = this.props;\n        const { copyLink } = this.state;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>{t('Download')}</MenuItem>*/}\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                        )}\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    canCopyLink: PropTypes.bool\n};\n\nexport default withTranslation()(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            canCopyLink: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const canCopyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                canCopyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            canCopyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    canCopyLink={canCopyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}