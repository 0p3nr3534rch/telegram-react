{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Filters.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Player/Steaming/MP4/MP4Source.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","style","width","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","onUpdateChatPhoto","chat_id","photo","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","ChatStore","showOnline","showSavedMessages","small","dialog","big","t","isDeletedPrivateChat","classNames","onClick","pointer","DeletedAccount","fontSize","isMeChat","chat","letters","getChatLetters","src","getSrc","tileLoaded","typeId","getChatTypeId","tileColor","Math","abs","onLoad","draggable","alt","isPrivateChat","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","a","navigator","clipboard","writeText","console","error","copyOld","element","successful","document","createElement","contentEditable","readOnly","value","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","handleClose","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","key","aria-label","color","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","forEach","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerHTML","innerText","handleSearchKeyDown","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","clientUpdate","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","inset","toUpperCase","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","left","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","file","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","classes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","window","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","last_message","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","hidden","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","sin","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","target","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","min","scrollTo","DialogListItem","DialogsList","onClientUpdateChatList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","onUpdateAuthorizationState","authorizationState","isAuthorizationReady","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","FilterStore","orderedChatIds","b","orderCompare","isDifferentOrder","max","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","from","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","blur","concatSearchResults","results","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","remove","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","options","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","Filters","onClientUpdateCacheLoaded","cachedFilters","CacheStore","setSelection","onWindowResize","onUpdateChatFilters","chat_filter_id","handleMainClick","handleFilterClick","handleWheel","deltaY","currentTarget","scrollLeft","filterRef","filtersRef","filterSelectionRef","throttle","transition","main","scrollWidth","filterSelection","transitionStyle","cssText","scrollIntoView","onWheel","MainMenuButton","handleMenuOpen","anchorEl","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","Radio","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","undefined","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","titleRef","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","divRef","offsetLeft","offsetTop","offsetWidth","div","getUserShortName","AddParticipants","newArray","selectedItems","focusedItem","array","newMap","newFocusedItem","isDeleting","wrapPanel","wrapPanelRef","prevHeight","prevOffsetHeight","prevMap","itemsRef","prevCSSText","prevScrollTop","currentHeight","collapsed","requestAnimationFrame","animateItems","selectedItemsMap","publicItems","publicChats","handleSearchClose","handleBackspace","lastItem","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","container","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","now","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onDone","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","startTime","time","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","n","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","shook","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stop","stream","getAudioTracks","track","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","start","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","Done","Suspense","fallback","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","code","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","zIndex","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","paused","fadeOutVolume","pausedForRecord","fadeInVolume","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","play","onClientUpdateMediaBlob","video_note","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","mime_type","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","currentVolume","volumeInterval","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","autoplay","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","scroll","STICKER_SET","disableElevation","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","every","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","loop","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MP4Source","getBufferAsync","handleSourceBufferUpdateEnd","sourceBuffer","mediaSource","mp4file","updating","logSourceBufferRanges","pendingUpdates","buffer","sampleNum","isLast","LOG","releaseUsedSamples","appendBuffer","readyState","sourceBuffers","endOfStream","nextBufferStart","ready","bufferedTime","beforeMoovBufferSize","moovBufferSize","bufferSize","seekBufferSize","currentBufferSize","nbSamples","expectedSize","expected_size","seeking","init","videoDuration","MediaSource","mp4File","MP4Box","createFile","onMoovStart","onError","onReady","isFragmented","timescale","fragment_duration","tracks","addSourceBuffer","initSegs","initializeSegmentation","onupdateend","onSegment","is_last","nb_samples","timestampOffset","loadNextBuffer","codec","trackType","isTypeSupported","setSegmentOptions","buffered","seekInfo","seek","end","ranges","hasRange","nextBuffer","fileStart","byteLength","flush","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","animationData","getMediaFile","supportsStreaming","getMediaPreviewFile","getURL","handleSeeking","prevTimeout","handleSeeked","handlePlayerSeeked","timeUpdate","handleProgress","handleWaiting","lottieRef","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","onSeeking","onSeeked","onWaiting","onProgress","poster","fr","readAsArrayBuffer","filePart","getArrayBuffer","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/5.59d263e7.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = {\n            isSmallWidth: AppStore.isSmallWidth,\n            filters: FilterStore.filters,\n            chatList: FilterStore.chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n\n        this.setSelection();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            this.setSelection(false);\n        });\n    };\n\n    onWindowResize = event => {\n        this.setSelection(false);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            this.setSelection(false);\n        });\n    };\n\n    setSelection(transition = true) {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.15s ease, width 0.15s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item){\n            item.scrollIntoView();\n        }\n    }\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        console.log('[cm] filters.render', filters);\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        return {\n            left: this.divRef.current.offsetLeft,\n            top: this.divRef.current.offsetTop,\n            width: this.divRef.current.offsetWidth,\n            height: this.divRef.current.offsetHeight\n        }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('user-chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='user-chip-delete'>\n                    <CloseIcon className='user-chip-delete-icon'/>\n                </div>\n                <div className='user-chip-name'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            const currentHeight = wrapPanel.scrollHeight;\n            const currentOffsetHeight = wrapPanel.offsetHeight;\n\n            const expanded = currentHeight > prevHeight;\n            const collapsed = currentHeight < prevHeight;\n            // console.log('[wrap]', prevHeight, prevOffsetHeight, currentHeight, currentOffsetHeight, expanded, collapsed);\n\n            const maxHeight = 123;\n            if (expanded) {\n                if (prevHeight < maxHeight) {\n                    // console.log('[wrap] animate expand', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        setTimeout(() => {\n                            // console.log('[wrap] scrollIntoView');\n                            this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                        }, 250);\n                        // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] expand', prevHeight, maxHeight);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    //wrapPanel.scrollTop = wrapPanel.scrollHeight;\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                    // console.log('[wrap] expand', wrapPanel.style.cssText);\n                }\n            } else if (collapsed) {\n                if (currentHeight < maxHeight) {\n                    // console.log('[wrap] animate collapse', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] collapse', prevHeight, maxHeight, wrapPanel.scrollTop, prevScrollTop);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    wrapPanel.scrollTop = prevScrollTop;\n                    // console.log('[wrap] collapse', wrapPanel.style.cssText, wrapPanel.scrollTop);\n                }\n            } else {\n                if (isDeleting) {\n                    wrapPanel.style.cssText = prevCSSText;\n                    wrapPanel.scrollTop = prevScrollTop;\n                } else {\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                }\n            }\n\n            this.animateItems(prevMap);\n        });\n    };\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <Filters/>\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[keydown] input.handleKeyDown', key, keyCode, altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // ctrl+alt+0 fix\n            case 48: {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n\n                break;\n            }\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        console.log('[recorder] stop', this.recorder, cancelled);\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        console.log('[recorder] handleRecord', this.recorder);\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            console.log('[recorder] stream start', this.recorder);\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            console.log('[recorder] stream ready', this.recorder);\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n            console.log('[recorder] onstart', this.recorder);\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            console.log('[recorder] onstop', this.recorder, cancelled);\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        console.log('[recorder] start', this.recorder);\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport MP4Box from 'mp4box';\nimport { LOG, logSourceBufferRanges } from '../Utils/Common';\n\nexport default class MP4Source {\n    constructor(video, getBufferAsync) {\n        this.mp4file = null;\n        this.nextBufferStart = 0;\n        this.mediaSource = null;\n        this.ready = false;\n        this.bufferedTime = 40;\n\n        this.beforeMoovBufferSize = 32 * 1024;\n        this.moovBufferSize = 512 * 1024;\n        this.bufferSize = 1024 * 1024;\n        this.seekBufferSize = 1024 * 1024;\n\n        this.currentBufferSize = this.beforeMoovBufferSize;\n        this.nbSamples = 10;\n        this.video = video;\n        this.getBufferAsync = getBufferAsync;\n        this.expectedSize = this.video.video.expected_size;\n\n        this.seeking = false;\n        this.loading = false;\n        this.url = null;\n\n        this.init(video.duration);\n    }\n\n    init(videoDuration) {\n        const mediaSource = new MediaSource();\n        mediaSource.addEventListener('sourceopen', async () => {\n            LOG('[MediaSource] sourceopen start', this.mediaSource, this);\n\n            if (this.mediaSource.sourceBuffers.length > 0) return;\n\n            const mp4File = MP4Box.createFile();\n            mp4File.onMoovStart = () => {\n                LOG('[MP4Box] onMoovStart');\n                this.currentBufferSize = this.moovBufferSize;\n            };\n            mp4File.onError = error => {\n                LOG('[MP4Box] onError', error);\n            };\n            mp4File.onReady = info => {\n                LOG('[MP4Box] onReady', info);\n                this.ready = true;\n                this.currentBufferSize = this.bufferSize;\n                const { isFragmented, timescale, fragment_duration, duration } = info;\n\n                if (!fragment_duration && !duration) {\n                    this.mediaSource.duration = videoDuration;\n                    this.bufferedTime = videoDuration;\n                } else {\n                    this.mediaSource.duration = isFragmented\n                        ? fragment_duration / timescale\n                        : duration / timescale;\n                }\n\n                for (let i = 0; i < info.tracks.length; i++) {\n                    this.addSourceBuffer(mp4File, this.mediaSource, info.tracks[i]);\n                }\n\n                const initSegs = mp4File.initializeSegmentation();\n                LOG('[MP4Box] initializeSegmentation', initSegs);\n\n                for (let i = 0; i < initSegs.length; i++) {\n                    const { user: sourceBuffer } = initSegs[i];\n                    sourceBuffer.onupdateend = () => {\n                        sourceBuffer.initSegs = true;\n                        sourceBuffer.onupdateend = this.handleSourceBufferUpdateEnd;\n                    };\n                    sourceBuffer.appendBuffer(initSegs[i].buffer);\n                }\n\n                LOG('[MP4Box] start fragmentation');\n                mp4File.start();\n            };\n            mp4File.onSegment = (id, sourceBuffer, buffer, sampleNum, is_last) => {\n                const isLast = (sampleNum + this.nbSamples) > sourceBuffer.nb_samples;\n\n                LOG('[MP4Box] onSegment', id, buffer, `${sampleNum}/${sourceBuffer.nb_samples}`, isLast, sourceBuffer.timestampOffset);\n\n                if (mediaSource.readyState !== 'open') {\n                    return;\n                }\n\n                sourceBuffer.pendingUpdates.push({ id, buffer, sampleNum, isLast });\n                if (sourceBuffer.initSegs && !sourceBuffer.updating) {\n                    this.handleSourceBufferUpdateEnd({ target: sourceBuffer, mediaSource: this.mediaSource });\n                }\n            };\n\n            this.nextBufferStart = 0;\n            this.mp4file = mp4File;\n            LOG('[MediaSource] sourceopen end', this, this.mp4file);\n\n            this.loadNextBuffer();\n        });\n        mediaSource.addEventListener('sourceended', () => {\n            LOG('[MediaSource] sourceended', mediaSource.readyState);\n        });\n        mediaSource.addEventListener('sourceclose', () => {\n            LOG('[MediaSource] sourceclose', mediaSource.readyState);\n        });\n\n        this.mediaSource = mediaSource;\n    }\n\n    addSourceBuffer(file, source, track) {\n        if (!track) return null;\n\n        const { id, codec, type: trackType, nb_samples } = track;\n        const type = `video/mp4; codecs=\"${codec}\"`;\n        if (!MediaSource.isTypeSupported(type)) {\n            LOG('[addSourceBuffer] not supported', type);\n            return null;\n        }\n        // if (trackType !== 'video') {\n        //     LOG('[addSourceBuffer] skip', trackType);\n        //     return null;\n        // }\n\n        const sourceBuffer = source.addSourceBuffer(type);\n        sourceBuffer.id = id;\n        sourceBuffer.pendingUpdates = [];\n        sourceBuffer.nb_samples = nb_samples;\n        file.setSegmentOptions(id, sourceBuffer, { nbSamples: this.nbSamples });\n        LOG('[addSourceBuffer] add', id, codec, trackType);\n\n        return sourceBuffer;\n    }\n\n    handleSourceBufferUpdateEnd = event => {\n        const { target: sourceBuffer } = event;\n        const { mediaSource, mp4file } = this;\n\n        if (!sourceBuffer) return;\n        if (sourceBuffer.updating) return;\n\n        logSourceBufferRanges(sourceBuffer, 0, 0);\n\n        const { pendingUpdates } = sourceBuffer;\n        if (!pendingUpdates) return;\n        if (!pendingUpdates.length) {\n            if (sourceBuffer.isLast && mediaSource.readyState === 'open') {\n                LOG('[SourceBuffer] updateend endOfStream start', sourceBuffer.id);\n                if (Array.from(mediaSource.sourceBuffers).every(x => !x.pendingUpdates.length && !x.updating)) {\n                    mediaSource.endOfStream();\n                    LOG('[SourceBuffer] updateend endOfStream stop', sourceBuffer.id);\n                }\n            }\n            return;\n        }\n\n        const update = pendingUpdates.shift();\n        if (!update) return;\n\n        const { id, buffer, sampleNum, isLast } = update;\n\n        if (sampleNum) {\n            LOG('[SourceBuffer] updateend releaseUsedSamples', id, sampleNum);\n            mp4file.releaseUsedSamples(id, sampleNum);\n        }\n\n        LOG('[SourceBuffer] updateend end', sourceBuffer.id, sourceBuffer.pendingUpdates.length);\n        sourceBuffer.isLast = isLast;\n        sourceBuffer.appendBuffer(buffer);\n    };\n\n    getURL() {\n        this.url = this.url || URL.createObjectURL(this.mediaSource);\n\n        return this.url;\n    }\n\n    seek(currentTime, buffered) {\n        const seekInfo = this.mp4file.seek(currentTime, true);\n        this.nextBufferStart = seekInfo.offset;\n\n        let loadNextBuffer = buffered.length === 0;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime + this.bufferedTime > end) {\n                loadNextBuffer = true;\n                break;\n            }\n        }\n\n        LOG('[player] onSeeked', loadNextBuffer, currentTime, seekInfo, this.nextBufferStart);\n        if (loadNextBuffer) {\n            this.loadNextBuffer(true);\n        }\n    }\n\n    timeUpdate(currentTime, duration, buffered) {\n        const ranges = [];\n        for (let i = 0; i < buffered.length; i++) {\n            ranges.push({ start: buffered.start(i), end: buffered.end(i)})\n        }\n\n        let loadNextBuffer = buffered.length === 0;\n        let hasRange = false;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime <= end) {\n                hasRange = true;\n                if (end < duration && currentTime + this.bufferedTime > end) {\n                    loadNextBuffer = true;\n                    break;\n                }\n            }\n        }\n\n        if (!hasRange) {\n            loadNextBuffer = true;\n        }\n\n        LOG('[player] timeUpdate', loadNextBuffer, currentTime, duration, JSON.stringify(ranges));\n        if (loadNextBuffer) {\n            this.loadNextBuffer();\n        }\n    }\n\n    async loadNextBuffer(seek = false) {\n        const { nextBufferStart, loading, currentBufferSize, mp4file } = this;\n        LOG('[player] loadNextBuffer', nextBufferStart === undefined, loading, !mp4file);\n        if (!mp4file) return;\n        if (nextBufferStart === undefined) return;\n        if (loading) return;\n\n        this.loading = true;\n        let bufferSize = seek ? this.seekBufferSize : this.bufferSize;\n        if (nextBufferStart + bufferSize > this.expectedSize) {\n            bufferSize = this.expectedSize - nextBufferStart;\n        }\n        const nextBuffer = await this.getBufferAsync(nextBufferStart, nextBufferStart + bufferSize);\n        nextBuffer.fileStart = nextBufferStart;\n\n        LOG('[player] loadNextBuffer start', nextBuffer.byteLength, nextBufferStart);\n        if (nextBuffer.byteLength) {\n            this.nextBufferStart = mp4file.appendBuffer(nextBuffer);\n        } else {\n            this.nextBufferStart = undefined;\n        }\n        LOG('[player] loadNextBuffer stop', nextBuffer.byteLength, nextBufferStart, this.nextBufferStart);\n\n        if (nextBuffer.byteLength < currentBufferSize) {\n            LOG('[player] loadNextBuffer flush');\n            this.mp4file.flush();\n        }\n\n        this.loading = false;\n        if (!this.ready) {\n            LOG('[player] loadNextBuffer next');\n            this.loadNextBuffer();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport MP4Source from '../Player/Steaming/MP4/MP4Source';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\nimport { LOG } from '../Player/Steaming/Utils/Common';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static async getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    static async getBufferAsync(fileId, start, end) {\n        const offset = start;\n        const limit = end - start;\n\n        // console.log('[GET_BUFFER] downloadFile');\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: 1,\n            offset,\n            limit,\n            synchronous: true\n        });\n\n        // console.log('[GET_BUFFER] readFilePart');\n\n        const filePart = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id: fileId,\n            offset,\n            count: limit\n        });\n\n        // console.log('[GET_BUFFER] getArrayBuffer');\n\n        const buffer = await MediaViewerContent.getArrayBuffer(filePart.data);\n\n        // console.log('[GET_BUFFER] result', result, buffer);\n\n        return buffer;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n                    src = source.getURL();\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n\n                    src = source.getURL();\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    handleSeeking = () => {\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onSeeking', currentTime);\n\n        if (this.prevTimeout) {\n            clearTimeout(this.prevTimeout);\n            this.prevTimeout = null;\n        }\n\n        this.prevTimeout = setTimeout(() => {\n            LOG('[player] onSeeking timeout', currentTime === video.currentTime, currentTime, video.currentTime);\n            if (currentTime === video.currentTime) {\n                this.handleSeeked(currentTime, buffered);\n            }\n        }, 150);\n    }\n\n    handleSeeked = (time, buffered) => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        source.seek(time, buffered);\n    }\n\n    handlePlayerSeeked = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onPlayerSeeked', currentTime);\n\n        source.seek(currentTime, buffered);\n    };\n\n    handleTimeUpdate = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleProgress = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleWaiting = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, buffered } = video;\n        source.seek(currentTime, buffered);\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                        onSeeking={this.handleSeeking}\n                        onSeeked={this.handlePlayerSeeked}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onWaiting={this.handleWaiting}\n                        onProgress={this.handleProgress}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {/*{ supportsStreaming && <a style={{ left: 0, top: 0, position: 'absolute' }} onClick={this.handleClick}>Load Buffer</a>}*/}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}