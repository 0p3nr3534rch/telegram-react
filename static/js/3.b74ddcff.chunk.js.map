{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","loadChatContents","getGroupChatMembers","loadUsersContent","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","popup","setProfileMediaViewerContent","handleOpenChat","_this$props5","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props6","migratedCounters","_this$props7","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","_this$props8","_counters$map","el","_counters$map2","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","_ref","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","headerSearchButton","SpeedDialIcon_default","icon","Search_default","openIcon","SharedAudios","getFilter","getItem","Tile_SharedMedia_SharedDocument","isValidMessage","isValidContent","insertByOrder","array","element","comparator","toConsumableArray","slice","messageComparatorDesc","right","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","onUpdateNewMessage","loadMessageContents","onUpdateDeleteMessages","_this$state3","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","onLoadMigratedNext","loadIncomplete","fromMessageId","incomplete","_args","undefined","loading","migrateCompleted","query","sender_user_id","from_message_id","offset","finally","messages","setItems","_args2","completed","handleScroll","listRef","_callee3","_context3","handleCloseSearch","searchItems","searchListRef","_this$state4","searchMessages","ColumnRight_SharedMedia_SharedMediaHeader","onScroll","Boolean","sharedDocumentsSearchList","default","SharedDocuments","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","userChatId","openSharedMedia","openSharedAudios","openSharedDocuments","openGroupInCommon","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","_x2","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedAudios","ColumnRight_SharedMedia_SharedDocuments","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","Date","includes","splice","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","_ref4","category","error","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","total_count","_callee4","_context4","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","onClientUpdatePhotoBlob","fileId","src","getSrc","isBlurred","isBlurredThumbnail","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","media-blurred","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","accentStyles","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","getSize","PHOTO_SIZE","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","_x3","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","_x4","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Check_default","messageSelectTick","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","_ref5","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatFullInfo","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.b74ddcff.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedMedia,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedMedia}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedDocument: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between } from '../../../Utils/Common';\nimport { isSupergroup } from '../../../Utils/Chat';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedAudios.css';\n\nconst styles = theme => ({\n    sharedDocumentsSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass SharedAudios extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: []\n        };\n    }\n\n    getFilter = () => {\n        return { '@type': 'searchMessagesFilterAudio' };\n    };\n\n    getItem = x => {\n        return <SharedDocument key={`chat_id=${x.chat_id}_message_id=${x.id}`} chatId={x.chat_id} messageId={x.id} />;\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    isValidContent = content => {\n        if (!content) return false;\n\n        return content['@type'] === 'messageAudio';\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    insertByOrder = (array, element, comparator) => {\n        let i = 0;\n        for (; i < array.length && comparator(array[i], element) < 0; i++) {}\n\n        return [...array.slice(0, i), element, ...array.slice(i)];\n    };\n\n    messageComparatorDesc = (left, right) => {\n        return left.id - right.id;\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: this.insertByOrder(items, message, this.messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: this.insertByOrder(migratedItems, message, this.messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id, content } = message;\n\n        if (chat_id !== chatId) return;\n        // console.log(`SharedDocuments.onUpdateNewMessage chat_id=${chat_id} message_id=${message.id}`, this.state.items);\n\n        if (this.isValidContent(content)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext();\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.onLoadNext();\n    };\n\n    onLoadMigratedNext = async (loadIncomplete = true) => {\n        const { chatId, migratedChatId } = this.props;\n        const { migratedItems: items } = this.state;\n\n        if (!isSupergroup(chatId)) return;\n        if (!migratedChatId) return;\n\n        if (this.loading) return;\n        if (this.migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: this.getFilter()\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.state.migratedItems !== items) return;\n\n        this.migrateCompleted = result.messages.length === 0;\n        if (this.migrateCompleted) return;\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ migratedItems: items.concat(result.messages.filter(this.isValidMessage)) });\n\n        const incomplete = result.messages.length > 0 && result.messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n        if (loadIncomplete && incomplete) {\n            this.onLoadMigratedNext(false);\n        }\n    };\n\n    onLoadNext = async (loadIncomplete = true) => {\n        // console.log('SharedDocuments.onLoadNext');\n        const { chatId } = this.props;\n        const { items } = this.state;\n\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: this.getFilter()\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.state.items !== items) return;\n\n        this.completed = result.messages.length === 0;\n        if (this.completed) {\n            this.onLoadMigratedNext(true);\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: items.concat(result.messages.filter(this.isValidMessage)) });\n\n        const incomplete = result.messages.length > 0 && result.messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n        if (loadIncomplete && incomplete) {\n            this.onLoadNext(false);\n        }\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!this.completed) {\n                this.onLoadNext();\n            } else {\n                this.onLoadMigratedNext();\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearch = async text => {\n        if (!text || !text.trim()) {\n            this.handleCloseSearch();\n\n            return;\n        }\n\n        const { chatId } = this.props;\n\n        this.searchText = text;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: text.trim(),\n            sender_user_id: 0,\n            from_message_id: 0,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: this.getFilter()\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.searchText !== text) return;\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ searchItems: result.messages.filter(this.isValidMessage) });\n    };\n\n    handleCloseSearch = () => {\n        this.searchText = null;\n        this.setState({ searchItems: [] });\n    };\n\n    render() {\n        const { classes, t, onClose } = this.props;\n        const { items, migratedItems, searchItems } = this.state;\n        const { searchText } = this;\n\n        const messages = items.concat(migratedItems).map(this.getItem);\n        const searchMessages = searchItems.map(this.getItem);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={t('AudioTitle')}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.handleSearch}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div className='shared-documents-list-wrapper'>\n                    <div ref={this.listRef} className='shared-documents-list' onScroll={this.handleScroll}>\n                        {messages}\n                    </div>\n                    {Boolean(searchText) && (\n                        <div\n                            ref={this.searchListRef}\n                            className={classNames('shared-documents-search-list', classes.sharedDocumentsSearchList)}>\n                            {searchMessages}\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between } from '../../../Utils/Common';\nimport { isSupergroup } from '../../../Utils/Chat';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocuments.css';\n\nconst styles = theme => ({\n    sharedDocumentsSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass SharedDocuments extends React.Component {\n    constructor(props) {\n        console.log('SharedDocuments.ctor');\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: []\n        };\n    }\n\n    getFilter = () => {\n        return { '@type': 'searchMessagesFilterDocument' };\n    };\n\n    getItem = x => {\n        return <SharedDocument key={`chat_id=${x.chat_id}_message_id=${x.id}`} chatId={x.chat_id} messageId={x.id} />;\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    isValidContent = content => {\n        if (!content) return false;\n\n        return content['@type'] === 'messageDocument';\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    insertByOrder = (array, element, comparator) => {\n        let i = 0;\n        for (; i < array.length && comparator(array[i], element) < 0; i++) {}\n\n        return [...array.slice(0, i), element, ...array.slice(i)];\n    };\n\n    messageComparatorDesc = (left, right) => {\n        return left.id - right.id;\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: this.insertByOrder(items, message, this.messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: this.insertByOrder(migratedItems, message, this.messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext();\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.onLoadNext();\n    };\n\n    onLoadMigratedNext = async (loadIncomplete = true) => {\n        const { chatId, migratedChatId } = this.props;\n        const { migratedItems: items } = this.state;\n\n        if (!isSupergroup(chatId)) return;\n        if (!migratedChatId) return;\n\n        if (this.loading) return;\n        if (this.migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: this.getFilter()\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.state.migratedItems !== items) return;\n\n        this.migrateCompleted = result.messages.length === 0;\n        if (this.migrateCompleted) return;\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ migratedItems: items.concat(result.messages.filter(this.isValidMessage)) });\n\n        const incomplete = result.messages.length > 0 && result.messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n        if (loadIncomplete && incomplete) {\n            this.onLoadMigratedNext(false);\n        }\n    };\n\n    onLoadNext = async (loadIncomplete = true) => {\n        // console.log('SharedDocuments.onLoadNext');\n        const { chatId } = this.props;\n        const { items } = this.state;\n\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: this.getFilter()\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.state.items !== items) return;\n\n        this.completed = result.messages.length === 0;\n        if (this.completed) {\n            this.onLoadMigratedNext(true);\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: items.concat(result.messages.filter(this.isValidMessage)) });\n\n        const incomplete = result.messages.length > 0 && result.messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n        if (loadIncomplete && incomplete) {\n            this.onLoadNext(false);\n        }\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!this.completed) {\n                this.onLoadNext();\n            } else {\n                this.onLoadMigratedNext();\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearch = async text => {\n        if (!text || !text.trim()) {\n            this.handleCloseSearch();\n\n            return;\n        }\n\n        const { chatId } = this.props;\n\n        this.searchText = text;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: text.trim(),\n            sender_user_id: 0,\n            from_message_id: 0,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: this.getFilter()\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.searchText !== text) return;\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ searchItems: result.messages.filter(this.isValidMessage) });\n    };\n\n    handleCloseSearch = () => {\n        this.searchText = null;\n        this.setState({ searchItems: [] });\n    };\n\n    render() {\n        const { classes, t, onClose } = this.props;\n        const { items, migratedItems, searchItems } = this.state;\n        const { searchText } = this;\n        // console.log('SharedDocuments.render', items, migratedItems, this.state);\n\n        const messages = items.concat(migratedItems).map(this.getItem);\n        const searchMessages = searchItems.map(this.getItem);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={t('DocumentsTitle')}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.handleSearch}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div className='shared-documents-list-wrapper'>\n                    <div ref={this.listRef} className='shared-documents-list' onScroll={this.handleScroll}>\n                        {messages}\n                    </div>\n                    {Boolean(searchText) && (\n                        <div\n                            ref={this.searchListRef}\n                            className={classNames('shared-documents-search-list', classes.sharedDocumentsSearchList)}>\n                            {searchMessages}\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openGroupInCommon: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openGroupInCommon: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedMedia,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}