{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","checked","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","item","photoAndVideoFilter","filterRef","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","r","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","toUpperCase","paddingLeft","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","handleCloseContextMenu","onContextMenu","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","isValidMessage","loadMessageContents","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","SharedVideos","SharedVoiceNote","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","addNew","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","controls","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","lastCompleted","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.c9c2cc90.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId, media } = update;\n        if (chatId !== this.props.chatId) return;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let selectedIndex = -1;\n        if (photoAndVideo.length > 0) {\n            selectedIndex = 1;\n        } else if (document.length > 0) {\n            selectedIndex = 2;\n        } else if (audio.length > 0) {\n            selectedIndex = 3;\n        } else if (url.length > 0) {\n            selectedIndex = 4;\n        } else if (voiceNote.length > 0) {\n            selectedIndex = 5;\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1) {\n            item = photoAndVideoFilter;\n            left = photoAndVideoFilter.offsetLeft + 7;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2) {\n            item = documentFilter;\n            left = documentFilter.offsetLeft + 7;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3) {\n            item = audioFilter;\n            left = audioFilter.offsetLeft + 7;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4) {\n            item = urlFilter;\n            left = urlFilter.offsetLeft + 7;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5) {\n            item = voiceNoteFilter;\n            left = voiceNoteFilter.offsetLeft + 7;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div ref={this.filtersRef} className='filters shared-media-tabs-container'>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            {t('SharedMediaTab2')}\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            {t('SharedFilesTab2')}\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            {t('SharedMusicTab2')}\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            {t('SharedLinksTab2')}\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            {t('SharedVoiceTab2')}\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {!isMe && (username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            {/*<Divider />*/}\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            {/*<Divider />*/}\n                            <SharedMediaTabs chatId={chatId}/>\n                            <List className='shared-media-list'>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        // console.trace('[media] setSelection')\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update, false);\n    };\n\n    onUpdateChatOrder = (update, addNew = true) => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (addNew && currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', type, offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[p] GETCHATS stop', replace, type, result);\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                <Meta\n                                    className={classNames('meta-text', {\n                                        'meta-bubble': isMetaBubble(chatId, messageId)\n                                    })}\n                                    chatId={chatId}\n                                    messageId={messageId}\n                                    date={date}\n                                    editDate={edit_date}\n                                    views={views}\n                                    onDateClick={this.handleDateClick}\n                                />\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.lastCompleted = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n\n            // load media\n            getChatMedia(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        // if (this.lastCompleted) return;\n\n        console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n        console.log('[p] getChatHistory result', fromMessageId, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n                // this.lastCompleted = true;\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading, this.completed]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}