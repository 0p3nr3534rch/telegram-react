{"version":3,"sources":["Notifications.js","Utils/User.js","Stores/SupergroupStore.js","Stores/FileStore.js","Components/Viewer/FileProgress.js","Stores/MessageStore.js","Utils/File.js","Components/Tile/DocumentTile.js","Stores/PlayerStore.js","Components/Message/Media/AudioAction.js","Utils/Media.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/Animation.js","Components/Tile/UserTileControl.js","Components/Message/Media/Contact.js","Components/Message/Media/Photo.js","Components/Theme.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Sticker.js","Components/Message/Media/Venue.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/Message/Media/VideoNote.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Actions/Client.js","Utils/Currency.js","Components/Message/MessageAuthor.js","Utils/ServiceMessage.js","Utils/Message.js","Stores/BasicGroupStore.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Stores/StickerStore.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","MainPage.js"],"names":["withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","build","maxSnack","MAX_SNACK","props","React","Component","displayName","concat","getDisplayName","getUserStatus","user","status","id","SERVICE_NOTIFICATIONS_USER_ID","type","was_online","now","Date","wasOnline","diff","getTime","minutes","Math","floor","today","setHours","hours","dateFormat","yesterday","setDate","getDate","isUserOnline","getUserFullName","first_name","last_name","getUserShortName","userId","UserStore","get","isUserBlocked","fullInfo","getFullInfo","is_blocked","getUserStatusOrder","expires","getProfilePhoto","userProfilePhoto","sizes","length","smallPhotoSize","getSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","@type","small","photo","big","getProfilePhotoDateHint","added_date","date","store","SupergroupStore","_this","call","onUpdate","update","set","supergroup","emit","setFullInfo","supergroup_id","supergroup_full_info","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","items","Map","fullInfoItems","setMaxListeners","Infinity","EventEmitter","window","useReadFile","FileStore","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","file","onUpdateFile","abrupt","onUpdateAuthorizationState","stop","_x","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","idb_key","local","downloads","has","is_downloading_completed","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callbacks","db","WeakMap","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","circleStyle","circle","FileProgress","currentFile","state","nextFile","setState","prevFile","isDownloading","download","wasActive","is_downloading_active","isActive","isUploading","upload","is_uploading_active","getProgressParams","isCompleted","progressSize","size","downloaded_size","uploaded_size","completeAnimation","prevPropsFile","nextProps","nextState","_this$props","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","on","_this$props2","cancelButton","zIndex","completeIcon","_this$state","_this$getProgressPara","_this$getProgressPara2","slicedToArray","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","style","background","className","CircularProgress","classes","variant","thickness","Close_default","defaultProps","MessageStore","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","messages","getSizeString","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","display","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","map","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","toConsumableArray","keys","saveOrDownload","fileName","mime","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","preloadMediaViewerContent","index","history","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","getChatUserId","_photo10","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickersContent","stickers","getSrc","getDownloadedSize","getUploadedSize","getExtension","parts","split","pop","toLowerCase","DocumentTile","onClientUpdateDocumentThumbnailBlob","forceUpdate","openMedia","classNames","document-tile-background","onClick","src","draggable","alt","Components_Viewer_FileProgress","withStyles","theme","palette","primary","main","borderRadius","withTheme","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","assertThisInitialized","getSearchMessagesFilter","totalCount","query","from_message_id","offset","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","AudioAction","onClientUpdateMediaEnd","active","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","onClientUpdateMediaActive","_this$props3","_this$state3","durationString","getDurationString","currentTimeString","_this$props4","audioDuration","_this$state4","_this$state5","isDownloadingActive","isUploadingActive","sizeString","isBlurredThumbnail","max","THUMBNAIL_BLURRED_SIZE","getAudioTitle","file_name","title","performer","trimmedTitle","trim","trimmedPerformer","DocumentAction","Document","Components_Tile_DocumentTile","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","Audio","onClientUpdateMediaPlay","onClientUpdateMediaPause","nextContext","_this$props5","Pause_default","PlayArrow_default","Message_Media_AudioAction","Animation","startStopPlayer","videoRef","current","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","Boolean","ApplicationStore","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","displaySize","t","_this$props$animation","mime_type","fitPhotoSize","getFitSize","mimeType","isBlurred","isGif","ref","poster","muted","autoPlay","loop","playsInline","Fragment","media-blurred","PHOTO_DISPLAY_SIZE","withTranslation","UserTileControl","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","stopPropagation","letters","getLetters","charAt","getUserLetters","tileColor","abs","defineProperty","pointer","Contact","phone_number","fullName","number","formatPhoneNumber","Components_Tile_UserTileControl","Photo","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","objectSpread","PHOTO_THUMBNAIL_SIZE","borderStyle","borderColor","divider","accentStyles","accentColorDark","color","accentBackgroundLight","light","Game","getContent","Message_Media_Animation","Message_Media_Photo","text","description","formattedText","getFormattedText","Location","onClientUpdateLocationBlob","longitude","latitude","rel","Room_default","fontSize","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","PollOption","getTitleString","count","canBeSelected","handleClick","onVote","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","LinearProgress","bar","progressBar","enhance","compose","backgroundColor","margin","right","bottom","transition","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","onContextMenu","Message_Media_PollOption","Popover","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","e","MenuItem","Dialog","transitionDuration","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Sticker","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","fitSize","stickerStyle","STICKER_DISPLAY_SIZE","Venue","address","Message_Media_Location","Video","onClientUpdateVideoThumbnailBlob","_this$props$video","MediaStatus","onUpdateMessageContentOpened","isOpened","isContentOpened","openedIcon","VideoNote","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","Media_MediaStatus","VolumeOff_default","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider","slider","thumbWrapper","thumb","min","maxWidth","VoiceNote","Message_Media_VoiceNoteSlider","openUser","popup","openChat","highlightMessage","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","MessageAuthor","openUserCommand","openChatCommand","isPrivateChat","getChatTitle","serviceMap","isServiceMessage","ttl","getServiceMessageContent","isOutgoing","getMyId","isChannel","is_channel","Components_Message_MessageAuthor","members","member_user_ids","reduce","accumulator","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","substring","domain_name","getTitle","start","end","entities","beforeEntityText","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getDateHint","getMedia","Message_Media_Audio","Message_Media_Contact","Message_Media_Document","Message_Media_Game","Message_Media_Poll","Message_Media_Sticker","Message_Media_Venue","Message_Media_Video","Message_Media_VideoNote","Message_Media_VoiceNote","getSenderUserId","filterMessages","emoji","isMediaContent","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","getMediaTitle","forward_info","getAuthor","hasAudio","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","stickerSet","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openContact","openGame","isDeletedMessage","BasicGroupStore","basic_group","basic_group_id","basic_group_full_info","groupId","group","basicgroup","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton","iconButton","aria-label","AttachFile_default","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","canSendPhotos","ListItemIcon","icons_Photo_default","ListItemText","canSendDocuments","icons_Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","assign","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","hint","dialogRoot","contentRoot","Typography","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider","dividerRoot","List","listRoot","ListItem","listItem","button","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","Reply","onGetMessageResult","handleOpen","getReplyPhotoSize","onMouseDown","Components_Tile_ReplyTile","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","closeIconButton","action","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","StickerStore","sticker_set_ids","_this$stickerSet","is_installed","EmojiPickerButton","lazy","all","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","replyToMessageId","setInputFocus","onClientUpdateChatId","nextChatId","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","isMeChat","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_default","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","notification_settings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","use_default_mute_for","mute_for","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","basicGroupId","hasBasicGroupId","onUpdateSupergroup","supergroupId","isSupergroup","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","ColumnMiddle_NotificationsCommandControl","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderName","notificationSettings","getNotificationSettings","getChatMuteFor","getMessageDate","dayStart","day","getDay","weekStart","getChatSubtitleWithoutTyping","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getSupergroupStatus","isAccentChatSubtitleWithoutTyping","getChatUsername","username","getChatPhoneNumber","isGroupChat","isChannelChat","showSavedMessages","getGroupChatMembers","fallbackValue","getChatFullInfo","getSupergroupId","getPhotoFromChat","getChatShortTitle","can_send_media_messages","canSendMessages","showChatDraft","unread_count","unread_mention_count","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","getChatLetters","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","isChatMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","bio","getChatBio","isMe","member","sort","y","Components_Tile_UserControl","handleSelectUser","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","getMessageSenderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl","formControl","FormLabel","RadioGroup","FormControlLabel","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","last_message","getLastMessageContent","getLastMessageSenderName","DialogBadgeControl","unreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadMessageIcon","unreadCount","getChatUnreadCount","unreadMentionCount","getChatUnreadMentionCount","showUnreadCount","showDraftChat","muteClassName","dialogBadge","is_pinned","DialogMetaControl","getLastMessageDate","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","chatTypingString","getChatSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","container","onDragStart","onDragEnd","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","sender_name","author_signature","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","selectMessage","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props10","showUnreadSeparator","_this$props11","webPage","getWebPage","media","getUnread","senderUserId","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","chatPhotoStyle","ServiceMessage","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","loadPreviewContent","stickerId","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","addEventListener","handleMouseUp","removeEventListener","emojis","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","stickerIndex","join","paperRoot","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","STICKER_PREVIEW_DISPLAY_SIZE","flexWrap","flexDirection","alignItems","flexShrink","StickersHint","onClientUpdateStickersHint","mouseDownStickerId","stickersPerRow","showPreview","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ChatInfoDialog","handleClientUpdateDialogChatId","containerRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","LazyLottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.4cfac5cc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n                console.log(`readFile file_id=${file.id} result`, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport { isBlurredThumbnail, getAudioTitle };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst borderStyle = theme => ({\n    borderColor: {\n        borderColor: theme.palette.divider\n    }\n});\n\nconst accentStyles = theme => ({\n    accentColorDark: {\n        color: theme.palette.primary.main\n    },\n    accentBackgroundLight: {\n        background: theme.palette.primary.light\n    }\n});\n\nexport { borderStyle, accentStyles };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorDark)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorDark)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.assign(this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\n//import EmojiPickerButton from './../ColumnMiddle/EmojiPickerButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const stickers = await TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        });\n        console.log('Matched stickers', match[0], stickers);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickersHint',\n            hint: {\n                emoji: match[0],\n                stickers\n            }\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense fallback={<div/>}>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatMuteFor,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { draft_message } = chat;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n        const muteClassName = isChatMuted(chat) ? 'dialog-badge-muted' : '';\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div className={classNames(muteClassName, 'dialog-badge', classes.dialogBadge)}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { contextMenu, left, top, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div className='message-text'>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport StickerStore from '../../Stores/StickerStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, emojis, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n        const emoji = stickerIndex !== -1 ? emojis[stickerIndex].emojis.join(' ') : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && (\n                    <div className='sticker-set-dialog-preview'>\n                        <div className='sticker-set-dialog-preview-emoji'>{emoji}</div>\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\nimport DialogContent from '../Dialog/StickerSetDialog';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    state = {\n        hint: null,\n        stickerId: 0\n    };\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickersHint', this.onClientUpdateStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickersHint', this.onClientUpdateStickersHint);\n    }\n\n    onClientUpdateStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({ hint, stickerId: 0 });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        if (!sticker) return;\n        if (this.mouseDownStickerId !== sticker.sticker.id) return;\n        console.log('Match.sendSticker', sticker);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { hint } = this.state;\n        const { stickers: result } = hint;\n        const { stickers } = result;\n\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId, stickers, 8);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ stickerId, timestamp: now, showPreview: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, stickerId, showPreview } = this.state;\n        if (!hint) return null;\n\n        const { stickers } = hint;\n        if (!stickers) return null;\n\n        const { stickers: items } = stickers;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                {/*<div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>*/}\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n        const emoji = stickerIndex !== -1 ? sticker.emoji : null;\n\n        return (\n            <div\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && (\n                    <div className='sticker-set-dialog-preview'>\n                        {/*<div className='sticker-set-dialog-preview-emoji'>{emoji}</div>*/}\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { debounce, throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: 1\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\n//import Lottie from './Lottie';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst LazyLottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <LazyLottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback={<div></div>}>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from './Language';\nimport withTheme from './Theme';\nimport withSnackbarNotifications from './Notifications';\nimport ForwardDialog from './Components/Dialog/ForwardDialog';\nimport ChatInfo from './Components/ColumnRight/ChatInfo';\nimport Dialogs from './Components/ColumnLeft/Dialogs';\nimport DialogDetails from './Components/ColumnMiddle/DialogDetails';\nimport Footer from './Components/Footer';\nimport MediaViewer from './Components/Viewer/MediaViewer';\nimport ProfileMediaViewer from './Components/Viewer/ProfileMediaViewer';\nimport { highlightMessage } from './Actions/Client';\nimport ChatStore from './Stores/ChatStore';\nimport UserStore from './Stores/UserStore';\nimport ApplicationStore from './Stores/ApplicationStore';\nimport TdLibController from './Controllers/TdLibController';\nimport './TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);"],"sourceRoot":""}