{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onKeyDown","event","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","KeyboardManager","add","keyboardHandler","remove","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","handleClose","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","KeyboardHandler","connectPlayer","window","addEventListener","disconnectPlayer","removeEventListener","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","THUMBNAIL_BLURRED_SIZE_90","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","item","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","unregister","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","tabIndex","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","HeaderPlayer","videoRef","fadeOutVolume","pausedForRecord","fadeInVolume","hasAudio","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","onClientUpdateMediaBlob","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","mime_type","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","getMessageAudio","currentVolume","volumeInterval","useAudioRate","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","handleTest","chunk","filePart","getArrayBuffer","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","scale","poster","handleContentClick","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","getMediaPreviewFile","loadNextBuffer","isVideo","isVideoMessage","isAnimation","isAnimationMessage","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleWrapperClick","mouseDownTarget","handleWrapperMouseDown","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdatePictureInPicture","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"gMAcMA,G,kNACFC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,M,EAiCtBC,kBAAoB,SAAAC,GAAY,IAEpBC,EADkBD,EAAlBA,QACAC,GAERC,IAAgBC,KAAK,CACjB,QAAS,mBACTH,QAAS,CAAE,QAAS,cAAeC,QACpCG,KAAK,SAAAC,GACA,EAAKC,MAAMN,UAAYA,GACvB,EAAKO,SAAS,CACVV,MAAOQ,EAAOG,OAAOC,KAAK,U,kFA1BvBC,EAAWC,EAAWC,GAAW,IACxCZ,EAAYa,KAAKP,MAAjBN,QAEJA,GAAWA,IAAYU,EAAUV,SACjCa,KAAKd,kBAAkBC,K,0CAIV,IACTA,EAAYa,KAAKP,MAAjBN,QAEJA,GACAa,KAAKd,kBAAkBC,K,+BAoBrB,IACEA,EAAYa,KAAKP,MAAjBN,QACAH,EAAUgB,KAAKjB,MAAfC,MAER,OAAKG,EAGD,yBAAKc,UAAU,mBACX,yBAAKA,UAAU,yBAAyBjB,GACxC,kBAAC,IAAD,CACIG,QAASA,EACTe,YAAaC,KACbC,OAAQC,IAAkBC,WARjB,Q,gDAlDOb,EAAOV,GAAQ,IACnCI,EAAYM,EAAZN,QACAF,EAAqBF,EAArBE,iBAER,OAAIE,GAAWF,EACJ,CACHA,iBAAkBE,EAClBH,MAAO,MAIR,S,GAjBcuB,IAAMC,YA2EpB1B,O,yEClFT2B,E,WACF,WAAYC,GAAyB,IAAD,OAAdC,EAAc,uDAAJ,GAAI,yBASpCC,MAAQ,WACJ,EAAKC,SAAU,EACf,EAAKzB,GAAK0B,sBAAsB,EAAKC,gBAXL,KAcpCA,cAAgB,SAAAC,GAAc,IAClBC,EAAwB,EAAxBA,UAAWP,EAAa,EAAbA,SAEnB,EAAKO,UAAYD,EACjB,EAAKE,QAAUD,EAAYP,EAC3B,EAAKS,KAAKH,IAnBsB,KAsBpCG,KAAO,SAAAC,GAAQ,IACHP,EAA0C,EAA1CA,QAASH,EAAiC,EAAjCA,SAAUO,EAAuB,EAAvBA,UAAWN,EAAY,EAAZA,QAMtC,GAJIS,EAAMH,EAAYP,GAAYC,EAAQU,MAAM,SAAAC,GAAC,OAAIA,EAAEC,KAAOD,EAAEE,SAC5D,EAAKX,SAAU,IAGfA,EAAJ,CAEA,IAAMY,EAAOC,KAAKC,IAAIP,EAAMH,EAAWP,GACjCkB,EAAiB,IAAblB,EAAiB,EAAMe,EAAOf,EAClCmB,EAAMpB,EAASqB,QAAQF,GAE7BjB,EAAQoB,QAAQ,SAAAT,GAAM,IACVU,EAAmBV,EAAnBU,KAAMT,EAAaD,EAAbC,GAAIU,EAASX,EAATW,KAClBX,EAAEE,KAAOQ,GAAQT,EAAKS,GAAQH,EAC9BI,EAAKX,EAAEE,QAGX,EAAKpC,GAAK0B,sBAAsB,EAAKK,QAzCL,KA4CpCe,KAAO,WACH,EAAKrB,SAAU,EACfsB,qBAAqB,EAAK/C,KA7C1BY,KAAKW,QAAUA,EACfX,KAAKU,SAAWA,E,yDAGL0B,GACX,OAAOV,KAAKW,IAAKD,EAAIV,KAAKY,GAAM,O,KA4CzB7B,O,mGC1Df,4BASe8B,gBACX,0BAAMC,EAAE,2nCACR,U,w2FCgBWC,MAff,SAAmCC,GAAmB,IAC5CC,EAD2C,iLAGzC,OACI,kBAAC,mBAAD,CAAkBC,SAAUC,KACxB,kBAACH,EAAqB1C,KAAKP,YALM,GACdc,IAAMC,WAWzC,OAFAmC,EAAqBG,YAArB,oCAAgEC,YAAeL,GAA/E,KAEOC,G,qHCy1BIK,G,mBA70BX,WAAYvD,GAAQ,IAAD,8BACf,4CAAMA,KAyCVwD,UAAY,SAAAC,GAAU,IACVC,EAAkDD,EAAlDC,IAAKC,EAA6CF,EAA7CE,KAAMC,EAAuCH,EAAvCG,OAAQC,EAA+BJ,EAA/BI,QAASC,EAAsBL,EAAtBK,QAASC,EAAaN,EAAbM,SAErCC,EAAU,EAAKhE,MAAfgE,MACR,GAAKA,EAAL,CAEA,IAAIC,GAAU,EACd,OAAQN,GACJ,IAAK,YACIC,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcC,KACpCH,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcE,KACpCJ,GAAU,GAEd,MAEJ,IAAK,aACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcC,KACpCH,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcE,KACpCJ,GAAU,GAEd,MAEJ,IAAK,UACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKO,aAAaN,EAAMO,OAASC,KACjCP,GAAU,GAEd,MAEJ,IAAK,YACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKO,aAAaN,EAAMO,OAASC,KACjCP,GAAU,GAEd,MAEJ,IAAK,QACL,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKU,cACLR,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKW,aACLT,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKY,mBACLV,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IAEpCE,GAAU,GAEd,MAEJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACD,IAAKL,IAAWC,IAAYC,IAAYC,EAAU,CAC9C,IAAMa,EAAW,IAAIC,OAAOnB,EAAIoB,QAAQ,QAAS,KAAO,GACxD,EAAKC,mBAAmBH,GACxBX,GAAU,EAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAW,GAChBD,GAAU,GAEd,MAEJ,IAAK,MACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAM/C,SAAW,GACjCgD,GAAU,GAEd,MAEJ,IAAK,QACIL,GAAWC,GAAYC,IAAWC,IACnC,EAAKiB,mBAAmBhB,EAAMiB,aAAeC,KAC7CjB,GAAU,GAEd,MAEJ,IAAK,SACIL,GAAWC,GAAYC,IAAWC,IACnC,EAAKiB,mBAAmBhB,EAAMiB,aAAeC,KAC7CjB,GAAU,GAMlBA,IACAR,EAAM0B,kBACN1B,EAAM2B,oBA1KK,EAwLnBd,aAAe,SAAAC,GAAW,IACdP,EAAU,EAAKhE,MAAfgE,MACHA,IAELO,EAASc,YAAMd,EAAQe,IAAmBC,KAE1CvB,EAAMO,OAASA,EACf,EAAKiB,cAAL,UAAsBvD,KAAKwD,MAAqB,IAAfzB,EAAMO,QAAvC,QA/Le,EAkMnBS,mBAAqB,SAAAU,GAAS,IAClB1B,EAAU,EAAKhE,MAAfgE,MACHA,IAEL0B,EAAOL,YAAMK,EAAMC,IAAyBC,KAE5C5B,EAAMiB,aAAeS,EACrB,EAAKF,cAAL,UAAsBE,EAAtB,QAzMe,EA4MnBX,mBAAqB,SAAAH,GAAa,IACtBZ,EAAU,EAAKhE,MAAfgE,MACHA,GAEL,EAAKE,WAAWU,EAAWZ,EAAM/C,WAhNlB,EAmNnBiD,WAAa,SAAAC,GAAgB,IACjBH,EAAU,EAAKhE,MAAfgE,MACHA,IAELG,EAAckB,YAAMlB,EAAa,EAAGH,EAAM/C,UAAY,GAEtD+C,EAAMG,YAAcA,EACpB,EAAKlE,SAAS,CAAEkE,kBA1ND,EA6NnB0B,mBAAqB,WACjB,IAIMC,GAJoBC,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,2BAEzEH,SAASI,eAAe,sBAG7CL,EACAM,IAAgBC,IAAI,EAAKC,iBAEzBF,IAAgBG,OAAO,EAAKD,iBAGhC,EAAKrG,SAAS,CACV6F,gBA1OW,EA8OnBU,eAAiB,WAGb,KAD0BT,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,yBAClG,CAEA,IAAMO,EAASV,SAASI,eAAe,cAEjCO,EAAUC,SAASF,EAAOG,MAAMC,KAAM,IACtCC,EAASH,SAASF,EAAOG,MAAMG,IAAK,IARvB,EAUG,EAAKC,kBAAkBN,EAASI,GAAQ,GAAtDD,EAVW,EAUXA,KAAME,EAVK,EAULA,IAEVL,IAAYG,GAAQC,IAAWC,IAGnCN,EAAOG,MAAMC,KAAOA,EAAO,KAC3BJ,EAAOG,MAAMG,IAAMA,EAAM,QA9PV,EAqTnBE,iBAAmB,SAAAxD,GACWA,EAAlByD,QAtTO,EA0TnBC,qBAAuB,SAAA1D,GAAU,IACbO,EAAUP,EAAlByD,OACR,GAAKlD,EAAL,CAF4B,IAIpBG,EAAgB,EAAK7E,MAArB6E,YACAlD,EAA+B+C,EAA/B/C,SAAUsD,EAAqBP,EAArBO,OAAQ6C,EAAapD,EAAboD,SAG1B,EAAKnH,SAAS,CACVgB,WAEAsD,SACA8C,SAAS,EACTD,YACD,WACMjD,IAELH,EAAMG,YAAcA,OA3UT,EA+UnBmD,cAAgB,SAAA7D,GAAU,IACNO,EAAUP,EAAlByD,OAER,EAAKjH,SAAS,CACVoH,SAAS,GACV,WACMrD,IAEY,EAAK1E,MAAdiI,KAEJvD,EAAMuD,OAENvD,EAAMwD,YA3VC,EAgWnBC,WAAa,SAAAhE,GAAU,IACXiE,EAAW,EAAK1H,MAAhB0H,OAER,EAAKzH,SAAS,CACVsH,MAAM,EACNI,QAAQ,IAGZ/H,IAAgBgI,aAAa,CAAE,QAAS,gCACxCF,GAAUA,EAAOjE,IAzWF,EA4WnBoE,YAAc,SAAApE,GAAU,IACZqE,EAAY,EAAK9H,MAAjB8H,QAER,EAAK7H,SAAS,CACVsH,MAAM,EACNI,QAAQ,IAGZ/H,IAAgBgI,aAAa,CAAE,QAAS,iCACxCE,GAAWA,EAAQrE,IArXJ,EAwXnBsE,YAAc,SAAAtE,GAAU,IACZuE,EAAY,EAAKhI,MAAjBgI,QAERpI,IAAgBgI,aAAa,CAAE,QAAS,iCACxCI,GAAWA,EAAQvE,GAJA,IAMXO,EAAU,EAAKhE,MAAfgE,MACR,EAAKiE,eAAe,CAAC9D,YAAa,EAAGlD,SAAU+C,EAAM/C,YA/XtC,EAkYnBiH,iBAAmB,SAAAzE,GAAU,IACTO,EAAUP,EAAlByD,OACR,GAAKlD,EAAL,CAFwB,IAIhBmE,EAAW,EAAKnI,MAAhBmI,OACAhE,EAA4CH,EAA5CG,YAAalD,EAA+B+C,EAA/B/C,SAAUsD,EAAqBP,EAArBO,OAAQ6C,EAAapD,EAAboD,SAEvC,EAAKnH,SAAS,CACVgB,WACAkD,cACAI,SACA6C,aAGJxH,IAAgBgI,aAAa,CACzB,QAAS,oCACTO,SACAhE,cACAlD,WACAsD,SACA6C,aAGJ,EAAKa,eAAe,CAAE9D,cAAalD,eAzZpB,EA4ZnBmH,mBAAqB,SAAA3E,GAAU,IACnB4E,EAAmB,EAAKrI,MAAxBqI,eAEQrE,EAAUP,EAAlByD,OACR,GAAKlD,EAAL,CAJ0B,IAMlBO,EAAWP,EAAXO,OAER,EAAKtE,SAAS,CACVsE,WAGJ3E,IAAgBgI,aAAa,CAAE,QAAU,0BAA2BrD,WACpE8D,GAAkBA,EAAe5E,KAzalB,EA4anB6E,eAAiB,SAAA7E,GAAU,IACPO,EAAUP,EAAlByD,OACR,GAAKlD,EAAL,CAFsB,IAIdmE,EAAW,EAAKnI,MAAhBmI,OAEAf,EAAapD,EAAboD,SAER,EAAKnH,SAAS,CACVmH,aAGJxH,IAAgBgI,aAAa,CACzB,QAAS,kCACTO,SACAf,eA3bW,EA+bnBmB,cAAgB,WACZ,EAAKtI,SAAS,CAAEoH,SAAS,KAhcV,EAmcnB5C,YAAc,WACV,EAAK+D,mBApcU,EAucnBA,gBAAkB,WAAO,IACbxE,EAAU,EAAKhE,MAAfgE,MACHA,IAEe,EAAK1E,MAAjB+H,QAEJ,EAAKpH,SAAS,CACVsH,MAAO,EAAKjI,MAAMiI,KAClBI,QAAQ,IAGR3D,EAAMyE,OACNzE,EAAMuD,OAENvD,EAAMwD,UArdC,EA0dnBkB,sBAAwB,SAAAjF,GACpB,EAAKkF,eAAgB,EACrBlF,EAAM2B,iBAE0B,IAA5B3B,EAAMmF,YAAYC,QAEtB,EAAKC,QAAUrF,EAAMmF,YAAYE,QACjC,EAAKC,QAAUtF,EAAMmF,YAAYG,QAEjChD,SAASiD,YAAc,EAAKC,gBAC5BlD,SAASmD,UAAY,EAAKC,cAE1B,EAAKlJ,SAAS,CACVmJ,gBAAgB,MAveL,EA2enBD,cAAgB,SAAA1F,GACZA,EAAM2B,iBAENW,SAASiD,YAAc,KACvBjD,SAASmD,UAAY,KAErB,EAAKjJ,SAAS,CACVmJ,gBAAgB,KAlfL,EA8hBnBH,gBAAkB,SAAAxF,GACdA,EAAM2B,iBADiB,MAGD,EAAK4B,kBAAkBvD,EAAM4F,QAAU,EAAKP,QAASrF,EAAM6F,QAAU,EAAKP,SAAS,GAAjGlC,EAHe,EAGfA,KAAME,EAHS,EAGTA,IAERN,EAASV,SAASI,eAAe,cACvCM,EAAOG,MAAMC,KAAOA,EAAO,KAC3BJ,EAAOG,MAAMG,IAAMA,EAAM,MAriBV,EAwiBnBwC,gBAAkB,SAAA9F,GACdA,EAAM0B,kBADiB,IAGfnB,EAAU,EAAKhE,MAAfgE,MACHA,GAEL,EAAK/D,SAAS,CACVuJ,UAAU,EACVC,aAAczF,EAAMG,eAhjBT,EAojBnBuF,aAAe,SAACjG,EAAOkG,GAAW,IACtB3F,EAAU,EAAKhE,MAAfgE,MACHA,GAEL,EAAK/D,SAAS,CACVwJ,aAAcE,EAAQ3F,EAAM/C,YAzjBjB,EA6jBnB2I,sBAAwB,WAAO,IAAD,EACS,EAAKtK,MAAhCkK,EADkB,EAClBA,SAAUC,EADQ,EACRA,aACbD,GAEL,EAAKvJ,SAAS,CACVuJ,UAAU,EACVrF,YAAasF,EACbA,aAAc,GACf,WAAO,IACEzF,EAAU,EAAKhE,MAAfgE,MACHA,GAEDa,OAAOgF,SAASJ,KAChBzF,EAAMG,YAAcsF,MA1kBb,EA+kBnBK,iBAAmB,WACf,EAAKC,YAAa,GAhlBH,EAmlBnBC,iBAAmB,WACf,EAAKD,YAAa,GAplBH,EAulBnBE,gBAAkB,SAAAxG,GACd,EAAKkF,eAAgB,EACF,EAAKrJ,MAAhBqI,QAGJ,EAAK1H,SAAS,CACV0H,QAAQ,IAIhBuC,aAAa,EAAKC,kBAClB,EAAKA,iBAAmBC,WAAW,WAC3B,EAAKL,YACJ,EAAKzK,MAAMiI,MACX,EAAKjI,MAAM2B,UAEhB,EAAKhB,SAAS,CACV0H,QAAQ,KAEb,MA1mBY,EA6mBnB0C,YAAc,WACVzK,IAAgBgI,aAAa,CACzB,QAAS,+BACT0C,UAAW,QAhnBA,EAonBnBC,yBAA2B,SAAC9G,EAAOc,GAC3BA,IAAW,EAAKjF,MAAMiF,QAE1B,EAAKtE,SAAS,CACVsE,UACD,WAAO,IACEP,EAAU,EAAKhE,MAAfgE,MACHA,IAELA,EAAMO,OAASA,MA7nBJ,EAioBnBiG,kCAAoC,SAAA/G,GACd,EAAKzD,MAAfgE,OAGR+B,SAAS0E,cAAcC,QAroBR,EAwoBnBhG,WAAa,WAAO,IACRV,EAAU,EAAKhE,MAAfgE,MACHA,IAEgB,IAAjBA,EAAMO,OACNP,EAAMO,OAAS,EAAKoG,YAAc,IAElC,EAAKA,WAAa3G,EAAMO,OACxBP,EAAMO,OAAS,KAhpBJ,EAopBnBI,iBAAmB,SAAAlB,GACfA,GAASA,EAAM0B,kBAEf,IAAMyF,EAAO7E,SAASI,eAAe,sBAChCyE,IAEqB7E,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAE9F,EAAK2E,iBAIT,EAAKC,kBAAkBF,KAhqBR,EA+qBnBG,eAAiB,WAAO,IACZ5C,EAAW,EAAKnI,MAAhBmI,OAEF6C,EAAOC,IAAUC,IAAI/C,GAC3B,GAAK6C,EAAL,CAJmB,IAMXG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAPmB,IASXC,EAAcD,EAAdC,UACR,GAAKA,EAEL,OAAOC,IAAYN,eAAeK,MA3rBnB,EA8rBnBnD,eAAiB,SAAA9D,GAAgB,IACrBgE,EAAW,EAAKnI,MAAhBmI,OAEF6C,EAAOC,IAAUC,IAAI/C,GAC3B,GAAK6C,EAAL,CAJ4B,IAMpBG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAP4B,IASpBC,EAAcD,EAAdC,UACHA,IAEAjH,EAGDkH,IAAYpD,eAAemD,EAAWjH,GAFtCkH,IAAYC,iBAAiBF,OA3sBlB,EAitBnBG,uBAAyB,SAAA9H,GACrBA,EAAM2B,iBACN3B,EAAM0B,mBAntBS,EAstBnBqG,gBAAkB,SAAA/H,GACdA,EAAM0B,kBADiB,eAGfwD,gBAGR,EAAKA,eAAgB,EACrB,EAAKH,oBA7tBU,EAguBnBiD,kBAAoB,SAAAhI,GAAS,eACjBkF,eAGR,EAAKhE,iBAAiBlB,IAjuBtB,EAAK6C,gBAAkB,IAAIoF,IAAgB,EAAKlI,WAChD,EAAKlE,MAAQ,GAJE,E,iFA2BE,IACT0E,EAAUzD,KAAKP,MAAfgE,MACRzD,KAAKoL,cAAc3H,GACnB4H,OAAOC,iBAAiB,SAAUtL,KAAKiG,gBACvCT,SAAS8F,iBAAiB,mBAAoBtL,KAAKsF,sB,6CAG/B,IACZ7B,EAAUzD,KAAKP,MAAfgE,MACRzD,KAAKuL,iBAAiB9H,GACtB4H,OAAOG,oBAAoB,SAAUxL,KAAKiG,gBAC1CT,SAASgG,oBAAoB,mBAAoBxL,KAAKsF,oBACtDO,IAAgBG,OAAOhG,KAAK+F,mB,oCAuIlB0F,GAAO,IACT7D,EAAW5H,KAAKP,MAAhBmI,OAERvI,IAAgBgI,aAAa,CACzB,QAAS,wBACTO,SACA6D,W,yCA6EW5L,EAAWC,EAAWC,GAAW,IACxC0D,EAAUzD,KAAKP,MAAfgE,MAEJ5D,EAAU4D,QAAUA,IACpBzD,KAAKuL,iBAAiB1L,EAAU4D,OAChCzD,KAAKoL,cAAc3H,M,oCAIbA,GACV,GAAKA,EAAL,CAEA,IAAMiI,EAAYlG,SAASI,eAAe,cAHzB,EAIK5F,KAAKyG,kBAAkBqE,IAAYa,UAAUrF,KAAMwE,IAAYa,UAAUnF,KAAK,GAA5FF,EAJS,EAITA,KAAME,EAJG,EAIHA,IACdkF,EAAUrF,MAAMC,KAAOA,EAAO,KAC9BoF,EAAUrF,MAAMG,IAAMA,EAAM,KAI5B,IAAMoF,EAAYpG,SAASI,eAAe,wBACrCgG,IAELnI,EAAMoI,iBAAmB7L,KAAK4G,qBAC9BnD,EAAMqI,aAAe9L,KAAK0G,iBAC1BjD,EAAMsI,UAAY/L,KAAK+G,cACvBtD,EAAMuI,OAAShM,KAAKkH,WACpBzD,EAAMwI,QAAUjM,KAAKsH,YACrB7D,EAAMyI,QAAUlM,KAAKwH,YACrB/D,EAAM0I,aAAenM,KAAK2H,iBAC1BlE,EAAM2I,eAAiBpM,KAAK6H,mBAC5BpE,EAAM4I,WAAarM,KAAK+H,eACxBtE,EAAM6I,UAAYtM,KAAKgI,cAEvB4D,EAAUW,UAAY,GACtBX,EAAUY,YAAY/I,O,uCAGTA,GACRA,IAELA,EAAMoI,iBAAmB,KACzBpI,EAAMqI,aAAe,KACrBrI,EAAMsI,UAAY,KAClBtI,EAAMuI,OAAS,KACfvI,EAAMwI,QAAU,KAChBxI,EAAMyI,QAAU,KAChBzI,EAAM0I,aAAe,KACrB1I,EAAM2I,eAAiB,KACvB3I,EAAM4I,WAAa,KACnB5I,EAAM6I,UAAY,Q,wCAoMJhG,EAAME,GAAwB,IAAnBiG,IAAkB,yDACrCvG,EAASV,SAASI,eAAe,cACjC8G,EAAcxG,EAASA,EAAOyG,YAAc,IAC5CC,EAAe1G,EAASA,EAAO2G,aAAe,IAE/BC,EAAkBtH,SAASuH,gBAAxCJ,YACcK,EAAmBxH,SAASuH,gBAA1CF,aA+BR,OA7BIJ,GAAazM,KAAKiN,SAClB3G,EAAO,EACAmG,GAAazM,KAAKkN,UACzB5G,EAAOwG,EAAgBJ,GAKvBpG,GADAA,EAAOA,EAAO6G,IAA8B,EAAI7G,GAClCwG,EAAgBJ,EAAcS,IAA8BL,EAAgBJ,EAAcpG,EACxGA,EAAOxB,YAAMwB,EAAM,EAAGwG,EAAgBJ,IAGtCD,GAAazM,KAAKoN,QAClB5G,EAAM,EACCiG,GAAazM,KAAKqN,WACzB7G,EAAMwG,EAAiBJ,GAGvBpG,GADAA,EAAMA,EAAM2G,IAA8B,EAAI3G,GAClCwG,EAAiBJ,EAAeO,IAA8BH,EAAiBJ,EAAepG,EAC1GA,EAAM1B,YAAM0B,EAAK,EAAGwG,EAAiBJ,IAGzC5M,KAAKiN,SAAoB,IAAT3G,EAChBtG,KAAKkN,UAAY5G,IAASwG,EAAgBJ,EAC1C1M,KAAKoN,QAAkB,IAAR5G,EACfxG,KAAKqN,WAAa7G,IAAQwG,EAAiBJ,EAE3C9B,IAAYa,UAAY,CAAErF,OAAME,OAEzB,CAAEF,OAAME,S,wCAwID8G,GACd,IAAMC,EAASD,EAAQ/C,mBAAqB+C,EAAQE,sBAAwBF,EAAQG,wBAEpFF,GAAUA,EAAOG,KAAKJ,K,uCAItB,IAAMC,EAAS/H,SAAS8E,gBAAkB9E,SAASmI,qBAAuBnI,SAASoI,qBAEnFL,GAAUA,EAAOG,KAAKlI,Y,+BA2DhB,IACEoC,EAAW5H,KAAKP,MAAhBmI,OADH,EAE0H5H,KAAKjB,MAA5H8J,EAFH,EAEGA,eAAgBI,EAFnB,EAEmBA,SAAUC,EAF7B,EAE6BA,aAActF,EAF3C,EAE2CA,YAAalD,EAFxD,EAEwDA,SAAUsG,EAFlE,EAEkEA,KAAMF,EAFxE,EAEwEA,QAASD,EAFjF,EAEiFA,SAAUO,EAF3F,EAE2FA,OAAQpD,EAFnG,EAEmGA,OAAQuB,EAF3G,EAE2GA,WAE1G9D,EAAOwH,EAAWC,EAAetF,EACjCwF,EAAQ1I,EAAW,EAAIe,EAAOf,EAAW,EACzCmN,EAAeC,IAAOC,gBAAgBtM,EAAMoF,GAC5CmH,EAAgBtN,EAAW,EAAImN,EAAenN,EAAW,EAEzDuN,EAAaC,YAAkBxM,KAAKyM,MAAM1M,IAAS,GACnD2M,EAAiBF,YAAkBxM,KAAKyM,MAAMzN,IAAa,GAG3D2N,EAAoB7I,SAAS6I,mBAAqB7I,SAAS8I,sBAAwB9I,SAAS+I,wBAElG,OACI,yBACInP,GAAG,aACHa,UAAWuO,IAAW,aAAc,CAAE,sBAAuB3F,EAAgB,wBAAyBtD,IACtGkJ,YAAazO,KAAKmI,sBAClBuG,YAAa1O,KAAK0J,gBAClBiF,QAAS3O,KAAKiL,gBACd2D,cAAe5O,KAAKkL,mBACpB,yBAAK9L,GAAG,qBAAqBa,UAAWuO,IAAW,CAAE,4BAA6BpH,KAC9E,yBAAKhI,GAAG,yBACR,kBAACyP,EAAA,EAAD,CAAMjH,OAAQA,IAEd,4BAAQ6G,YAAa,SAAAK,GAAC,OAAIA,EAAElK,mBAAmB3E,UAAWuO,IAAW,gBAAiB,sBAAuB,CAAE,sBAAuBpH,IAAWuH,QAAS3O,KAAK8J,aAC3J,kBAACiF,EAAA,EAAD,OAEJ,yBACI9O,UAAWuO,IAAW,eAAgB,CAAE,sBAAuBpH,IAC/DuH,QAAS,SAAAG,GAAC,OAAIA,EAAElK,mBAChB6J,YAAa,SAAAK,GAAC,OAAIA,EAAElK,mBACpBgK,cAAe5O,KAAKgL,uBACpBgE,aAAchP,KAAKuJ,iBACnB0F,aAAcjP,KAAKyJ,kBACnB,yBAAKxJ,UAAU,iBACX,0BAAMA,UAAU,6BAA6BoG,MAAO,CAAE6I,MAAuB,IAAhBlB,EAAsB,OACnF,kBAACmB,EAAA,EAAD,CACI/F,MAAOA,EACPzH,IAAK,EACLyN,IAAK,EACLC,KAAM,KACNC,QAAS,CACLjF,KAAM,qBACNkF,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAU3P,KAAKmJ,aACfyG,kBAAmB5P,KAAKqJ,sBACxBoF,YAAazO,KAAKgJ,mBAG1B,yBAAK/I,UAAU,mBACX,4BAAQA,UAAU,gBAAgB0O,QAAS3O,KAAKkE,aAC3C8C,EAAO,kBAAC6I,EAAA,EAAD,MAAe,kBAAC,IAAD,OAE3B,yBAAK5P,UAAU,eAAf,UACQgO,EADR,cACwBG,IAExB,yBAAKnO,UAAU,iBACX,kBAACkP,EAAA,EAAD,CACI/F,MAAOpF,EACPrC,IAAK,EACLyN,IAAK,EACLC,KAAM,KACNC,QAAS,CACLjF,KAAM,qBACNkF,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAU3P,KAAKgK,yBACf4F,kBAAmB5P,KAAKiK,qCAGhC,4BAAQhK,UAAU,gBAAgB0O,QAAS3O,KAAKmE,YAC3C2J,IAAOgC,cAAc9L,IAE1B,4BAAQ/D,UAAU,gBAAgB8P,UAAW1B,EAAmBM,QAAS3O,KAAKoE,kBAC1E,kBAAC4L,EAAA,EAAD,SAOZ,kBAACC,EAAA,EAAD,CAAUnJ,QAASA,S,gDA3zBHrH,EAAOV,GAAQ,IACnC0E,EAAkEhE,EAAlEgE,MAAO/C,EAA2DjB,EAA3DiB,SAAUkD,EAAiDnE,EAAjDmE,YAAaI,EAAoCvE,EAApCuE,OAAQgD,EAA4BvH,EAA5BuH,KAAMH,EAAsBpH,EAAtBoH,SAAUC,EAAYrH,EAAZqH,QAC9D,OAAI/H,EAAMmR,YAAczM,EACb,CACHyM,UAAWzM,EACX/C,WACAkD,cACAI,SACAgD,OACAH,WACAC,UACAmC,UAAU,EACV7B,QAAQ,EACR7B,YAAY,GAIb,S,GAzBShF,IAAMC,Y,6EC1Bf+B,cACX,0BAAMC,EAAE,kjBACR,S,iCCGE2N,G,mBACF,WAAY1Q,GAAQ,IAAD,uBACf,4CAAMA,KAmBV2Q,mBAAqB,SAAAC,GAAW,IACpBC,EAAW,EAAKvR,MAAhBuR,OAER,GADoBD,EAAZE,UACQD,EAAhB,CAEA,IAAME,EAAOC,IAAU9F,IAAI2F,GACtBE,GAEL,EAAK9Q,SAAS,CAAEgR,OAAQC,YAAaH,OAzBrC,IAAMF,EAASM,YAAcnR,EAAMoR,QAC7BL,EAAOC,IAAU9F,IAAI2F,GAJZ,OAMf,EAAKvR,MAAQ,CACTuR,SACAI,OAAQC,YAAaH,IARV,E,iFAafC,IAAUK,GAAG,mBAAoB9Q,KAAKoQ,sB,6CAItCK,IAAUM,IAAI,mBAAoB/Q,KAAKoQ,sB,+BAcjC,IAAD,EACwBpQ,KAAKP,MAA1BuR,EADH,EACGA,KAAMC,EADT,EACSA,WAEd,OADmBjR,KAAKjB,MAAhB2R,OAIJ,yBAAKzQ,UAAU,gBAAgBoG,MAAO,CAAE6I,MAAO8B,EAAME,OAAQF,IACzD,yBAAK/Q,UAAU,qBAAqBoG,MAAO,CAAE8K,QAASF,IAClD,yBAAKhR,UAAU,8BALP,S,GAnCDM,IAAMC,YAqDjC2P,EAAaiB,aAAe,CACxBJ,KAAM,GACNC,WAAY,GAGDd,Q,gBCpDTkB,G,kNACFtS,MAAQ,G,EAoERuS,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTC,uBAAyB,SAAAnB,GAAW,IACxBQ,EAAW,EAAKpR,MAAhBoR,OADuB,EAEJ,EAAK9R,MAAxB6I,EAFuB,EAEvBA,OAAQ6J,EAFe,EAEfA,OAEhB,GAAIZ,IAAWR,EAAOQ,QAClBjJ,IAAWyI,EAAOzI,SAEjB6J,EAAQ,CACT,IAAMC,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KAFT,IAIDE,EAAUF,EAAVE,MACFC,EAAMC,YAAOF,EAAQA,EAAMG,MAAQ,MAEzC,EAAKrS,SAAS,CACVmS,U,EAKZG,kBAAoB,SAAA3B,GAAW,IACnBQ,EAAW,EAAKpR,MAAhBoR,OACAoB,EAAmB5B,EAAnB4B,QAASL,EAAUvB,EAAVuB,MAEjB,GAAIK,IAAYpB,EAAhB,CAEA,IAAMa,EAAOC,IAAUhH,IAAIkG,GACrBpG,EAAOiH,GAAQA,EAAKE,MAAOF,EAAKE,MAAMG,MAAQ,KAE9CnK,EAAS6C,EAAOA,EAAKrL,IAAM,EAC3ByS,EAAMC,YAAOrH,GACbgH,EAAS,EAAK1S,MAAM8S,MAAQA,GAAe,KAARA,IAA0B,IAAZjK,EAQvD,GANA,EAAKlI,SAAS,CACVkI,SACAiK,MACAJ,WAGAG,EAAO,CACP,IAAMM,EAAQxH,IAAUyH,WACxBC,YAAgBF,EAAOrB,M,EAI/BwB,kBAAoB,SAAAhC,GAAW,IAAD,EACJ,EAAK5Q,MAAnBoR,EADkB,EAClBA,OAAQyB,EADU,EACVA,EAGhB,GAFoBjC,EAAZ4B,UAEQpB,EAAhB,CAEA,IAAM0B,EAAUC,YAAe3B,EAAQyB,GAEvC,EAAK5S,SAAS,CAAE6S,c,EAGpBE,aAAe,SAAAvP,GAAU,IAAD,EACS,EAAKzD,MAA1BoR,EADY,EACZA,OAAQ6B,EADI,EACJA,SACXA,IAELxP,EAAM0B,kBACN8N,EAAS7B,K,EAGb8B,WAAa,WACT,EAAKjT,SAAS,CAAE+R,QAAQ,K,qFA9GNmB,EAAWC,GAAY,IACjChC,EAAW7Q,KAAKP,MAAhBoR,OADgC,EAEC7Q,KAAKjB,MAAtC6I,EAFgC,EAEhCA,OAAQiK,EAFwB,EAExBA,IAAKJ,EAFmB,EAEnBA,OAAQc,EAFW,EAEXA,QAE7B,OAAIK,EAAU/B,SAAWA,IAIrBgC,EAAUjL,SAAWA,IAIrBiL,EAAUhB,MAAQA,IAIlBgB,EAAUpB,SAAWA,GAIrBoB,EAAUN,UAAYA,O,0CAQ1BZ,IAAUb,GAAG,mCAAoC9Q,KAAKsR,wBACtDK,IAAUb,GAAG,kBAAmB9Q,KAAKgS,mBACrCL,IAAUb,GAAG,kBAAmB9Q,KAAKqS,mBACrC3H,IAAUoG,GAAG,uBAAwB9Q,KAAKwR,0B,6CAI1CG,IAAUZ,IAAI,mCAAoC/Q,KAAKsR,wBACvDK,IAAUZ,IAAI,kBAAmB/Q,KAAKgS,mBACtCL,IAAUZ,IAAI,kBAAmB/Q,KAAKqS,mBACtC3H,IAAUqG,IAAI,uBAAwB/Q,KAAKwR,0B,+BA2ErC,IAAD,EACiFxR,KAAKP,MAAnFoR,EADH,EACGA,OAAQiC,EADX,EACWA,WAAYC,EADvB,EACuBA,kBAAmBL,EAD1C,EAC0CA,SAAUX,EADpD,EACoDA,MAAOiB,EAD3D,EAC2DA,OAAQC,EADnE,EACmEA,IAAKjC,EADxE,EACwEA,KADxE,EAE4BhR,KAAKjB,MAA9B8S,EAFH,EAEGA,IAAKJ,EAFR,EAEQA,OAAQc,EAFhB,EAEgBA,QAEjBlM,EAAQ,KAQZ,GAPI2K,IACA3K,EAAQ,CACJ6I,MAAO8B,EACPE,OAAQF,IAIZkC,YAAqBrC,GACrB,OACI,yBACI5Q,UAAWuO,IACP,YACA,CAAE,aAAcuD,GAChB,CAAE,cAAeiB,GACjB,CAAE,WAAYC,IAElB5M,MAAOA,EACPsI,QAAS3O,KAAKyS,cACd,yBAAKxS,UAAWuO,IAAW,aAAc,eAAgB,CAAE2E,QAAST,KAChE,yBAAKzS,UAAU,uBACX,kBAACmT,EAAA,EAAD,CAAoBC,SAAUJ,EAAM,QAAU,eAOlE,GAAIK,YAASzC,IAAWkC,EACpB,OACI,yBACI9S,UAAWuO,IACP,YACA,CAAE,aAAcuD,GAChB,CAAE,cAAeiB,GACjB,CAAE,WAAYC,IAElB5M,MAAOA,EACPsI,QAAS3O,KAAKyS,cACd,yBAAKxS,UAAWuO,IAAW,aAAc,eAAgB,CAAE2E,QAAST,KAChE,yBAAKzS,UAAU,uBACX,kBAAC,EAAD,CAAoBoT,SAAUJ,EAAM,QAAU,eAQlE,IADatB,IAAUhH,IAAIkG,GAChB,OAAO,KAElB,IAAM0C,EAAa1B,GAAOJ,EACpB+B,EAASC,YAAc5C,GACvB6C,EAAS,qBAAkBhS,KAAKiS,IAAIH,GAAU,EAAK,GAEzD,OACI,yBACIvT,UAAWuO,IACP,YADiB,eAEdkF,GAAaH,GAChB,CAAEJ,QAAST,GACX,CAAE,cAAeM,GACjB,CAAE,aAAcjB,GAChB,CAAE,WAAYkB,IAElB5M,MAAOA,EACPsI,QAAS3O,KAAKyS,eACZc,GACE,yBAAKtT,UAAU,cACX,0BAAMA,UAAU,aAAasS,IAGpCV,GAAO,yBAAK5R,UAAU,aAAa4R,IAAKA,EAAK+B,OAAQ5T,KAAK2S,WAAYkB,WAAW,EAAOC,IAAI,KAC5FhB,GAAciB,aAAclD,IAAW,kBAAC,EAAD,CAAcA,OAAQA,Q,gDAvN1CpR,EAAOV,GAAQ,IACnC8R,EAAcpR,EAAdoR,OAAQyB,EAAM7S,EAAN6S,EAEhB,GAAIvT,EAAMiV,aAAenD,EAAQ,CAC7B,IAAMa,EAAOC,IAAUhH,IAAIkG,GACrBpG,EAAOiH,GAAQA,EAAKE,MAAOF,EAAKE,MAAMG,MAAQ,KAE9CnK,EAAS6C,EAAOA,EAAKrL,IAAM,EAC3ByS,EAAMC,YAAOrH,GAInB,MAAO,CACHuJ,WAAYnD,EAEZjJ,SACAiK,MACAJ,OARW1S,EAAM8S,MAAQA,GAAe,KAARA,IAA0B,IAAZjK,EAS9C2K,QARYC,YAAe3B,EAAQyB,IAY3C,OAAO,S,GAzBQ9R,cAwOvB6Q,EAASD,aAAe,CACpB2B,mBAAmB,EACnBD,YAAY,GAGDmB,qBAAkB5C,GClP3B6C,I,wLACQ,IAAD,EACqClU,KAAKP,MAAvCoR,EADH,EACGA,OAAQsD,EADX,EACWA,SAAUzB,EADrB,EACqBA,SAAUJ,EAD/B,EAC+BA,EAE9B8B,EAAaC,YAAkBxD,GAAQ,EAAMyB,GAEnD,OACI,yBACIrS,UAAWuO,IAAW,sBAAuB,CAAE,+BAAgC2F,IAC/ExF,QAAS+D,GACT,yBAAKzS,UAAU,4BACX,yBAAKA,UAAU,oCACX,kBAAC,GAAD,CAAU4Q,OAAQA,KAErBsD,GAAY,yBAAKlU,UAAU,kCAC5B,yBACIA,UAAWuO,IACP,2BACA2F,EAAW,oCAAsC,yCAGzD,yBAAKlU,UAAU,mCAEnB,yBAAKA,UAAU,6BAA6BmU,Q,GAvB5B7T,IAAMC,YAmCvByT,iBAAkBC,IC3C1B,SAAeI,GAAtB,mC,6CAAO,WAAoB7I,GAApB,SAAA8I,EAAA,kEAEKC,UAAUC,UAFf,gCAGWD,UAAUC,UAAUC,UAAUjJ,GAHzC,iCAIY,GAJZ,uDAOCkJ,QAAQC,MAAM,sDAAd,MAPD,iCAUIC,GAAQpJ,IAVZ,wD,sBAaP,SAASoJ,GAAQpJ,GACb,IAAI6B,EACAwH,EACJ,IAqBI,IApBAxH,EAAU9H,SAASuP,cAAc,aACzBC,iBAAkB,EAC1B1H,EAAQ2H,UAAW,EACnB3H,EAAQlE,MAAQqC,EAChB6B,EAAQjH,MAAM6O,IAAM,QACpB5H,EAAQjH,MAAM8O,SAAW,QACzB7H,EAAQjH,MAAMG,IAAM,EACpB8G,EAAQjH,MAAM+O,KAAO,mBACrB9H,EAAQjH,MAAMgP,WAAa,MAC3B/H,EAAQjH,MAAMiP,iBAAmB,OACjChI,EAAQjH,MAAMkP,cAAgB,OAC9BjI,EAAQjH,MAAMmP,aAAe,OAC7BlI,EAAQjH,MAAMoP,WAAa,OAE3BjQ,SAASkQ,KAAKlJ,YAAYc,GAE1BA,EAAQqI,QACRrI,EAAQsI,WAERd,EAAatP,SAASqQ,YAAY,SAE9B,MAAM,IAAIC,MAEd,OAAO,EACT,SACEnB,QAAQC,MAAM,uDAAwDE,GA1B1E,QA4BQxH,GACA9H,SAASkQ,KAAKK,YAAYzI,GAIlC,OAAO,E,aC/CP0I,GAAgB,KAwCpB,SAASC,GAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,IAGtB9M,EAAU8M,EAAV9M,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAAS+M,GAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMC,EAAgBC,KAAY5L,IAAI,oBAChC6L,EAAkBD,KAAY5L,IAAI,8BAExC,KAD0BsL,GAAiBK,IAAkBL,GAAiBO,IACtD,OAAO,KAE/BR,GAAgBA,IAvyBV,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACnC,IAAIX,GAAcY,IAAIR,EAAMO,IAGxB,OAAO,KAFPD,GAAUV,GAAcrL,IAAIyL,EAAMO,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAIG,GAAa,KAwCjB,SAASC,GAAcV,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BQ,GAAaA,IAznC,IAAIE,GAAWD,IAAIR,EAAMO,IAGrB,OAAO,KAFPD,GAAUG,GAAWlM,IAAIyL,EAAMO,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,E,+BCxG5BK,I,mBACF,WAAYtX,GAAQ,IAAD,8BACf,4CAAMA,KAmBVuX,YApBmB,qBAoBL,0CAAAzC,EAAA,4DACV,EAAK0C,uBAECC,EAAW,GACXC,EAAkB9X,IAAgBC,KAAK,CACzC,QAAS,WACT8X,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXJ,EAASK,KAAKJ,GAERK,EAAuBnY,IAAgBC,KAAK,CAC9C,QAAS,oBACTiR,QAASE,IAAUgH,UACnBC,OAAO,IAEXR,EAASK,KAAKC,GAjBJ,SAmB2BG,QAAQzC,IAAIgC,EAASU,IAAI,SAAAtW,GAAC,OAAIA,EAAEuW,MAAM,SAAA/I,GAAC,OAAI,UAnBtE,mCAmBHgJ,EAnBG,KAmBIC,EAnBJ,KAqBV,EAAKrY,SAAS,CACVsY,QAASF,EAAMG,SACfF,cAAeA,IAGb7F,EAAQxH,IAAUyH,WACxB+F,YAAiBhG,EAAO4F,EAAMG,UA3BpB,0CApBK,EAkDnBhB,qBAlDmB,qBAkDI,kCAAA1C,EAAA,0DACY,EAAK9U,MAA5BoR,EADW,EACXA,OAAQsH,EADG,EACHA,WACXtH,EAFc,oDAGdsH,EAHc,sDAIfA,EAAW9B,OAAS,GAJL,oDAKd+B,aAAavH,GALC,oDAMdwH,YAAgBxH,GANF,oEAQExR,IAAgBC,KAAK,CACtC,QAAS,uBACT2S,QAASpB,EACTyH,WAAYH,EAAW,GACvBI,WAAW,IAZI,QAQb/Y,EARa,OAenB,EAAKE,SAAS,CACV8Y,kBAAmBhZ,IAhBJ,0CAlDJ,EAsEnBsK,YAAc,WACV2O,aAAQ,OAvEO,EA0EnBC,eAAiB,WAAO,IACZpG,EAAM,EAAK7S,MAAX6S,EACAkG,EAAsB,EAAKzZ,MAA3ByZ,kBAEHA,GACAA,EAAkBG,OAEvBrE,GAAKkE,EAAkBG,MAEvB,EAAKC,sBAAsBtG,EAAE,iBAnFd,EAsFnBsG,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAKpZ,MAAxCqZ,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,QACJmW,aAAW,QACXC,MAAM,UACNtZ,UAAU,4BACV0O,QAAS,kBAAMoK,EAAcC,KAC7B,kBAACjK,EAAA,EAAD,WAnGG,EAyGnByK,oBAAsB,SAAC3I,EAAQsH,GAC3B,GAA0B,IAAtBA,EAAW9B,OAAc,OAAO,KAEpC,IAAMwC,EAAUY,KAAa9O,IAAIkG,EAAQsH,EAAW,IACpD,IAAKU,EAAS,OAAO,KAJqB,IAMlCa,EAA8Bb,EAA9Ba,iBAAkBC,EAAYd,EAAZc,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,CAAC,IAC7D/H,EAAU+H,EAAV/H,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DgI,EAAUhI,EAAVgI,MACR,GAAIA,GAASA,EAAMvD,OACf,OAAOuD,EAAMA,EAAMvD,OAAS,GAIpC,OAAO,MA1HQ,EA6HnBwD,WAAa,WACT,EAAK/P,cACLgQ,eAFe,MAIqC,EAAKra,MAAjDoR,EAJO,EAIPA,OAAQsH,EAJD,EAICA,WAAY4B,EAJb,EAIaA,oBAC5B,GAAKlJ,GAAWsH,GAAe4B,EAA/B,CAEA,IAAMtO,EAAO,EAAKuO,aAAa,EAAKC,WAAWC,SAE/C,EAAKC,YAAYpY,QAAQ,SAAAqY,GACrB,GAAIL,EAwCA,OAvCItO,IACI,YAAasO,EACbA,EAAoBM,QAAU,CAC1B,QAAS,gBACT5O,OACA6O,SAAU,MAGdjb,IAAgBC,KAAK,CACjB,QAAS,cACT2S,QAASmI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTlP,KAAM,CACF,QAAS,gBACTA,OACA6O,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,WAM7Bxb,IAAgBC,KAAK,CACjB,QAAS,cACT2S,QAASmI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuBZ,IAM/B,IAAM/I,EAAO,EAAKwI,oBAAoB3I,EAAQsH,GAC9C,GAAInH,EAAJ,CAAW,IACC9B,EAAyB8B,EAAzB9B,MAAOgC,EAAkBF,EAAlBE,OAAQU,EAAUZ,EAAVY,MAEvBvS,IAAgBC,KAAK,CACjB,QAAS,cACT2S,QAASmI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,oBACT/I,MAAO,CACH,QAAS,cACTxS,GAAIwS,EAAMxS,IAEd0b,UAAW,KACXC,uBAAwB,GACxB7L,MAAOA,EACPgC,OAAQA,EACRmJ,QAAS,CACL,QAAS,gBACT5O,OACA6O,SAAU,MAEdU,IAAK,UAObvP,GACApM,IAAgBC,KAAK,CACjB,QAAS,cACT2S,QAASmI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTlP,KAAM,CACF,QAAS,gBACTA,OACA6O,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,KAKzBxb,IAAgBC,KAAK,CACjB,QAAS,kBACT2S,QAASmI,EACTa,aAAcpK,EACdqK,YAAa/C,EACbqC,uBAAuB,EACvBC,iBAAiB,EACjBU,UAAU,QA/OH,EAoPnBC,sBAAwB,SAAAvK,GAChB,EAAKsJ,YAAYvD,IAAI/F,GACrB,EAAKsJ,YAAYkB,OAAOxK,GAExB,EAAKsJ,YAAYmB,IAAIzK,EAAQA,GAKjC,EAAKU,eA7PU,EAgQnByI,aAAe,SAAA1M,GAAY,IACff,EAAce,EAAdf,UAMR,MALkB,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAEFe,EAAdiO,WArQO,EA0QnBC,oBAAsB,SAAAtY,GACI,KAAlBA,EAAMuY,SACNvY,EAAM2B,kBA5QK,EAgRnB6W,kBAhRmB,qBAgRC,gDAAAnH,EAAA,0DACmB,EAAKxV,MAAhCiZ,EADQ,EACRA,QAASD,EADD,EACCA,cAEXzK,EAAU,EAAKqO,UAAUzB,QAHf,oDAOE,UADV3N,EAAce,EAAdf,YACkC,oBAAdA,IACxBe,EAAQf,UAAY,MAGlBgP,EAAY,EAAKvB,aAAa1M,GAASsO,OAX7B,wBAaZ,EAAKlc,SAAS,CAAEmc,WAAY,KAAMC,cAAe,GAAIC,oBAAqB,KAb9D,kCAiBVC,EAAYlF,GAAcyE,GAC1BU,EAAe9F,GAAiBoF,GAEhCW,EAAcnE,EACd,CAACA,EAAc3Y,IAAI+c,OAAOnE,EAAQoE,OAAO,SAAA9a,GAAC,OAAIA,IAAMyW,EAAc3Y,IAAMid,YAAgB/a,MACxF0W,EAEA8D,EAAgBI,EAAYE,OAC9B,SAAA9a,GAAC,OACG,EAAKgb,cAAchb,EAAGia,IACrBS,GAAa,EAAKM,cAAchb,EAAG0a,IACnCC,GAAgB,EAAKK,cAAchb,EAAG2a,KAG/C,EAAKvc,SAAS,CAAEmc,WAAYN,EAAWO,kBA/BvB,UAiCKzc,IAAgBC,KAAK,CACtC,QAAS,sBACTid,MAAOhB,EACPjE,MAAO,MApCK,WAiCV9X,EAjCU,OAuCZ,EAAKT,MAAM8c,aAAeN,EAvCd,mDA2ChB,EAAK7b,SAAS,CACVqc,oBAAqBvc,EAAOyY,WA5ChB,0CAhRD,EAgUnBuE,kBAAoB,SAAAtZ,GAChB,IAAMuZ,EAAYvZ,EAAMwZ,cAAcC,QAAQ,cAC1CF,IACAvZ,EAAM2B,iBACNW,SAASqQ,YAAY,cAAc,EAAO4G,KApU/B,EAwUnBG,mBAAqB,WACjB,IAAMtP,EAAU,EAAK2M,WAAWC,QAChC,GAAK5M,EAAL,CAFuB,IAIff,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,QA9UT,EAkVnBsQ,mBAAqB,SAAA3Z,GACjB,IAAMuZ,EAAYvZ,EAAMwZ,cAAcC,QAAQ,cAC1CF,IACAvZ,EAAM2B,iBACNW,SAASqQ,YAAY,cAAc,EAAO4G,KAtV/B,EA0VnBH,cAAgB,SAACzL,EAAQgL,GAAgB,IAC7BvJ,EAAM,EAAK7S,MAAX6S,EACAyF,EAAkB,EAAKhZ,MAAvBgZ,cAER,GAAIA,GAAiBlH,IAAWkH,EAAc3Y,KAE2B,KADvD0d,YAAajM,GAAQ,EAAMyB,IAAM,IACrCyK,oBAAoBC,QAAQnB,EAAWoB,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAajM,GAAQ,EAAOyB,IAAM,IACtCyK,oBAAoBC,QAAQnB,EAAWoB,iBAKsB,KADvD5E,YAAgBxH,IAAW,IAC/BkM,oBAAoBC,QAAQnB,EAAWoB,gBA3WrC,EAkXnBC,eAAiB,WACbrT,WAAW,WACH,EAAK8R,UAAUzB,SACC,EAAKyB,UAAUzB,QAEvBvE,SAEb,MAtXH,EAAK5W,MAAQ,CACTiZ,QAAS,GACTD,cAAe,MAGnB,EAAK4D,UAAYpb,IAAM4c,YACvB,EAAKlD,WAAa1Z,IAAM4c,YAExB,EAAKhD,YAAc,IAAI1D,IAXR,E,iFAefzW,KAAKgX,cAELhX,KAAKkd,mB,+BA2WC,IAAD,OACG5K,EAAMtS,KAAKP,MAAX6S,EADH,EASDtS,KAAKjB,MANLiZ,EAHC,EAGDA,QACA6D,EAJC,EAIDA,WACAC,EALC,EAKDA,cACAC,EANC,EAMDA,oBACAhE,EAPC,EAODA,cACAS,EARC,EAQDA,kBAOEV,GAJcC,EACd,CAACA,EAAc3Y,IAAI+c,OAAOnE,EAAQoE,OAAO,SAAA9a,GAAC,OAAIA,IAAMyW,EAAc3Y,IAAMid,YAAgB/a,MACxF0W,GAEoBJ,IAAI,SAAAtW,GAAC,OAC3B,kBAAC,GAAD,CACI6B,IAAK7B,EACLuP,OAAQvP,EACR6S,SAAU,EAAKgG,YAAYvD,IAAItV,GAC/BoR,SAAU,kBAAM,EAAK0I,sBAAsB9Z,QAI7C8b,EAAmB,IAAI3G,KAAKqF,GAAiB,IAAIlE,IAAI,SAAAtW,GAAC,MAAI,CAACA,EAAGA,MAC9D+b,GAAmBtB,GAAuB,IAAIK,OAChD,SAAA9a,GAAC,OAAIA,IAAMyW,EAAc3Y,IAAMid,YAAgB/a,KAAO8b,EAAiBxG,IAAItV,KAGzEgc,GAAcxB,GAAiB,IAChCK,OAAOkB,GACPzF,IAAI,SAAAtW,GAAC,OACF,kBAAC,GAAD,CACI6B,IAAK7B,EACLuP,OAAQvP,EACR6S,SAAU,EAAKgG,YAAYvD,IAAItV,GAC/BoR,SAAU,kBAAM,EAAK0I,sBAAsB9Z,QAIvD,OACI,kBAAC,IAAD,CACIic,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAAS3d,KAAK8J,YACd8T,kBAAgB,uBAChBC,mBAAiB,6BACjB5d,UAAU,kBACV,kBAAC,IAAD,CAAab,GAAG,wBAAwBkT,EAAE,gBAC1C,yBACIwL,IAAK9d,KAAK2b,UACVvc,GAAG,wBACH4V,iBAAe,EACf+I,gCAA8B,EAC9BC,YAAa1L,EAAE,UACfrP,UAAWjD,KAAKwb,oBAChByC,QAASje,KAAK0b,kBACdwC,QAASle,KAAKwc,oBAElB,yBAAKvc,UAAU,0BACX,yBAAKA,UAAU,uBAAuB6X,GACrC+D,GAAc,yBAAK5b,UAAU,8BAA8Bqd,IAE/Dtd,KAAKma,YAAYnJ,KAAO,GACrB,yBACI8M,IAAK9d,KAAKia,WACV7a,GAAG,yBACH4V,iBAAe,EACf+I,gCAA8B,EAC9BC,YAAa1L,EAAE,gBACf2L,QAASje,KAAK4c,mBACdsB,QAASle,KAAK6c,qBAGtB,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK8J,YAAayP,MAAM,WACpCjH,EAAE,WAENtS,KAAKma,YAAYnJ,KAAO,GACrB,kBAACoN,EAAA,EAAD,CAAQzP,QAAS3O,KAAK6Z,WAAYN,MAAM,UAAU8E,WAAS,GACtD/L,EAAE,UAGTtS,KAAKma,YAAYnJ,MAAQwH,GACvB,kBAAC4F,EAAA,EAAD,CAAQzP,QAAS3O,KAAK0Y,eAAgBa,MAAM,WACvCjH,EAAE,mB,GAndH/R,IAAMC,YAuenB8d,GALCC,YACZtK,cACAuK,eAGWF,CAAQvH,I,mHC9fRxU,eACX,0BAAMC,EAAE,ulBACR,a,kFCFWD,eACX,0BAAMC,EAAE,2zCACR,e,yCCFWD,eACX,0BAAMC,EAAE,+PACR,YCIEic,I,kNAyBFnN,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTc,kBAAoB,SAAAhC,GAAW,IACnBQ,EAAW,EAAKpR,MAAhBoR,OAEJR,EAAO4B,UAAYpB,GAEvB,EAAKU,e,qFAjCaqB,EAAWC,GAAY,IAAD,EAClB7S,KAAKP,MAAnBoR,EADgC,EAChCA,OAAQyB,EADwB,EACxBA,EAEhB,OAAIM,EAAU/B,SAAWA,GAIrB+B,EAAUN,IAAMA,I,0CAQpBX,IAAUb,GAAG,mCAAoC9Q,KAAKsR,wBACtDK,IAAUb,GAAG,kBAAmB9Q,KAAKqS,qB,6CAIrCV,IAAUZ,IAAI,mCAAoC/Q,KAAKsR,wBACvDK,IAAUZ,IAAI,kBAAmB/Q,KAAKqS,qB,+BAehC,IAAD,EACoCrS,KAAKP,MAAtC6S,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQkC,EADd,EACcA,kBAEb2L,EAAaC,YAAe9N,GAC5B+N,EAAQ9B,YAAajM,EAAQkC,EAAmBT,GAEtD,OACI,yBAAKrS,UAAU,gBACX,0BAAMA,UAAU,qBAAqB2e,GACpCF,GAAc,kBAAC,GAAD,CAAmBze,UAAU,2B,GA9ClCM,IAAMC,YAyDhCie,GAAYrN,aAAe,CACvB2B,mBAAmB,GAGRkB,qBAAkBwK,I,kBCqIlBI,I,mBAhMX,WAAYpf,GAAQ,IAAD,uBACf,4CAAMA,KA8DV2Q,mBAAqB,SAAAC,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,GACAA,EAAKoN,KAAV,CAEA,IAAIC,GAAiB,EACrB,OAAQrN,EAAKoN,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYxN,EAAKoN,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA/d,GAAC,OAAIA,EAAEiP,UAAYF,EAAOE,YAE3DwO,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGrN,EAAKoN,KAAKvO,UAAYF,EAAOE,UAC7BwO,GAAiB,GASzBA,GACA,EAAKA,eAAelO,KAnGT,EAuGnBkO,eAAiB,SAAAlO,GACb,EAAKnR,SAAS,CACV4f,SAAUC,YAA6B1O,GACvC2O,SAAUC,YAAkC5O,MA1GjC,EA8GnB6O,qBAAuB,SAAArP,GAAW,IACtBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAH6B,IAKrBoN,EAASpN,EAAToN,KACHA,KAGDA,GACmB,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,UAC7CA,EAAKvO,UAAYF,EAAOE,SAExB,EAAKwO,eAAelO,MA3HT,EA+HnB8O,2BAA6B,SAAAtP,GAAW,IAC5BQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAHmC,IAK3BoN,EAASpN,EAAToN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmB9O,EAAO8O,gBACjF,EAAKJ,eAAelO,KAxIT,EA4InB+O,2BAA6B,SAAAvP,GAAW,IAC5BQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAHmC,IAK3BoN,EAASpN,EAAToN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkBxP,EAAOwP,eAChF,EAAKd,eAAelO,KArJT,EAyJnBiP,mBAAqB,SAAAzP,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAH2B,IAKnBoN,EAASpN,EAAToN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmB9O,EAAO0P,YAAY3gB,IAC7F,EAAK2f,eAAelO,KAlKT,EAsKnBmP,mBAAqB,SAAA3P,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAH2B,IAKnBoN,EAASpN,EAAToN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkBxP,EAAO4P,WAAW7gB,IAC3F,EAAK2f,eAAelO,KA/KT,IAGPA,EAAW,EAAKpR,MAAhBoR,OAHO,OAKf,EAAK9R,MAAQ,CACTiV,WAAYnD,EACZyO,SAAUC,YAA6B1O,GACvC2O,SAAUC,YAAkC5O,IARjC,E,mFA0BG+B,EAAWC,GAAY,IACjChC,EAAW7Q,KAAKP,MAAhBoR,OADgC,EAET7Q,KAAKjB,MAA5BugB,EAFgC,EAEhCA,SAAUE,EAFsB,EAEtBA,SAElB,OAAI5M,EAAU/B,SAAWA,IAIrBgC,EAAUyM,WAAaA,GAIvBzM,EAAU2M,WAAaA,K,0CAQ3B/O,IAAUK,GAAG,mBAAoB9Q,KAAKoQ,oBACtC6O,KAAgBnO,GAAG,mBAAoB9Q,KAAK8f,oBAC5CI,KAAgBpP,GAAG,mBAAoB9Q,KAAKggB,oBAC5CvP,IAAUK,GAAG,qBAAsB9Q,KAAK0f,sBACxCT,KAAgBnO,GAAG,2BAA4B9Q,KAAK2f,4BACpDO,KAAgBpP,GAAG,2BAA4B9Q,KAAK4f,8B,6CAIpDnP,IAAUM,IAAI,mBAAoB/Q,KAAKoQ,oBACvC6O,KAAgBlO,IAAI,mBAAoB/Q,KAAK8f,oBAC7CI,KAAgBnP,IAAI,mBAAoB/Q,KAAKggB,oBAC7CvP,IAAUM,IAAI,qBAAsB/Q,KAAK0f,sBACzCT,KAAgBlO,IAAI,2BAA4B/Q,KAAK2f,4BACrDO,KAAgBnP,IAAI,2BAA4B/Q,KAAK4f,8B,+BAuH/C,IACYO,EAAqBngB,KAAKP,MAApC6f,SADH,EAE0Btf,KAAKjB,MAA5BugB,EAFH,EAEGA,SAAUE,EAFb,EAEaA,SAElB,OACI,yBAAKvf,UAAWuO,IAAW,gBAAiB,CAAE,uBAAwBgR,KACjEW,EAAmBA,EAAmB,KAAO,KAC7Cb,M,gDA9KmB7f,EAAOV,GACnC,GAAIU,EAAMoR,SAAW9R,EAAMiV,WAAY,CAAC,IAC5BnD,EAAWpR,EAAXoR,OAER,MAAO,CACHmD,WAAYnD,EACZyO,SAAUC,YAA6B1O,GACvC2O,SAAUC,YAAkC5O,IAIpD,OAAO,S,GAxBYtQ,IAAMC,YCC3B4f,I,mBACF,WAAY3gB,GAAQ,IAAD,uBACf,4CAAMA,KAYVyE,YAAc,WAAO,IAAD,EACa,EAAKzE,MAA1BoR,EADQ,EACRA,OAAQ6B,EADA,EACAA,SACXA,GAELA,EAAS7B,IAjBM,IAGPA,EAAW,EAAKpR,MAAhBoR,OAHO,OAIf,EAAK9R,MAAQ,CACT2S,KAAMC,IAAUhH,IAAIkG,IALT,E,mFASG+B,EAAWC,GAC7B,OAAOD,EAAU/B,SAAW7Q,KAAKP,MAAMoR,S,+BAUjC,IAAD,EACqF7Q,KAAKP,MAAvFoR,EADH,EACGA,OAAQyO,EADX,EACWA,SAAUe,EADrB,EACqBA,aAAcC,EADnC,EACmCA,WAAYvN,EAD/C,EAC+CA,kBAAmBE,EADlE,EACkEA,IAAKsN,EADvE,EACuEA,UAEtEC,EAAkBlN,YAASzC,GAEjC,OACI,yBAAK5Q,UAAWuO,IAAW,OAAQ,CAAE,WAAYyE,IAAQtE,QAAS3O,KAAKkE,aACnE,yBAAKjE,UAAU,gBACX,kBAAC,GAAD,CAAUgT,IAAKA,EAAKpC,OAAQA,EAAQ6B,SAAU2N,EAActN,kBAAmBA,IAC9EwN,GACG,yBAAKtgB,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAa4Q,OAAQA,EAAQkC,kBAAmBA,KAEnDuN,KAAgBE,IAAoBzN,IACjC,yBAAK9S,UAAU,mBACX,kBAAC,GAAD,CAAc4Q,OAAQA,EAAQyO,SAAUA,Y,GArCzD/e,IAAMC,YA0DzB4f,GAAKhP,aAAe,CAChB2B,mBAAmB,EACnBuN,YAAY,EACZC,WAAW,GAGAH,UCxEA7d,eACX,0BAAMC,EAAE,0tBACR,QCIEie,I,mBACF,WAAYhhB,GAAQ,qEACVA,I,sEAGA,IAAD,EAC+CO,KAAKP,MAAjDoR,EADH,EACGA,OAAQyB,EADX,EACWA,EAAGoO,EADd,EACcA,WAAY/R,EAD1B,EAC0BA,QAASgP,EADnC,EACmCA,QAEpCgD,EAAOrO,EAAE,YAOb,OANIyB,aAAclD,GACd8P,EAAOrO,EAAE,QACFsO,YAAc/P,KACrB8P,EAAOrO,EAAE,gBAIT,yBAAKrS,UAAU,iBACVygB,GACG,kBAACrH,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAGR,yBAAK1d,UAAU,oCAAoC0O,QAASA,GACxD,0BAAM1O,UAAU,yBAAyB0gB,KAE3CD,GACE,kBAACrH,EAAA,EAAD,CAAYpZ,UAAU,sBAAsB0O,QAASgP,GACjD,kBAAC5O,EAAA,EAAD,Y,GA3BQxO,IAAMC,YAmCvByT,iBAAkBwM,I,iFC+ClBI,G,YAjFX,WAAYphB,GAAQ,IAAD,uBACf,4CAAMA,KAqCVqhB,iCAAmC,SAAAzQ,GAAW,IAClC4B,EAAY5B,EAAZ4B,QACApB,EAAW,EAAKpR,MAAhBoR,OAEHoB,GACDA,IAAYpB,GAEhB,EAAKnR,SAAS,CAAEqhB,QAASC,YAAYnQ,MA7CtB,EAgDnBoQ,kCAAoC,SAAA5Q,GAAW,IACnCQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAE3B,OAAQR,EAAO6Q,MAAM,UACjB,IAAK,sCAC0B,uBAAvBxP,EAAKoN,KAAK,UAA4D,uBAAvBpN,EAAKoN,KAAK,UACzD,EAAKpf,SAAS,CAAEqhB,QAASC,YAAYnQ,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBa,EAAKoN,KAAK,UAAyD,mBAAvBpN,EAAKoN,KAAK,UACtD,EAAKpf,SAAS,CAAEqhB,QAASC,YAAYnQ,OA7DlC,EAoEnBsQ,2BAA6B,WACzB,EAAKzhB,SAAS,CAAEqhB,SAAU,EAAKhiB,MAAMgiB,UACrC,EAAKK,wCAtEU,EAyEnBC,4BAA8B,WAAO,IACzBxQ,EAAW,EAAKpR,MAAhBoR,OACAkQ,EAAY,EAAKhiB,MAAjBgiB,QAERO,aAA+BzQ,EAAQkQ,IA7ExB,IAGPlQ,EAAWpR,EAAXoR,OAHO,OAKf,EAAK9R,MAAQ,CACTiV,WAAYnD,EACZkQ,QAASC,YAAYnQ,IAGzB,EAAKuQ,qCAAuCG,YACxC,EAAKF,4BACLG,KAZW,E,iFA6Bf7P,IAAUb,GAAG,iCAAkC9Q,KAAK8gB,kCACpDW,KAAkB3Q,GAAG,kCAAmC9Q,KAAKihB,qC,6CAI7DtP,IAAUZ,IAAI,iCAAkC/Q,KAAK8gB,kCACrDW,KAAkB1Q,IAAI,kCAAmC/Q,KAAKihB,sC,gDAnBlCxhB,EAAOV,GACnC,GAAIU,EAAMoR,SAAW9R,EAAMiV,WAAY,CAAC,IAC5BnD,EAAWpR,EAAXoR,OAER,MAAO,CACHmD,WAAYnD,EACZkQ,QAASC,YAAYnQ,IAG7B,OAAO,S,GA1BatQ,IAAMC,WCI5BkhB,G,iLACQ,IACEpP,EAAMtS,KAAKP,MAAX6S,EACAyO,EAAY/gB,KAAKjB,MAAjBgiB,QAER,OACI,kBAACY,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS3O,KAAKmhB,4BACjD,kBAACU,GAAA,EAAD,KAAgBd,EAAwC,kBAAC,KAAD,MAA9B,kBAAC,KAAD,OAC1B,kBAACe,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/B5P,EAAE,oBAIf,kBAAC6P,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ7I,MAAM,UAAU5J,SAAU3P,KAAKmhB,2BAA4BkB,SAAUtB,U,GAhB7DF,IAuBrB5M,iBAAkByN,I,kBCoB3BY,I,mBACF,WAAY7iB,GAAQ,IAAD,uBACf,4CAAMA,KA6FVkgB,2BAA6B,SAAAtP,GACzB,IAAMqB,EAAOC,IAAUhH,IAAI,EAAKlL,MAAMoR,QACjCa,GAGDA,EAAKoN,MACkB,uBAAvBpN,EAAKoN,KAAK,UACVpN,EAAKoN,KAAKK,iBAAmB9O,EAAO8O,gBAEpC,EAAK5N,eAvGM,EA2GnBqO,2BAA6B,SAAAvP,GACzB,IAAMqB,EAAOC,IAAUhH,IAAI,EAAKlL,MAAMoR,QACjCa,GAGDA,EAAKoN,MACkB,uBAAvBpN,EAAKoN,KAAK,UACVpN,EAAKoN,KAAKe,gBAAkBxP,EAAOwP,eAEnC,EAAKtO,eApHM,EAwHnBmO,qBAAuB,SAAArP,GACnB,IAAMqB,EAAOC,IAAUhH,IAAI,EAAKlL,MAAMoR,QACjCa,KAGDA,EAAKoN,MACmB,oBAAvBpN,EAAKoN,KAAK,UAAyD,mBAAvBpN,EAAKoN,KAAK,UACvDpN,EAAKoN,KAAKvO,UAAYF,EAAOE,SAE7B,EAAKgB,gBAjIM,EAqInBnB,mBAAqB,SAAAC,GACb,EAAK+O,QAAQxI,IAAIvG,EAAOE,UACxB,EAAKgB,eAvIM,EA2InByF,YAAc,WACV,EAAKuL,oBA5IU,EA+InBA,iBAAmB,WAAO,IAAD,EACK,EAAK9iB,MAAvBoR,EADa,EACbA,OAAQ2R,EADK,EACLA,MAEVtQ,EAAQxH,IAAUyH,WAExB+F,YAAiBhG,EAAO,CAACrB,IACzB,IAAMuO,EAAUqD,YAAoB5R,GAAQ+G,IAAI,SAAAtW,GAAC,OAAIA,EAAEiP,UACvDmS,YAAiBxQ,EAAOkN,GAEpBoD,GACAG,YAAgB9R,IAzJL,EA6JnB+R,mBAAqB,WAAO,IAAD,EACD,EAAKnjB,MAAnB6S,EADe,EACfA,EAAGzB,EADY,EACZA,OACLgS,EAAWxK,YAAgBxH,GACjC,GAAKgS,EAAL,CAEA,IAAMC,EAAoBvM,KAAY5L,IAAI,YAG1C2J,IAFqBwO,EAAoBA,EAAkB1Z,MAAQ,yBAE/CyZ,GAEpB,EAAKjK,sBAAsBtG,EAAE,iBAvKd,EA0KnBsG,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAKpZ,MAAxCqZ,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,QACJmW,aAAW,QACXC,MAAM,UACNtZ,UAAU,4BACV0O,QAAS,WACLoK,EAAcC,KAElB,kBAACjK,EAAA,EAAD,WAzLG,EA+LnBgU,gBAAkB,WAAO,IAAD,EACE,EAAKtjB,MAAnB6S,EADY,EACZA,EAAGzB,EADS,EACTA,OACLmS,EAAcC,YAAmBpS,GAClCmS,IAEL1O,GAAK4O,aAAkBF,IAEvB,EAAKpK,sBAAsBtG,EAAE,kBAtMd,EAyMnB6Q,kBAAoB,WAChB,EAAKC,mBAAmBlJ,QAAQmJ,UAAY,GA1M7B,EA6MnBC,iBAAmB,WAAO,IAAD,EACK,EAAK7jB,MAAvBoR,EADa,EACbA,OAAQ2R,EADK,EACLA,MACV9Q,EAAOC,IAAUhH,IAAIkG,GACtBa,GACAA,EAAKE,QAEV2R,aAA6B,CAAE1S,WAE3B2R,GACAnjB,IAAgBgI,aAAa,CACzB,QAAS,2BACTwJ,OAAQ,MAxND,EA6NnB2S,eAAiB,WAAO,IAAD,EACO,EAAK/jB,MAAvBoR,EADW,EACXA,OAAQ2R,EADG,EACHA,MAEhBiB,aAAS5S,EAAQ,MAAM,GAEnB2R,GACAnjB,IAAgBgI,aAAa,CACzB,QAAS,2BACTwJ,OAAQ,KArOD,EA0OnB6S,eAAiB,SAAApT,GACbqT,aAASrT,GAAQ,IA3OF,EA8OnBsT,iBAAmB,WACf,OAAK,EAAKR,mBAEH,EAAKA,mBAAmBlJ,QAAQrN,aAFF,GA5OrC,EAAKuW,mBAAqB7iB,IAAM4c,YAHjB,IAKPtM,EAAW,EAAKpR,MAAhBoR,OALO,OAOf,EAAKuO,QAAU,IAAI3I,IACnB,EAAK1X,MAAQ,CACTiV,WAAYnD,GATD,E,qFAuBKhR,EAAWC,GACZE,KAAKP,MAAhBoR,OADmC,IAGrCgT,EAAO7jB,KAAKojB,mBAAmBlJ,QAYrC,MAViB,CACbmJ,UAF8CQ,EAA1CR,UAGJS,aAH8CD,EAA/BC,aAIfC,aAJ8CF,EAAjBE,gB,4CAcfnR,EAAWC,GAAY,IAAD,EACc7S,KAAKP,MAAnDoR,EADgC,EAChCA,OAAQmT,EADwB,EACxBA,MAAOC,EADiB,EACjBA,SAAUC,EADO,EACPA,iBAEjC,OAAItR,EAAU/B,SAAWA,IAIrB+B,EAAUqR,WAAaA,IAIvBrR,EAAUsR,mBAAqBA,GAI/BtR,EAAUoR,QAAUA,M,yCAOTnkB,EAAWC,EAAWC,GAAW,IACxC8Q,EAAW7Q,KAAKP,MAAhBoR,OACJhR,EAAUgR,SAAWA,GACrB7Q,KAAKgX,cAGT,IAAM6M,EAAO7jB,KAAKojB,mBAAmBlJ,QAC7BmJ,EAA0CtjB,EAA1CsjB,UAA0CtjB,EAA/B+jB,aAA+B/jB,EAAjBgkB,aAC7BlkB,EAAUgR,SAAWA,EACrBgT,EAAKR,UAAYA,EAEjBQ,EAAKR,UAAY,I,0CAKrBrjB,KAAKgX,cAELvG,IAAUK,GAAG,mBAAoB9Q,KAAKoQ,oBACtCK,IAAUK,GAAG,qBAAsB9Q,KAAK0f,sBACxCT,KAAgBnO,GAAG,2BAA4B9Q,KAAK2f,4BACpDO,KAAgBpP,GAAG,2BAA4B9Q,KAAK4f,8B,6CAIpDnP,IAAUM,IAAI,mBAAoB/Q,KAAKoQ,oBACvCK,IAAUM,IAAI,qBAAsB/Q,KAAK0f,sBACzCT,KAAgBlO,IAAI,2BAA4B/Q,KAAK2f,4BACrDO,KAAgBnP,IAAI,2BAA4B/Q,KAAK4f,8B,+BAyJ/C,IAAD,SAgBD5f,KAAKP,MAdLihB,EAFC,EAEDA,WACAzgB,EAHC,EAGDA,UACA4Q,EAJC,EAIDA,OACA8M,EALC,EAKDA,QACAwG,EANC,EAMDA,oBACAC,EAPC,EAODA,mBACAC,EARC,EAQDA,sBACAC,EATC,EASDA,kBAEAC,GAXC,EAUDC,kBAVC,EAWDD,oBACAE,EAZC,EAYDA,mBACAC,EAbC,EAaDA,uBACAlC,EAdC,EAcDA,MACAlQ,EAfC,EAeDA,EAfC,EAkBgCtS,KAAKP,MAApCwkB,EAlBD,EAkBCA,SAAUC,EAlBX,EAkBWA,iBAEhBA,EAAmBA,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GApBlD,OAmBLD,EAAWA,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAGgErM,IACnG,SAAC+M,EAAIhO,GAAL,OAAWgO,EAAKT,EAAiBvN,KAvBhC,mBAsBEiO,EAtBF,KAsBcC,EAtBd,KAsB0BC,EAtB1B,KAsByCC,EAtBzC,KAsBqDC,EAtBrD,KAsB+DC,EAtB/D,KA0BCvT,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EACD,OACI,yBAAKzR,UAAU,gBACX,kBAAC,GAAD,CAAmB0d,QAASA,IAC5B,yBAAKG,IAAK9d,KAAKojB,mBAAoBnjB,UAAU,uBAKzD,IAAIilB,EAAqB,EACzB,GAAInR,aAAclD,GAAS,CACvB,IAAMmO,EAAWvO,IAAUyO,YAAYxN,EAAKoN,KAAKvO,SACjD2U,EAAqBlG,EAAWA,EAASmG,sBAAwBD,EAGrE,IAAMrC,EAAWxK,YAAgBxH,GAC3BmS,EAAcC,YAAmBpS,GACnCuU,EAAMC,YAAWxU,GACfyU,EAAUC,YAAY1U,GACtB2U,EAAOlS,YAASzC,GAEhBuO,EAAUqD,YAAoB5R,GAC9B4U,EAAQ,GACdzlB,KAAKof,QAAU,IAAI3I,IACnB2I,EAAQrd,QAAQ,SAAA2jB,GACZ,IAAMlV,EAAOC,IAAU9F,IAAI+a,EAAOnV,SAC9BC,IACA,EAAK4O,QAAQ9D,IAAI9K,EAAKpR,GAAIoR,EAAKpR,IAC/BqmB,EAAMlO,KAAK/G,MAInB,IAGMmV,EAHcF,EAAMG,KAAK,SAACtkB,EAAGukB,GAC/B,OAAOC,YAAmBD,GAAKC,YAAmBxkB,KAE5BsW,IAAI,SAAApH,GAAI,OAC9B,kBAACmR,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAYkD,IAAKqN,EAAKpR,IAC7C,kBAAC,KAAD,CAAMkR,OAAQE,EAAKpR,GAAIsT,SAAU,EAAKgR,oBAItC9R,EAAUF,EAAVE,MAER,GAAI2T,YAAY1U,IAAW+P,YAAc/P,GAAS,CAAC,IAAD,EACGkV,aAA6BX,EAAK,IAArEY,EADgC,EACtCva,KAAyBwa,EADa,EACvB3L,SACnB2L,EAAY5P,OAAS,IACrB+O,EAAMc,aAAiB,CAAE,QAAS,gBAAiBza,KAAMua,EAAS1L,SAAU2L,KAIpF,IAAMtM,EACF,oCACI,kBAAC,GAAD,CACI9I,OAAQA,EACR6P,WAAYA,EACZ/C,QAASA,EACThP,QAAS3O,KAAKmjB,oBAElB,yBAAKrF,IAAK9d,KAAKojB,mBAAoBnjB,UAAU,qBACzC,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACI4Q,OAAQA,EACRoC,KAAK,EACLqN,YAAY,EACZvN,mBAAoByP,EACpBnC,aAAczO,EAAQ5R,KAAKsjB,iBAAmB,SAGpDT,GAAYG,GAAeoC,IACzB,oCACI,kBAACe,GAAA,EAAD,KACKtD,GACG,kBAAClB,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS3O,KAAK4iB,oBACjD,kBAACf,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BW,MAMpBG,GACG,oCACI,kBAACrB,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS3O,KAAK+iB,iBACjD,kBAAClB,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BgB,aAAkBF,QAO1CoC,GACG,kBAACzD,GAAA,EAAD,CAAU1hB,UAAU,YAAYmmB,WAAW,cACvC,kBAACvE,GAAA,EAAD,KACI,kBAAC,KAAD,CAAkB5hB,UAAU,4BAEhC,kBAAC6hB,GAAA,EAAD,CACIC,QAASqD,EACT/e,MAAO,CAAEgP,WAAY,WAAYgR,SAAU,qBAOhEb,GAAQF,GAAY9C,IAAU8C,IAC7B,oCACI,kBAACgB,GAAA,EAAD,MACA,kBAACH,GAAA,EAAD,MACMX,GAAQ,kBAAC,GAAD,CAAuB3U,OAAQA,IAExC2R,IAAU8C,GACP,kBAAC3D,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS3O,KAAKwjB,gBACjD,kBAAC1B,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYzI,MAAM,UAAU0I,QAAQ,UAAUC,QAAM,GAC/C5P,EAAE,eAAeiU,eAG1BlgB,MAAO,CAAEmgB,YAAa,UAO5C5B,EAAa,GACXC,EAAa,GACbC,EAAgB,GAChBC,EAAa,GACbC,EAAW,GACXC,EAAyB,GACzBC,EAAqB,IACrB,oCACI,kBAACoB,GAAA,EAAD,MACA,kBAACH,GAAA,EAAD,KACKvB,EAAa,GACV,kBAACjD,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS4V,GAC5C,kBAAC1C,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAChB,IAAf0C,EAAmB,UAAnB,UAAkCA,EAAlC,eAMpBC,EAAa,GACV,kBAAClD,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS8V,GAC5C,kBAAC5C,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAChB,IAAf2C,EAAmB,UAAnB,UAAkCA,EAAlC,eAMpBC,EAAgB,GACb,kBAACnD,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS0V,GAC5C,kBAACxC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GACb,IAAlB4C,EAAsB,SAAtB,UAAoCA,EAApC,cAMpBC,EAAa,GACV,kBAACpD,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAASyV,GAC5C,kBAACvC,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAChB,IAAf6C,EAAmB,eAAnB,UAAuCA,EAAvC,oBAMpBC,EAAW,GACR,kBAACrD,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS2V,GAC5C,kBAACzC,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAClB,IAAb8C,EAAiB,gBAAjB,UAAsCA,EAAtC,qBAMpBC,EAAyB,GACtB,kBAACtD,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAAS+V,GAC5C,kBAAC7C,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GACJ,IAA3B+C,EACK,kBADL,UAEQA,EAFR,uBAQpBC,EAAqB,GAClB,kBAACvD,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,YAAY0O,QAASwV,GAC5C,kBAACtC,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GACR,IAAvBgD,EACK,oBADL,UAEQA,EAFR,2BAWhCS,EAAMtP,OAAS,GACZ,oCACI,kBAACiQ,GAAA,EAAD,MACA,kBAACH,GAAA,EAAD,KAAOR,MAO3B,OAAOnD,EAAQ,oCAAG7I,GAAc,yBAAK1Z,UAAWuO,IAAW,eAAgBvO,IAAa0Z,M,gDAvgB5Dla,EAAOV,GACnC,OAAIU,EAAMoR,SAAW9R,EAAMiV,WAChB,CACHA,WAAYvU,EAAMoR,QAInB,S,GArBWtQ,IAAMC,YA6iBjB8d,GAPCC,YACZkI,cACAxS,cACAuK,eACAkI,cAGWpI,CAAQgE,ICzkBRqE,I,wLApBD,IACEhJ,EAAY3d,KAAKP,MAAjBke,QAER,OACI,yBAAK1d,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,0B,GAVeM,IAAMC,YCMnComB,I,mBACF,WAAYnnB,GAAQ,IAAD,8BACf,4CAAMA,KA0BVgT,aAAe,SAAA5B,GAAW,IACd2R,EAAU,EAAK/iB,MAAf+iB,MAERiB,aAAS5S,GAEL2R,GACAnjB,IAAgBgI,aAAa,CACzB,QAAS,2BACTwJ,OAAQ,KAhChB,EAAK9R,MAAQ,CACTiZ,QAAS,IAJE,E,iFAQE,IAAD,OACRnH,EAAW7Q,KAAKP,MAAhBoR,OAEFP,EAASM,YAAcC,GACxBP,GAELjR,IAAgBC,KAAK,CACjB,QAAS,oBACTiR,QAASD,EACT+G,eAAgB,EAChBC,MAAO,MACR/X,KAAK,SAAAC,GACJ,IAAM0S,EAAQxH,IAAUyH,WACxB+F,YAAiBhG,EAAO1S,EAAOyY,UAE/B,EAAKvY,SAAS,CAAEsY,QAASxY,EAAOyY,e,+BAiB9B,IAAD,SACiCjY,KAAKP,MAAnConB,EADH,EACGA,UAAWlJ,EADd,EACcA,QAAS6E,EADvB,EACuBA,MAGtB1K,EAFc9X,KAAKjB,MAAjBiZ,QAEcJ,IAAI,SAAAtW,GAAC,OACvB,kBAACqgB,GAAA,EAAD,CAAUC,QAAM,EAACze,IAAK7B,GAClB,kBAAC,GAAD,CAAMuP,OAAQvP,EAAGoR,SAAU,EAAKD,kBAIlCkH,EACF,oCACI,kBAAC,GAAD,CAAsBgE,QAASA,IAC/B,yBAAK1d,UAAU,wBAAwBoG,MAAO,CAAEwgB,cAC3C/O,IAKb,OAAO0K,EAAQ,oCAAG7I,GAAc,yBAAK1Z,UAAU,oBAAoB0Z,O,GA5D9CpZ,IAAMC,YAuEnComB,GAAexV,aAAe,CAC1BoR,OAAO,EACPqE,UAAW,GAGAD,U,2DC9ETE,I,kNACFC,kBAAoB,SAAA7jB,GAAU,IAAD,EACc,EAAKzD,MAApCoR,EADiB,EACjBA,OAAQmW,EADS,EACTA,WAEhBrJ,EAHyB,EACEA,SAEnBza,GAERugB,aAAS5S,EAAQmW,I,EAGrBC,cAAgB,SAAA/jB,GAAU,IAAD,EACkB,EAAKzD,MAApCoR,EADa,EACbA,OAAQmW,EADK,EACLA,WAEhBrJ,EAHqB,EACMA,SAEnBza,GAERgkB,aAAgBrW,EAAQ,CAACmW,K,EAG7BG,aAAe,SAAAjkB,GAAU,IAAD,EACmB,EAAKzD,MAApCoR,EADY,EACZA,OAAQmW,EADI,EACJA,WAEhBrJ,EAHoB,EACOA,SAEnBza,GAERkkB,aAAevW,EAAQ,CAACmW,K,wEAGlB,IAAD,EAC4EhnB,KAAKP,MAA9E6S,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQmW,EADd,EACcA,UAAWzJ,EADzB,EACyBA,KAAMI,EAD/B,EAC+BA,QAAS0J,EADxC,EACwCA,eAAgBC,EADxD,EACwDA,gBAEvDzO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAJhB,IAMGa,EAAiFb,EAAjFa,iBAAkB6N,EAA+D1O,EAA/D0O,6BAA8BC,EAAiC3O,EAAjC2O,6BAExD,OACI,kBAACC,GAAA,EAAD,CACIlK,KAAMA,EACNI,QAASA,EACT+J,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,mBACpB+J,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBAChB,kBAACmjB,GAAA,EAAD,KACKT,GAAmB,kBAACU,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK+mB,mBAAoBzU,EAAE,gBACjEoH,GAAoB,kBAACsO,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKinB,eAAgB3U,EAAE,aAC7DiV,GAAgCC,IAC9B,kBAACQ,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmnB,cAAe7U,EAAE,iB,GArDvC/R,IAAMC,YAuEjByT,iBAAkB6S,I,SCNlBmB,I,kNAlEXlpB,MAAQ,CACJmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,G,EAGT2hB,sB,sCAAwB,WAAMjlB,GAAN,iBAAAqR,EAAA,qDAChBrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAEc,EAAK7F,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,KAEvB5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,SAhBY,yC,wDAqBxB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,K,wEAGvB,IAAD,EAC0CloB,KAAKP,MAA5CoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAWM,EADtB,EACsBA,gBADtB,EAE8BtnB,KAAKjB,MAAhCmpB,EAFH,EAEGA,YAAa5hB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBqS,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,OAAKnO,EAGD,oCACI,yBAAK5Y,UAAU,kBAAkBooB,cAAeroB,KAAKmoB,uBAChDG,aAASzP,EAAS,kBAAM0P,aAAU1X,EAAQmW,GAAW,MAE1D,kBAAC,GAAD,CACInW,OAAQA,EACRmW,UAAWA,EACXK,eAAgB,CAAE7gB,MAAKF,QACvBiX,KAAM2K,EACNZ,gBAAiBA,EACjB3J,QAAS3d,KAAKooB,0BAbL,S,GAzCA7nB,IAAMC,YCNpB+B,eACX,0BAAMC,EAAE,wjBACR,U,UCOEgmB,I,mBACF,WAAY/oB,GAAQ,IAAD,8BACf,4CAAMA,KAqBVgpB,aAAe,WACX,GAAI,EAAKC,eAAexO,SACF,EAAKwO,eAAexO,QAAQqB,UAC/B,CACX,EAAKmN,eAAexO,QAAQqB,UAAY,GAD7B,IAGHoN,EAAa,EAAKlpB,MAAlBkpB,SACR,IAAKA,EAAU,OAGf,YADAA,EAAS,IATA,IAcTC,EAAkB,EAAKnpB,MAAvBmpB,cACAC,EAAe,EAAK9pB,MAApB8pB,WAER,EAAKnpB,SAAS,CAAEmpB,YAAaA,IAEzBD,GACAA,KA1CW,EA8CnBE,cAAgB,SAAA5lB,GACU,KAAlBA,EAAMuY,SACNvY,EAAM2B,kBAhDK,EAoDnBkkB,YAAc,WACV,IAAMzb,EAAU,EAAKob,eAAexO,QACpC,GAAK5M,EAAL,CAFgB,IAIRf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MANR,IAQRgP,EAAcjO,EAAdiO,UAEAoN,EAAa,EAAKlpB,MAAlBkpB,SACHA,GAELA,EAASpN,KAjEM,EAoEnByN,YAAc,SAAA9lB,GACV,IAAMuZ,EAAYvZ,EAAMwZ,cAAcC,QAAQ,cAC1CF,IACAvZ,EAAM2B,iBACNW,SAASqQ,YAAY,cAAc,EAAO4G,KArE9C,EAAKiM,eAAiBnoB,IAAM4c,YAE5B,EAAKpe,MAAQ,CACT8pB,YAAY,GAND,E,gFAUAhpB,EAAWC,EAAWC,GAAW,IAAD,OACvC8oB,EAAe7oB,KAAKjB,MAApB8pB,WAEJA,GAAcA,IAAehpB,EAAUgpB,YACvChf,WAAW,WACH,EAAK6e,eAAexO,SACpB,EAAKwO,eAAexO,QAAQvE,SAEjCsT,O,+BA0DD,IAAD,EAC4CjpB,KAAKP,MAA9C6S,EADH,EACGA,EAAGsM,EADN,EACMA,MAAOjQ,EADb,EACaA,QAASgP,EADtB,EACsBA,QAASgL,EAD/B,EAC+BA,SAC5BE,EAAe7oB,KAAKjB,MAApB8pB,WAER,OACI,yBAAK5oB,UAAU,iBACT4oB,EAUE,oCACI,yBAAK5oB,UAAU,4BACX,yBACIb,GAAG,yBACH0e,IAAK9d,KAAK0oB,eACV1K,YAAa1L,EAAE,UACf0C,iBAAe,EACf+I,gCAA8B,EAC9B9a,UAAWjD,KAAK8oB,cAChB7K,QAASje,KAAK+oB,YACd7K,QAASle,KAAKgpB,gBAnB1B,oCACI,kBAAC3P,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,oCAAoC0O,QAASA,GACxD,0BAAM1O,UAAU,yBAAyB2e,KAmBpDsK,QAAQP,IACL,kBAACtP,EAAA,EAAD,CAAYpZ,UAAU,sBAAsBwO,YAAazO,KAAKyoB,cAC1D,kBAACU,GAAA,EAAD,CAAe5L,KAAMsL,EAAYO,KAAM,kBAAC,GAAD,MAAgBC,SAAU,kBAACta,EAAA,EAAD,c,GA9GzDxO,IAAMC,YA8HvByT,iBAAkBuU,IC8VlBc,I,mBAjdX,WAAY7pB,GAAQ,IAAD,EACf,GADe,qBACX,6CAAe6pB,EACf,MAAM,IAAIC,UAAU,uDAFT,OAOf,4CAAM9pB,KAyDV+pB,uBAAyB,SAAAnZ,GAAW,IAAD,EACI,EAAK5Q,MAAhCoR,EADuB,EACvBA,OAAQ4Y,EADe,EACfA,eADe,EAEE,EAAK1qB,MAA9B4mB,EAFuB,EAEvBA,MAAO+D,EAFgB,EAEhBA,cAEPzX,EAAkD5B,EAAlD4B,QAASqG,EAAyCjI,EAAzCiI,WAAyBqR,GAAgBtZ,EAA7BuZ,YAA6BvZ,EAAhBsZ,aAEpC9Q,EAAUY,KAAa9O,IAAIsH,EAASqG,GAG1C,GAAIrG,IAAYpB,EAAQ,CACpB,IAAK8U,EAAMtP,OAAQ,OACnB,IAAKwT,YAAQvR,EAAYqN,EAAM,GAAGvmB,GAAIumB,EAAMA,EAAMtP,OAAS,GAAGjX,IAAI,GAAO,OAEzE,IAAM0qB,EAAQnE,EAAMoE,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOkZ,IACxC,EAAK0R,eAAeL,IACL,IAAXG,EAEA,EAAKpqB,SAAS,CAAEimB,MAAOsE,YAActE,EAAO9M,EAASqR,QAGrD,EAAKxqB,SAAS,CAAEimB,MAAM,GAAD,oBAAMA,EAAMwE,MAAM,EAAGL,IAArB,CAA6BjR,GAA7B,aAAyC8M,EAAMwE,MAAML,EAAQ,QAGvE,IAAXA,GAGA,EAAKpqB,SAAS,CAAEimB,MAAOA,EAAMvJ,OAAO,SAAA9a,GAAC,OAAIA,EAAElC,KAAOkZ,WAGvD,GAAIrG,IAAYwX,EAAgB,CACnC,IAAKC,EAAcrT,OAAQ,OAC3B,IAAKwT,YAAQvR,EAAYoR,EAAc,GAAGtqB,GAAIsqB,EAAcA,EAAcrT,OAAS,GAAGjX,IAAI,GAAO,OAEjG,IAAM0qB,EAAQJ,EAAcK,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOkZ,IAChD,EAAK0R,eAAeL,IACL,IAAXG,EAEA,EAAKpqB,SAAS,CACVgqB,cAAeO,YAAcP,EAAe7Q,EAASqR,QAIzD,EAAKxqB,SAAS,CACVgqB,cAAc,GAAD,oBAAMA,EAAcS,MAAM,EAAGL,IAA7B,CAAqCjR,GAArC,aAAiD6Q,EAAcS,MAAML,EAAQ,QAInF,IAAXA,GAGA,EAAKpqB,SAAS,CAAEgqB,cAAeA,EAActN,OAAO,SAAA9a,GAAC,OAAIA,EAAElC,KAAOkZ,QAlH/D,EAwHnB8R,mBAAqB,SAAA/Z,GAAW,IAAD,EACQ,EAAK5Q,MAAhCoR,EADmB,EACnBA,OAAQ4Y,EADW,EACXA,eADW,EAEM,EAAK1qB,MAA9B4mB,EAFmB,EAEnBA,MAAO+D,EAFY,EAEZA,cAEP7Q,EAAYxI,EAAZwI,QACA5G,EAAY4G,EAAZ5G,QAER,GAAIA,IAAYpB,GACX,EAAKwZ,eAAexR,GAAzB,CAEA,IAAM3G,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO,CAAC2G,IAExB5G,IAAYpB,EACZ,EAAKnR,SAAS,CAAEimB,MAAO,CAAC9M,GAASsD,OAAOwJ,KACjC1T,IAAYwX,GACnB,EAAK/pB,SAAS,CAAEgqB,cAAe,CAAC7Q,GAASsD,OAAOuN,OAxIrC,EA4InBa,uBAAyB,SAAAla,GAAW,IAAD,EACI,EAAK5Q,MAAhCoR,EADuB,EACvBA,OAAQ4Y,EADe,EACfA,eADe,EAEE,EAAK1qB,MAA9B4mB,EAFuB,EAEvBA,MAAO+D,EAFgB,EAEhBA,cAEPzX,EAAyB5B,EAAzB4B,QAASiJ,EAAgB7K,EAAhB6K,YAEXtD,EAAM,IAAInB,IAAIyE,EAAYtD,IAAI,SAAAtW,GAAC,MAAI,CAACA,EAAGA,MACvCkpB,EAAW,WACT,EAAKzrB,MAAM4mB,MAAMtP,OAAS,EAAKtX,MAAM2qB,cAAcrT,OAASoU,MAC5D,EAAKC,WAAW,EAAKC,SAIzB1Y,IAAYpB,EACZ,EAAKnR,SAAS,CAAEimB,MAAOA,EAAMvJ,OAAO,SAAA9a,GAAC,OAAKsW,EAAIhB,IAAItV,EAAElC,OAAQorB,GACrDvY,IAAYwX,GACnB,EAAK/pB,SAAS,CAAEgqB,cAAeA,EAActN,OAAO,SAAA9a,GAAC,OAAKsW,EAAIhB,IAAItV,EAAElC,OAAQorB,IA5JjE,EAgKnBxT,YAAc,WACV,EAAK2T,OAAS,CACVC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBnF,MAAO,GACP+D,cAAe,GACftN,OAAQ,EAAK2O,mBAEjB,EAAKL,WAAW,EAAKC,SAzKN,EA4KnBD,WA5KmB,sCA4KN,WAAOC,GAAP,6CAAApW,EAAA,wDAAeyW,IAAf,iCACDna,EAAW,EAAKpR,MAAhBoR,OACAga,EAAsCF,EAAtCE,UAAWzO,EAA2BuO,EAA3BvO,OAAQuJ,EAAmBgF,EAAnBhF,OAAmBgF,EAAZC,QAFzB,qDAOLC,EAPK,wDASHI,EAAgBtF,EAAMtP,OAAS,EAAIsP,EAAMA,EAAMtP,OAAS,GAAGjX,GAAK,EACtEurB,EAAOC,SAAU,EAVR,UAWYvrB,IAAgBC,KAAK,CACtC,QAAS,qBACT2S,QAASpB,EACT0L,MAAO,GACP2O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACR9T,MAAOmT,KACPrO,WACDiP,QAAQ,WACPV,EAAOC,SAAU,IArBZ,QAWHprB,EAXG,OAwBTH,IAAgBC,KAAK,CACjB,QAAS,qBACT2S,QAASpB,EACT0L,MAAO,GACP2O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACR9T,MAAoC,EAA7BmT,KACPrO,WAGIkP,EAAa9rB,EAAb8rB,SACRX,EAAOE,UAAgC,IAApBS,EAASjV,QAAyC,IAAzBiV,EAASC,YACrDZ,EAAOhF,MAAQA,EAAMxJ,OAAOmP,EAASlP,OAAO,EAAKiO,iBAC3CmB,EAAoBR,GAAkBM,EAASjV,OAAS,GAAKiV,EAASjV,OAASoU,KAErFhR,KAAagS,SAASjsB,EAAO8rB,UACvBpZ,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO1S,EAAO8rB,UAElC,EAAK5rB,SAAS,CAAEimB,MAAOgF,EAAOhF,QAE1BgF,EAAOE,UACP,EAAKa,mBAAmBf,GAAQ,GACzBa,GACP,EAAKd,WAAWC,GAAQ,GAjDnB,0CA5KM,wDAiOnBe,mBAjOmB,sCAiOE,WAAOf,GAAP,+CAAApW,EAAA,wDAAeyW,IAAf,iCACTvB,EAAmB,EAAKhqB,MAAxBgqB,eACArN,EAA4DuO,EAA5DvO,OAAQwO,EAAoDD,EAApDC,QAASE,EAA2CH,EAA3CG,iBAAiCnF,EAAUgF,EAAzBjB,cAItCD,EANY,qDAObmB,EAPa,qDAQbE,EARa,wDAUXG,EAAgBtF,EAAMtP,OAAS,EAAIsP,EAAMA,EAAMtP,OAAS,GAAGjX,GAAK,EACtEurB,EAAOC,SAAU,EAXA,UAYIvrB,IAAgBC,KAAK,CACtC,QAAS,qBACT2S,QAASwX,EACTlN,MAAO,GACP2O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACR9T,MAAOmT,KACPrO,WACDiP,QAAQ,WACPV,EAAOC,SAAU,IAtBJ,WAYXprB,EAZW,OAyBT8rB,EAAa9rB,EAAb8rB,SACRX,EAAOjB,cAAgB/D,EAAMxJ,OAAOmP,EAASlP,OAAO,EAAKiO,iBACzDM,EAAOG,iBAAuC,IAApBQ,EAASjV,QAAyC,IAAzBiV,EAASC,YACtDC,EAAoBR,GAAkBM,EAASjV,OAAS,GAAKiV,EAASjV,OAASoU,MAEjFE,EAAOG,iBA9BM,mDAgCjBrR,KAAagS,SAASH,GAChBpZ,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAOoZ,GAE3B,EAAK5rB,SAAS,CAAEgqB,cAAeiB,EAAOjB,gBAElC8B,GACA,EAAKE,mBAAmBf,GAAQ,GAvCnB,0CAjOF,wDA4QnBgB,aAAe,WACX,GAAK,EAAKC,QAAV,CAEA,IAAM/H,EAAO,EAAK+H,QAAQ1R,QAC1B,GAAK2J,EAAL,CAJiB,IAMT8G,EANS,eAMTA,OAEJ9G,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,OACtDlB,IAAWA,EAAOE,UAClB,EAAKH,WAAWC,GAEhB,EAAKe,mBAAmBf,OAxRjB,EA6RnBxH,kBAAoB,WAChB,IAAMU,EAAO,EAAK+H,QAAQ1R,QACrB2J,IAELA,EAAKR,UAAY,IAjSF,EAoSnByI,mBAAqB,WACjB,GAAK,EAAKC,cAAV,CAEA,IAAMlI,EAAO,EAAKkI,cAAc7R,QAChC,GAAK2J,EAAL,CAJuB,IAMfmI,EANe,eAMfA,aACHA,GAEDnI,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,OACrDG,EAAanB,UAGd,EAAKoB,qBAAqBD,GAF1B,EAAKE,aAAaF,OA/SX,EAsTnBE,aAtTmB,sCAsTJ,WAAOvB,GAAP,iDAAApW,EAAA,wDAAeyW,IAAf,iCACHna,EAAW,EAAKpR,MAAhBoR,OACAga,EAA6CF,EAA7CE,UAAWzO,EAAkCuO,EAAlCvO,OAAQuJ,EAA0BgF,EAA1BhF,MAAOiF,EAAmBD,EAAnBC,QAASrO,EAAUoO,EAAVpO,OAIvCsO,EANO,qDAOPD,EAPO,wDASLK,EAAgBtF,EAAMtP,OAAS,EAAIsP,EAAMA,EAAMtP,OAAS,GAAGjX,GAAK,EACtEurB,EAAOC,SAAU,EAVN,UAWUvrB,IAAgBC,KAAK,CACtC,QAAS,qBACT2S,QAASpB,EACT0L,QACA2O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACR9T,MAAOmT,KACPrO,WACDiP,QAAQ,WACPV,EAAOC,SAAU,IArBV,WAWLprB,EAXK,OAwBH8rB,EAAa9rB,EAAb8rB,SACRX,EAAOhF,MAAQA,EAAMxJ,OAAOmP,EAASlP,OAAO,EAAKiO,iBACjDM,EAAOE,UAAgC,IAApBS,EAASjV,QAAyC,IAAzBiV,EAASC,YAC/CC,EAAoBR,GAAkBM,EAASjV,OAAS,GAAKiV,EAASjV,OAASoU,KAEjF,EAAKuB,eAAiBrB,EA7Bf,mDA+BXlR,KAAagS,SAASH,GAChBpZ,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAOoZ,GAE3B,EAAK5rB,SAAS,CAAEysB,YAAaxB,EAAOhF,MAAOyG,oBAAqBzB,EAAOjB,gBAEnEiB,EAAOE,UACP,EAAKoB,qBAAqBtB,GAAQ,GAC3Ba,GACP,EAAKU,aAAavB,GAAQ,GAxCnB,0CAtTI,wDAkWnBsB,qBAlWmB,sCAkWI,WAAOtB,GAAP,iDAAApW,EAAA,wDAAeyW,IAAf,iCACXvB,EAAmB,EAAKhqB,MAAxBgqB,eACArN,EAAmEuO,EAAnEvO,OAAQwO,EAA2DD,EAA3DC,QAAwBjF,EAAmCgF,EAAlDjB,cAAsBoB,EAA4BH,EAA5BG,iBAAkBvO,EAAUoO,EAAVpO,MAI5DkN,EANc,qDAOfmB,EAPe,qDAQfE,EARe,wDAUbG,EAAgBtF,EAAMtP,OAAS,EAAIsP,EAAMA,EAAMtP,OAAS,GAAGjX,GAAK,EACtEurB,EAAOC,SAAU,EAXE,UAYEvrB,IAAgBC,KAAK,CACtC,QAAS,qBACT2S,QAASwX,EACTlN,QACA2O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACR9T,MAAOmT,KACPrO,WACDiP,QAAQ,WACPV,EAAOC,SAAU,IAtBF,WAYbprB,EAZa,OAyBX8rB,EAAa9rB,EAAb8rB,SACRX,EAAOjB,cAAgB/D,EAAMxJ,OAAOmP,EAASlP,OAAO,EAAKiO,iBACzDM,EAAOG,iBAAuC,IAApBQ,EAASjV,QAAyC,IAAzBiV,EAASC,YACtDC,EAAoBR,GAAkBM,EAASjV,OAAS,GAAKiV,EAASjV,OAASoU,KAEjF,EAAKuB,eAAiBrB,EA9BP,mDAgCnBlR,KAAagS,SAASH,GAChBpZ,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAOoZ,GAE3B,EAAK5rB,SAAS,CAAEysB,YAAaxB,EAAOhF,MAAOyG,oBAAqBzB,EAAOjB,gBAEnE8B,GACA,EAAKS,qBAAqBtB,GAAQ,GAvCnB,0CAlWJ,wDA6YnBlC,aA7YmB,sCA6YJ,WAAMhd,GAAN,eAAA8I,EAAA,wDACLgI,EAAQ9Q,EAAOA,EAAKmQ,OAAS,GADxB,uBAGP,EAAKyQ,oBAHE,0BAOX,EAAKL,aAAe,CAChBzP,QACAsO,WAAW,EACXC,kBAAkB,EAClBnF,MAAO,GACP+D,cAAe,GACftN,OAAQ,EAAK2O,mBAEjB,EAAKmB,aAAa,EAAKF,cAAc,GAf1B,yCA7YI,wDA+ZnBK,kBAAoB,WAChB,EAAKL,aAAe,KACpB,EAAKtsB,SAAS,CAAEysB,YAAa,GAAIC,oBAAqB,MAjavC,EAoanB/B,eAAiB,SAAAxR,GACb,QAAKA,GAEE,EAAKmR,eAAenR,EAAQc,UA9ZnC,EAAKiS,QAAUrrB,IAAM4c,YACrB,EAAK4O,cAAgBxrB,IAAM4c,YAE3B,EAAKpe,MAAQ,CACT4mB,MAAO,GACP+D,cAAe,GACfyC,YAAa,GACbC,oBAAqB,IAhBV,E,gFAPf,OAAO,O,+CAIP,OAAO,S,iDAwBP,OAAO,I,qCAGIzS,GACX,MAAM,IAAI7D,MAAM,sD,sCAGJ+C,GAAU,IACd4Q,EAAmBzpB,KAAKP,MAAxBgqB,eACAxX,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GAEjB,OACI,kBAAC,GAAD,CACI+D,IAAG,kBAAa8O,EAAb,uBAAmC7S,GACtCyR,OAAQoB,EACR+U,UAAW5nB,EACXkoB,gBAAiBrV,IAAYwX,M,wCAMrC,MAAM,IAAI3T,MAAM,uD,kCAIhB,MAAM,IAAIA,MAAM,iD,0CAIhB9V,KAAKgX,cAELyC,KAAa3I,GAAG,uBAAwB9Q,KAAKuqB,wBAC7C9Q,KAAa3I,GAAG,uBAAwB9Q,KAAKwpB,wBAC7C/P,KAAa3I,GAAG,mBAAoB9Q,KAAKoqB,sB,6CAIzC3Q,KAAa1I,IAAI,uBAAwB/Q,KAAKuqB,wBAC9C9Q,KAAa1I,IAAI,uBAAwB/Q,KAAKwpB,wBAC9C/P,KAAa1I,IAAI,mBAAoB/Q,KAAKoqB,sB,+BA6WpC,IAAD,SACiCpqB,KAAKP,MAAnConB,EADH,EACGA,UAAWlJ,EADd,EACcA,QAAS6E,EADvB,EACuBA,MADvB,EAE8DxiB,KAAKjB,MAAhE4mB,EAFH,EAEGA,MAAO+D,EAFV,EAEUA,cAAeyC,EAFzB,EAEyBA,YAAaC,EAFtC,EAEsCA,oBACnCJ,EAAiBhsB,KAAjBgsB,aAEFV,EAAW3F,EAAMxJ,OAAOuN,GAAe9R,IAAI,SAAAtW,GAAC,OAAI,EAAKgrB,gBAAgBhrB,KACrEirB,EAAiBJ,EAAYhQ,OAAOiQ,GAAqBxU,IAAI,SAAAtW,GAAC,OAAI,EAAKgrB,gBAAgBhrB,KAE7F,OACI,oCACI,kBAAC,GAAD,CACIsd,MAAO5e,KAAKwsB,YACZ7d,QAAS3O,KAAKmjB,kBACdxF,QAASA,EACTgL,SAAU3oB,KAAKysB,YAAczsB,KAAKyoB,aAAe,KACjDG,cAAe5oB,KAAKqsB,oBAExB,yBACIvO,IAAK9d,KAAK4rB,QACV3rB,UAAWuO,IAAW,oBAAqBxO,KAAK0sB,oBAChDC,SAAU3sB,KAAK2rB,aACftlB,MAAO,CAAEwgB,UAAWrE,EAAQqE,EAAY,OACvCyE,GAEJpC,QAAQ8C,IACL,yBACIlO,IAAK9d,KAAK+rB,cACV9rB,UAAWuO,IAAW,2BAA4BxO,KAAK4sB,0BACvDD,SAAU3sB,KAAK8rB,oBACdS,Q,GAhdKhsB,IAAMC,YCP9BqsB,I,8LACalT,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOrH,EAFOtS,KAAKP,MAAX6S,GAEC,kB,GAZUgX,KAgB3BuD,GAAaC,UAAY,CACrBjc,OAAQkc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BrP,QAASoP,KAAU9qB,KAAKgrB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzBH,GAAazb,aAAe,CACxBoR,OAAO,EACPqE,UAAW,GAGA5S,qBAAkB4Y,IC7B3BM,I,8LACaxT,GACX,OAAOA,GAAgC,oBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,kC,kCAMlB,OAAOrH,EAFOtS,KAAKP,MAAX6S,GAEC,sB,GAZagX,KAgB9B6D,GAAgBL,UAAY,CACxBjc,OAAQkc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BrP,QAASoP,KAAU9qB,KAAKgrB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzBG,GAAgB/b,aAAe,CAC3BoR,OAAO,EACPqE,UAAW,GAGA5S,qBAAkBkZ,I,8BCiJlBC,I,kNAvKXruB,MAAQ,CACJmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,G,EAGT2hB,sB,sCAAwB,WAAMjlB,GAAN,iBAAAqR,EAAA,qDAChBrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAEc,EAAK7F,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,KAEvB5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,SAhBY,yC,wDAqBxB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,K,iFAGfpJ,GACd,QAAKA,IAGsB,sBAAvBA,EAAKA,KAAK,UACa,0BAAvBA,EAAKA,KAAK,UACa,+BAAvBA,EAAKA,KAAK,Y,sCAIFuO,GACZ,IACIA,EAAMA,EAAIC,WAAW,QAAUD,EAAM,UAAYA,EACjD,IAAME,EAAaC,UAAUH,GAEvBI,EAAW,IAAIC,IAAIH,GAAYE,SAASE,MAAM,KAC9CC,EAASH,EAASpX,QAAU,EAAIoX,EAASA,EAASpX,OAAS,GAAK,IAAIqX,IAAIH,GAAYE,SAE1F,OAAOI,KAASC,UAAUF,GAC5B,MAAOhZ,GACLD,QAAQC,MAAM,QAAUyY,EAAM,KAAOzY,GAGzC,OAAO,O,+BAGD,IAAD,SACmD5U,KAAKP,MAArDoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAW+G,EADtB,EACsBA,QAASzG,EAD/B,EAC+BA,gBAD/B,EAE8BtnB,KAAKjB,MAAhCmpB,EAFH,EAEGA,YAAa5hB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBqS,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAErB,IAAIc,EAAU,KAPT,EAQiDoU,GAAW,CAC7DnP,MAAO,GACPoP,YAAa,GACbpc,MAAO,KACPyb,IAAK,IAJHY,EARD,EAQCA,YAAaD,EARd,EAQcA,YAAapc,EAR3B,EAQ2BA,MAAOgN,EARlC,EAQkCA,MAAOyO,EARzC,EAQyCA,IAM9C,GAAIU,EACAnP,EAAQA,GAAS5e,KAAKkuB,gBAAgBb,GAEtC1T,EACI,kBAACwU,GAAA,EAAD,CAAUluB,UAAU,kBAAkBotB,IAAKA,GACtCY,OAGN,CAAC,IACIxiB,EAASoN,EAAQc,QAAjBlO,KACR,GAAIA,EAAM,CAAC,IACC6O,EAAa7O,EAAb6O,SACJA,GAAYA,EAASjE,OAAS,IAC9BsD,EAAUW,EAAS8B,OAAOpc,KAAKouB,mBAAmBxW,IAAI,SAAAtW,GAClD,IAAM+sB,EAAaC,aAAU7iB,EAAKA,KAAMnK,EAAE8pB,OAAQ9pB,EAAE8pB,OAAS9pB,EAAE+U,QAC3DgX,EAAMgB,EACNE,GAAO,EAEX,OAAQjtB,EAAEwd,KAAK,UACX,IAAK,wBAA0B,IACd0P,EAAYltB,EAAEwd,KAAnBuO,IACJmB,IACAnB,EAAMmB,GAEV,MAEJ,IAAK,oBACD,MAEJ,IAAK,6BACDD,GAAO,EAMf,OAFA3P,EAAQA,GAAS,EAAKsP,gBAAgBb,IAAQ,IAG1C,kBAACc,GAAA,EAAD,CAAUluB,UAAU,kBAAkBotB,IAAKA,EAAKkB,KAAMA,GACjDF,OAQzB,IAAM3a,EAAS,qBAAkBhS,KAAKiS,IAAIiL,EAAM6P,WAAW,IAAM,EAAK,GAEtE,OACI,oCACI,yBAAKxuB,UAAU,cAAcooB,cAAeroB,KAAKmoB,uBAC7C,yBAAKloB,UAAWuO,IAAW,oBAAqBkF,IAC3Cgb,YAAe9P,GACfhN,GACG,kBAAC+c,GAAA,EAAD,CACIzuB,YAAa,GACb2Q,OAAQA,EACRmW,UAAWA,EACXpV,MAAOA,EACP2W,UAAWA,KACXqG,cAAc,EACdvoB,MAAO,CAAE6I,MAAO,GAAIgC,OAAQ,GAAIiE,SAAU,WAAY3O,IAAK,EAAGF,KAAM,MAIhF,yBAAKrG,UAAU,uBACV2e,GAAS,yBAAK3e,UAAU,kBAAkB2e,GAC1CoP,GAAe,yBAAK/tB,UAAU,wBAAwB+tB,EAAYviB,MAClEkO,IAGT,kBAAC,GAAD,CACI9I,OAAQA,EACRmW,UAAWA,EACXK,eAAgB,CAAE7gB,MAAKF,QACvBiX,KAAM2K,EACNZ,gBAAiBA,EACjB3J,QAAS3d,KAAKooB,8B,GAzJT7nB,IAAMC,YCJzBquB,I,8LACalV,GACX,IAAKA,EAAS,OAAO,EADD,IAGZmV,EAAmBnV,EAAnBmV,SAAUrjB,EAASkO,EAATlO,KAClB,GAAIqjB,EAAU,OAAO,EACrB,IAAKrjB,EAAM,OAAO,EALE,IAOZ6O,EAAa7O,EAAb6O,SACR,QAAKA,GAEEA,EAAS+E,KACZ,SAAA/d,GAAC,MACuB,sBAApBA,EAAEwd,KAAK,UACa,0BAApBxd,EAAEwd,KAAK,UACa,+BAApBxd,EAAEwd,KAAK,a,wCAKf,MAAO,CAAE,QAAS,6B,kCAMlB,OAAOxM,EAFOtS,KAAKP,MAAX6S,GAEC,gB,sCAGGuG,GAAU,IACd4Q,EAAmBzpB,KAAKP,MAAxBgqB,eACAxX,EAAyB4G,EAAzB5G,QAAS0H,EAAgBd,EAAhBc,QAASva,EAAOyZ,EAAPzZ,GAE1B,OACI,kBAAC,GAAD,CACI+D,IAAG,kBAAa8O,EAAb,uBAAmC7S,GACtCyR,OAAQoB,EACR+U,UAAW5nB,EACX2uB,QAASpU,EAAQmV,SACjBvG,UAAW,kBAAMA,aAAUtW,EAAS7S,GAAI,IACxCkoB,gBAAiBrV,IAAYwX,Q,GAxCnBH,KA8C1BuF,GAAY/B,UAAY,CACpBjc,OAAQkc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BrP,QAASoP,KAAU9qB,KAAKgrB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzB6B,GAAYzd,aAAe,CACvBoR,OAAO,EACPqE,UAAW,GAGA5S,qBAAkB4a,I,oBCzClBrG,I,mBApBX,WAAY/oB,GAAQ,qEACVA,I,sEAGA,IACEsvB,EAAU/uB,KAAKP,MAAfsvB,MAER,OACI,yBAAK9uB,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASogB,GAChD,kBAAC,GAAD,OAEJ,yBAAK9uB,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,sB,GAdYM,IAAMC,YCEhCwuB,I,kNACFjwB,MAAQ,CACJqK,MAAO,G,EAGXD,aAAe,SAACjG,EAAOkG,GACnB,EAAK1J,SAAS,CAAE0J,W,wEAGV,IAAD,EACsBpJ,KAAKP,MAAxBke,EADH,EACGA,QAAS6E,EADZ,EACYA,MACTpZ,EAAUpJ,KAAKjB,MAAfqK,MAEFuQ,EACF,oCACI,kBAAC,GAAD,CAAmBoV,MAAOpR,IAC1B,kBAACsR,GAAA,EAAD,CACI7lB,MAAOA,EACPuG,SAAU3P,KAAKmJ,aACf+lB,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT,kBAACC,GAAA,EAAD,CAAKC,MAAM,QAAQnpB,MAAO,CAAEopB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,OAAOnpB,MAAO,CAAEopB,SAAU,UACrC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQnpB,MAAO,CAAEopB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQnpB,MAAO,CAAEopB,SAAU,YAKlD,OAAOjN,EAAQ,oCAAG7I,GAAc,yBAAK1Z,UAAU,gBAAgB0Z,O,GAhC7CpZ,IAAMC,YA2ChCwuB,GAAY5d,aAAe,CACvBoR,OAAO,EACPqE,UAAW,GAGAmI,UC7CTU,I,mBACF,WAAYjwB,GAAQ,IAAD,uBACf,4CAAMA,KAuBVkwB,wBAA0B,SAAAtf,GAAW,IAAD,EACC,EAAKtR,MAA9B6wB,EADwB,EACxBA,UAAWC,EADa,EACbA,UACXjoB,EAAWyI,EAAXzI,OAEJgoB,GAAaA,EAAUhe,OAASge,EAAUhe,MAAMxS,KAAOwI,EACvD,EAAK2J,cACEse,GAAaA,EAAUje,OAASie,EAAUje,MAAMxS,KAAOwI,GAC9D,EAAK2J,eA/BM,EAmCnB4W,sBAnCmB,sCAmCK,WAAMjlB,GAAN,iBAAAqR,EAAA,qDAChBrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAEc,EAAK7F,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,KAEvB5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,SAhBY,yCAnCL,wDAwDnB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,KA7Dd,IAGPtW,EAA+BnS,EAA/BmS,MAAOZ,EAAwBvR,EAAxBuR,KAAM8e,EAAkBrwB,EAAlBqwB,cAHN,OAKf,EAAK/wB,MAAQ,CACTmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,EAELopB,UAAWG,YAAQne,EAAMgI,MAAO5I,GAChC6e,UAAWE,YAAQne,EAAMgI,MAAOkW,GAChCE,cAAepe,EAAMoe,eAZV,E,iFAiBftlB,IAAUoG,GAAG,wBAAyB9Q,KAAK2vB,2B,6CAI3CjlB,IAAUqG,IAAI,wBAAyB/Q,KAAK2vB,2B,+BA2CtC,IAAD,EAC4D3vB,KAAKP,MAA9DoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAWuB,EADtB,EACsBA,UAAWjB,EADjC,EACiCA,gBAAiBjhB,EADlD,EACkDA,MADlD,EAEmErG,KAAKjB,MAArEixB,EAFH,EAEGA,cAAeH,EAFlB,EAEkBA,UAAWD,EAF7B,EAE6BA,UAAW1H,EAFxC,EAEwCA,YAAa5hB,EAFrD,EAEqDA,KAAME,EAF3D,EAE2DA,IAEhE,IAAKopB,EAAW,OAAO,KAEvB,IAAMK,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWre,YAAO+d,EAAYA,EAAUje,MAAQ,MAChDC,EAAMC,YAAO8d,EAAUhe,OACXqe,GAAWG,aAAmBP,GAEhD,OACI,oCACI,yBAAK5vB,UAAU,eAAeoG,MAAOA,EAAOsI,QAAS4Z,EAAWF,cAAeroB,KAAKmoB,uBAChF,yBAAKloB,UAAU,uBAAuBoG,MAAO,CAAEgqB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,KAAiCK,eAAgB,UAC1Gze,IAAQse,GACL,yBAAKlwB,UAAU,4BAA4BoG,MAAO,CAAEgqB,gBAAgB,OAAD,OAASxe,EAAT,UAI/E,kBAAC,GAAD,CACIhB,OAAQA,EACRmW,UAAWA,EACXK,eAAgB,CAAE7gB,MAAKF,QACvBiX,KAAM2K,EACNZ,gBAAiBA,EACjB3J,QAAS3d,KAAKooB,8B,GA3FR7nB,IAAMC,YA8GhCkvB,GAAYte,aAAe,CACvBJ,KAAMuf,IACNT,cAAeU,KAGJd,UCrHTe,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGI9W,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOrH,EAFOtS,KAAKP,MAAX6S,GAEC,iB,sCAGGuG,GAAU,IACd4Q,EAAmBzpB,KAAKP,MAAxBgqB,eACAxX,EAAyB4G,EAAzB5G,QAAS0H,EAAgBd,EAAhBc,QAASva,EAAOyZ,EAAPzZ,GAE1B,OACI,kBAAC,GAAD,CACI+D,IAAG,kBAAa8O,EAAb,uBAAmC7S,GACtCyR,OAAQoB,EACR+U,UAAW5nB,EACXwS,MAAO+H,EAAQ/H,MACf2W,UAAW,kBAAMA,aAAUtW,EAAS7S,GAAI,IACxCkoB,gBAAiBrV,IAAYwX,Q,GAlClBH,KAwC3BmH,GAAa3D,UAAY,CACrBjc,OAAQkc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BrP,QAASoP,KAAU9qB,KAAKgrB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzByD,GAAarf,aAAe,CACxBoR,OAAO,EACPqE,UAAW,GAGA5S,qBAAkBwc,IClD3BC,I,kNACF3xB,MAAQ,CACJmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,G,EAWTmqB,iCAAmC,SAAAtgB,GAAW,IAClCyK,EAAc,EAAKrb,MAAMgE,MAAzBqX,UACAlT,EAAWyI,EAAXzI,OAER,GAAKkT,EAAL,CAJyC,IAMjCrQ,EAASqQ,EAATrQ,KACJA,GAAQA,EAAKrL,KAAOwI,GACpB,EAAK2J,gB,EAIb4W,sB,sCAAwB,WAAMjlB,GAAN,iBAAAqR,EAAA,qDAChBrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAEc,EAAK7F,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,KAEvB5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,SAhBY,yC,wDAqBxB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,K,mFA7C7Bxd,IAAUoG,GAAG,iCAAkC9Q,KAAK2wB,oC,6CAIpDjmB,IAAUqG,IAAI,iCAAkC/Q,KAAK2wB,oC,+BA4C/C,IAAD,EAC4D3wB,KAAKP,MAA9DoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAWuB,EADtB,EACsBA,UAAWliB,EADjC,EACiCA,MAAOihB,EADxC,EACwCA,gBADxC,EAE0CtnB,KAAKP,MAAMgE,MAAlDusB,EAFH,EAEGA,cAAelV,EAFlB,EAEkBA,UAAWpa,EAF7B,EAE6BA,SAF7B,EAG8BV,KAAKjB,MAAhCmpB,EAHH,EAGGA,YAAa5hB,EAHhB,EAGgBA,KAAME,EAHtB,EAGsBA,IAErBypB,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWre,YAAOgJ,EAAYA,EAAUrQ,KAAO,MAC/CmmB,EAAYT,EAAWC,aAAmBtV,EAAW+V,MAA6B3H,QAAQ+G,GAEhG,OACI,oCACI,yBAAKhwB,UAAU,eAAeoG,MAAOA,EAAOsI,QAAS4Z,EAAWF,cAAeroB,KAAKmoB,uBAChF,yBAAKloB,UAAU,wBACX,yBACIA,UAAWuO,IAAW,uBAAwB,CAC1C,gBAAiBoiB,EACjB,sBAAuBT,GAAYS,IAEvCvqB,MAAO,CAAEgqB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,QAE5B,yBAAKhwB,UAAU,qBAAqBiO,YAAkBxN,MAG9D,kBAAC,GAAD,CACImQ,OAAQA,EACRmW,UAAWA,EACXK,eAAgB,CAAE7gB,MAAKF,QACvBiX,KAAM2K,EACNZ,gBAAiBA,EACjB3J,QAAS3d,KAAKooB,8B,GArFR7nB,IAAMC,YAwGhCkwB,GAAYtf,aAAe,CACvBJ,KAAMuf,IACNT,cAAeU,KAGJE,UChHTI,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGInX,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOrH,EAFOtS,KAAKP,MAAX6S,GAEC,iB,sCAGGuG,GAAU,IACd4Q,EAAmBzpB,KAAKP,MAAxBgqB,eACAxX,EAAyB4G,EAAzB5G,QAAS0H,EAAgBd,EAAhBc,QAASva,EAAOyZ,EAAPzZ,GAE1B,OACI,kBAAC,GAAD,CACI+D,IAAG,kBAAa8O,EAAb,uBAAmC7S,GACtCyR,OAAQoB,EACR+U,UAAW5nB,EACXqE,MAAOkW,EAAQlW,MACf8kB,UAAW,kBAAMA,aAAUtW,EAAS7S,GAAI,IACxCkoB,gBAAiBrV,IAAYwX,Q,GAlClBH,KAwC3BwH,GAAahE,UAAY,CACrBjc,OAAQkc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BrP,QAASoP,KAAU9qB,KAAKgrB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzB8D,GAAa1f,aAAe,CACxBoR,OAAO,EACPqE,UAAW,GAGA5S,qBAAkB6c,I,uCClD3BC,I,mBACF,WAAYtxB,GAAQ,IAAD,8BACf,4CAAMA,KASV0oB,sBAVmB,sCAUK,WAAMjlB,GAAN,iBAAAqR,EAAA,qDAChBrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAEc,EAAK7F,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,KAEvB5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,SAhBY,yCAVL,wDA+BnB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,KAjC7B,EAAKnpB,MAAQ,CACTmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,GANM,E,sEAuCT,IAAD,EACsExG,KAAKP,MAAxEoR,EADH,EACGA,OAAQmgB,EADX,EACWA,KAAMhK,EADjB,EACiBA,UAAWiK,EAD5B,EAC4BA,UAAW1I,EADvC,EACuCA,UAAWjB,EADlD,EACkDA,gBADlD,EAE8BtnB,KAAKjB,MAAhCmpB,EAFH,EAEGA,YAAa5hB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBqS,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAErB,IAAKoY,EAAW,OAAO,KAPlB,IASGC,EAAyBrY,EAAzBqY,KAAMhG,EAAmBrS,EAAnBqS,eACRiG,EAAa,IAAIC,KAAY,IAAPF,GAAaG,mBAAmB,CAACL,EAAKM,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGJlxB,EAA0BuwB,EAA1BvwB,SAAiB+J,EAASwmB,EAAhBY,MAElB,OACI,oCACI,yBAAK5xB,UAAU,oBAAoBooB,cAAeroB,KAAKmoB,uBACnD,kBAAC2J,GAAA,EAAD,CAAejhB,OAAQA,EAAQmW,UAAWA,EAAWvc,KAAMA,EAAM8d,UAAWA,IAC5E,yBAAKtoB,UAAU,sBACX,kBAAC8xB,GAAA,EAAD,CAAelhB,OAAQA,EAAQmW,UAAWA,EAAW1W,OAAQ4a,IAC7D,yBAAKjrB,UAAU,mBACX,kBAAC+xB,GAAA,EAAD,CACInhB,OAAQA,EACRmW,UAAWA,EACXtmB,SAAUA,EACV+J,KAAMA,EACNmU,MAAK,UAAKuS,EAAL,QAET,kBAACc,GAAA,EAAD,CAAaphB,OAAQA,EAAQmW,UAAWA,EAAWoC,KAAM,kBAIrE,kBAAC,GAAD,CACIvY,OAAQA,EACRmW,UAAWA,EACXK,eAAgB,CAAE7gB,MAAKF,QACvBiX,KAAM2K,EACNZ,gBAAiBA,EACjB3J,QAAS3d,KAAKooB,8B,GArFJ7nB,IAAMC,YAqGrByT,iBAAkB8c,ICxG3BmB,I,8LACavY,GACX,OAAOA,GAAgC,qBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,mC,kCAMlB,OAAOrH,EAFOtS,KAAKP,MAAX6S,GAEC,gB,kCAIT,OAAO,I,sCAGKuG,GAAU,IACd4Q,EAAmBzpB,KAAKP,MAAxBgqB,eACAxX,EAAyB4G,EAAzB5G,QAAS0H,EAAgBd,EAAhBc,QAASva,EAAOyZ,EAAPzZ,GAE1B,OACI,kBAAC,GAAD,CACI+D,IAAG,kBAAa8O,EAAb,uBAAmC7S,GACtCyR,OAAQoB,EACR+U,UAAW5nB,EACX6xB,UAAWtX,EAAQwY,WACnB5J,UAAW,kBAAMA,aAAUtW,EAAS7S,GAAI,IACxCkoB,gBAAiBrV,IAAYwX,Q,GA9BdH,KAoC/B4I,GAAiBpF,UAAY,CACzBjc,OAAQkc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BrP,QAASoP,KAAU9qB,KAAKgrB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzBkF,GAAiB9gB,aAAe,CAC5BoR,OAAO,EACPqE,UAAW,GAGA5S,qBAAkBie,I,SCpC3BE,I,mBACF,WAAY3yB,GAAQ,IAAD,uBACf,4CAAMA,KA2CV4yB,wBAA0B,SAAAhiB,GACGA,EAAjBiiB,eAGU,EAAK7yB,MAAf+iB,OAGR,EAAK+P,2BAnDU,EAsDnBC,qBAAuB,SAAAniB,GAAW,IACtBmS,EAAU,EAAK/iB,MAAf+iB,MACA3R,EAAW,EAAK9R,MAAhB8R,OAEJ2R,GACA3R,IAAWR,EAAOoiB,aAEtB,EAAKC,aAAe,KACpB,EAAKC,gBAAkB,KACvB,EAAKC,YAAc,KACnB,EAAKC,aAAe,KACpB,EAAKC,aAAe,KACpB,EAAKC,iBAAmB,KAExB,EAAKrzB,SAAS,CACVmR,OAAQR,EAAOoiB,WACfhJ,eAAgB,EAChBuJ,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtBvP,SAAUtS,IAAU8hB,YAAYpjB,EAAOoiB,YACvCvO,iBAAkB,OAGjB7T,EAAOoiB,YACR,EAAKF,2BArFM,EAyFnBvb,YAAc,SAAAnG,GACV,EAAK6iB,iBAAiB7iB,GACtB,EAAK8iB,qBAAqB9iB,GAE1B,IAAMe,EAAQgiB,YAAiB/iB,GAC1Be,GACLiiB,YAA8BhjB,EAAQ,CAACe,KA/FxB,EAkGnB8hB,iBAlGmB,sCAkGA,WAAM7iB,GAAN,eAAA0D,EAAA,qEACQuf,aAAgBjjB,GADxB,UACToT,EADS,OAEftS,IAAUoiB,YAAYljB,EAAQoT,GAE1BpT,IAAW,EAAK9R,MAAM8R,OAJX,iDAMf,EAAKnR,SAAS,CAAEukB,aAND,yCAlGA,wDA2GnB0P,qBA3GmB,sCA2GI,WAAM9iB,GAAN,qBAAA0D,EAAA,wDACd6D,aAAavH,GADC,oDAGbmO,EAAWkB,KAAgBhB,YAAY8U,YAAgBnjB,IAH1C,oDAMmBsO,EAAmBH,EAAjDiV,6BANW,kEASA50B,IAAgBC,KAAK,CACpC,QAAS,uBACT6f,iBACAzH,OAAO,IAZQ,WASbhG,EATa,2EAiBIoiB,aAAgBpiB,EAAKtS,IAjBzB,WAiBb6kB,EAjBa,OAkBnBtS,IAAUoiB,YAAYriB,EAAKtS,GAAI6kB,GAE3B,EAAKllB,MAAM8R,SAAWA,EApBP,mDAsBnB,EAAKnR,SAAS,CAAE+pB,eAAgB/X,EAAKtS,GAAI8kB,iBAAkBvS,IAAU8hB,YAAY/hB,EAAKtS,MAtBnE,0CA3GJ,wDAoInB80B,sBAAwB,WACpB,EAAKx0B,SAAS,CAAE2zB,iBAAiB,KArIlB,EAwInBc,uBAAyB,WACrB,EAAKz0B,SAAS,CAAE2zB,iBAAiB,KAzIlB,EA4InBe,wBAA0B,WACtB,EAAK10B,SAAS,CAAEuzB,mBAAmB,KA7IpB,EAgJnBoB,0BAA4B,WACxB,EAAK30B,SAAS,CAAEuzB,mBAAmB,KAjJpB,EAoJnBV,uBAAyB,WAAO,IACpB/P,EAAU,EAAK/iB,MAAf+iB,MACe,EAAKzjB,MAApBi0B,WAGJ,EAAKtzB,SAAS,CAAEszB,WAAY,OACrBxQ,EACPnjB,IAAgBgI,aAAa,CACzB,QAAS,2BACTwJ,OAAQ,IAGZyjB,cAA4B,IAhKjB,EAoKnBC,0BAA4B,WACxB,EAAK70B,SAAS,CAAEyzB,qBAAqB,KArKtB,EAwKnBqB,2BAA6B,WACzB,EAAK90B,SAAS,CAAEyzB,qBAAqB,KAzKtB,EA4KnBsB,uBAAyB,WACrB,EAAK/0B,SAAS,CAAEwzB,kBAAkB,KA7KnB,EAgLnBwB,wBAA0B,WACtB,EAAKh1B,SAAS,CAAEwzB,kBAAkB,KAjLnB,EAoLnByB,2BAA6B,WACzB,EAAKj1B,SAAS,CAAE8zB,sBAAsB,KArLvB,EAwLnBoB,4BAA8B,WAC1B,EAAKl1B,SAAS,CAAE8zB,sBAAsB,KAzLvB,EA4LnBqB,sBAAwB,WACpB,EAAKn1B,SAAS,CAAE0zB,iBAAiB,KA7LlB,EAgMnB0B,uBAAyB,WACrB,EAAKp1B,SAAS,CAAE0zB,iBAAiB,KAjMlB,EAoMnB2B,uBAAyB,WACrB,EAAKr1B,SAAS,CAAE4zB,kBAAkB,KArMnB,EAwMnB0B,wBAA0B,WACtB,EAAKt1B,SAAS,CAAE4zB,kBAAkB,KAzMnB,EA4MnB2B,uBAAyB,WACrB,EAAKv1B,SAAS,CAAE6zB,kBAAkB,KA7MnB,EAgNnB2B,wBAA0B,WACtB,EAAKx1B,SAAS,CAAE6zB,kBAAkB,KA9MlC,EAAK4B,WAAa50B,IAAM4c,YAHT,IAKPqF,EAAU/iB,EAAV+iB,MACA3R,EAAyBukB,KAAzBvkB,OAAQwkB,EAAiBD,KAAjBC,aAND,OAQf,EAAKt2B,MAAQ,CACT8R,OAAQ2R,EAAQ6S,EAAexkB,EAC/B4Y,eAAgB,EAChBuJ,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtBvP,SAAU,KACVC,iBAAkB,MArBP,E,iFA0BflkB,KAAKgX,YAAYhX,KAAKjB,MAAM8R,QAE5BukB,KAAStkB,GAAG,qBAAsB9Q,KAAKwyB,sBACvC4C,KAAStkB,GAAG,wBAAyB9Q,KAAKqyB,2B,6CAI1C+C,KAASrkB,IAAI,qBAAsB/Q,KAAKwyB,sBACxC4C,KAASrkB,IAAI,wBAAyB/Q,KAAKqyB,2B,yCAG5BxyB,EAAWC,EAAWC,GAAW,IACxC8Q,EAAW7Q,KAAKjB,MAAhB8R,OACJA,IAAW/Q,EAAU+Q,QACrB7Q,KAAKgX,YAAYnG,K,+BA4Kf,IAAD,EACwB7Q,KAAKP,MAA1BQ,EADH,EACGA,UAAWuiB,EADd,EACcA,MADd,EAgBDxiB,KAAKjB,MAbL8R,EAHC,EAGDA,OACAoT,EAJC,EAIDA,SACAwF,EALC,EAKDA,eACAvF,EANC,EAMDA,iBACA8O,EAPC,EAODA,WACAE,EARC,EAQDA,iBACAC,EATC,EASDA,oBACAC,EAVC,EAUDA,gBACAC,EAXC,EAWDA,gBACAC,EAZC,EAYDA,iBACAC,EAbC,EAaDA,iBACAC,EAdC,EAcDA,qBACAP,EAfC,EAeDA,kBAGEqC,EAAgBzkB,GAAUmiB,EAC1BnM,EAAY7mB,KAAKm1B,YAAcn1B,KAAKm1B,WAAWjb,QAAUla,KAAKm1B,WAAWjb,QAAQ0J,mBAAqB,EAExGjK,EAAU,KAiHd,OAhHI0Z,EACA1Z,EACI,kBAAC,GAAD,CACI9I,OAAQykB,EACR9S,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAKm0B,yBAGfjB,GACPlzB,KAAK0yB,aAAe1yB,KAAK0yB,cACrB,kBAAC,GAAD,CACI7hB,OAAQykB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAK00B,0BAItB/a,EAAU3Z,KAAK0yB,cACRS,GACPnzB,KAAK2yB,gBAAkB3yB,KAAK2yB,iBACxB,kBAAC,GAAD,CACI9hB,OAAQykB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAKw0B,6BAItB7a,EAAU3Z,KAAK2yB,iBACRS,GACPpzB,KAAK4yB,YAAc5yB,KAAK4yB,aACpB,kBAAC,GAAD,CACI/hB,OAAQykB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAK80B,yBAItBnb,EAAU3Z,KAAK4yB,aACRU,GACPtzB,KAAK6yB,aAAe7yB,KAAK6yB,cACrB,kBAAC,GAAD,CACIhiB,OAAQykB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAKg1B,0BAItBrb,EAAU3Z,KAAK6yB,cACRU,GACPvzB,KAAK8yB,aAAe9yB,KAAK8yB,cACrB,kBAAC,GAAD,CACIjiB,OAAQykB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAKk1B,0BAItBvb,EAAU3Z,KAAK8yB,cACRU,GACPxzB,KAAK+yB,iBAAmB/yB,KAAK+yB,kBACzB,kBAAC,GAAD,CACIliB,OAAQykB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAK40B,8BAItBjb,EAAU3Z,KAAK+yB,kBAEfpZ,EADOsZ,EAEH,kBAAC,GAAD,CACIpiB,OAAQykB,EACR9S,MAAOA,EACPqE,UAAWA,EACXlJ,QAAS3d,KAAKq0B,4BAKlB,kBAAC,GAAD,CACIvW,IAAK9d,KAAKm1B,WACVtkB,OAAQykB,EACR9S,MAAOA,EACP9B,WAAYsS,IAAeniB,EAC3BoT,SAAUA,EACVC,iBAAkBA,EAClBC,oBAAqBnkB,KAAKo0B,wBAC1BhQ,mBAAoBpkB,KAAKy0B,uBACzBpQ,sBAAuBrkB,KAAKu0B,0BAC5B/P,kBAAmBxkB,KAAKk0B,sBACxB5P,kBAAmBtkB,KAAK60B,sBACxBtQ,mBAAoBvkB,KAAK+0B,uBACzBtQ,mBAAoBzkB,KAAKi1B,uBACzBvQ,uBAAwB1kB,KAAK20B,2BAC7BhX,QAAS3d,KAAKuyB,yBAKnB/P,EACH,oCAAG7I,GAEH,yBAAK1Z,UAAWuO,IAAW,YAAa,CAAE,gBAAiBgU,GAASviB,IAAa0Z,O,GA9VtEpZ,IAAMC,YAyW7B4xB,GAAShhB,aAAe,CACpBnR,UAAW,KACXqP,QAAS,KACTkT,OAAO,GAGI4P,U,UCvXTmD,I,kNAkCFC,2BAA6B,SAAAnlB,GACN,EAAK5Q,MAAhBoR,SAEOR,EAAOQ,SAClB,EAAK4kB,aAAeplB,EAAOqlB,WAC3B,EAAKnkB,gB,EAIbD,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTokB,aAAe,SAAAtlB,GAAW,IACdQ,EAAW,EAAKpR,MAAhBoR,OACAL,EAASH,EAATG,KAEFkB,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,IACDqC,aAAclD,GAAlB,CANqB,IAQb+kB,EAAiBlkB,EAAjBkkB,aACR,GAAKA,EAEsBA,EAAnB1K,iBACe1a,EAAKpR,IAE5B,EAAKmS,gB,EAGTskB,SAAW,SAAAxlB,GACY,EAAK5Q,MAAhBoR,SAEOR,EAAO4B,SAEtB,EAAKV,e,qFApEaqB,EAAWC,GAAY,IAAD,EAClB7S,KAAKP,MAAnBoR,EADgC,EAChCA,OAAQyB,EADwB,EACxBA,EAEhB,OAAIM,EAAU/B,SAAWA,GAIrB+B,EAAUN,IAAMA,I,0CAQpBX,IAAUb,GAAG,mCAAoC9Q,KAAKsR,wBACtDK,IAAUb,GAAG,2BAA4B9Q,KAAKw1B,4BAC9C7jB,IAAUb,GAAG,yBAA0B9Q,KAAK61B,UAC5ClkB,IAAUb,GAAG,wBAAyB9Q,KAAK61B,UAC3ClkB,IAAUb,GAAG,sBAAuB9Q,KAAK61B,UACzClkB,IAAUb,GAAG,uBAAwB9Q,KAAK61B,UAC1CplB,IAAUK,GAAG,aAAc9Q,KAAK21B,gB,6CAIhChkB,IAAUZ,IAAI,mCAAoC/Q,KAAKsR,wBACvDK,IAAUZ,IAAI,2BAA4B/Q,KAAKw1B,4BAC/C7jB,IAAUZ,IAAI,yBAA0B/Q,KAAK61B,UAC7ClkB,IAAUZ,IAAI,wBAAyB/Q,KAAK61B,UAC5ClkB,IAAUZ,IAAI,sBAAuB/Q,KAAK61B,UAC1ClkB,IAAUZ,IAAI,uBAAwB/Q,KAAK61B,Y,+BAyCrC,IAAD,EACiB71B,KAAKP,MAAnBoR,EADH,EACGA,OAAQyB,EADX,EACWA,EAEhB,GAAItS,KAAKy1B,aAAc,OAAO,yBAAKx1B,UAAU,kBAAkB,QAE/D,IAAMyR,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,yBAAKzR,UAAU,kBAAkB,QAEnD,IAAI61B,EAAiB,KACfC,EAAeC,YAAoBnlB,GAKzC,GAJIklB,IACAD,EAAiB,0BAAM71B,UAAU,yBAAyB81B,KAGzDD,EAAgB,CACjB,IAAMG,EAAQC,YAAarlB,GAC3B,GAAIslB,aAActlB,GAAS,CACvB,IAAMpF,EAAOwqB,EAAMxqB,MAAQ,OAE3BqqB,EACI,oCACI,0BAAM71B,UAAU,wBAAwBqS,EAAE,SAAW,MACpD7G,IAMjB,IAAKqqB,EAAgB,CACjB,IAAMnc,EAAUyc,YAAsB1kB,EAAMY,IAAM,OAC5C+jB,EAAaC,YAAyB5kB,EAAMY,GAClDwjB,EACI,oCACKO,GAAc,0BAAMp2B,UAAU,yBAAyBo2B,EAAzC,MACd1c,GAKb,OAAO,yBAAK1Z,UAAU,kBAAkB61B,O,GA/GpBv1B,IAAMC,YAmHnByT,iBAAkBshB,IC9HlBhzB,eACX,uBAAGg0B,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACpC,0BAAMC,GAAG,OAAOC,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKz3B,GAAG,UAAUm3B,YAAY,OAAOO,cAAc,UACvF,0BACIt0B,EAAE,yfACF+zB,YAAY,OACZO,cAAc,QACdC,eAAe,WAGvB,O,mBC0DE7kB,GAAQ,I,YAlEV,aAAe,IAAD,8BACV,+CAOJ8kB,MAAQ,WACJ,EAAKC,SAAW,CAAE,QAAS,gBAC3B,EAAKC,QAAU,MAVL,EAadrB,SAAW,SAAAxlB,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtB8mB,EAAwB9mB,EAAxB8mB,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAKH,QAKb,MAEJ,IAAK,oBAAsB,IACfI,EAAiB/mB,EAAjB+mB,aAER,EAAKF,QAAUE,EACf,EAAKC,KAAK,oBAAqBhnB,KAhC7B,EAwCdinB,eAAiB,SAAAjnB,GACb,OAAQA,EAAO,UACX,IAAK,uBAAyB,IAClB4mB,EAAa5mB,EAAb4mB,SAER,EAAKA,SAAWA,EAEhB,EAAKI,KAAK,uBAAwBhnB,KA/ChC,EAuDdknB,iBAAmB,WACfl4B,IAAgByR,GAAG,SAAU,EAAK+kB,UAClCx2B,IAAgByR,GAAG,eAAgB,EAAKwmB,iBAzD9B,EA4DdE,oBAAsB,WAClBn4B,IAAgB0R,IAAI,SAAU,EAAK8kB,UACnCx2B,IAAgB0R,IAAI,eAAgB,EAAKumB,iBA3DzC,EAAKN,QAEL,EAAKO,mBALK,E,2BADQE,OAoE1BpsB,OAAO+Q,OAASlK,GACDA,UCmEAwlB,I,kNAhFXlC,2BAA6B,SAAAnlB,GACN,EAAK5Q,MAAhBoR,SAEOR,EAAOQ,SAClB,EAAK4kB,aAAeplB,EAAOqlB,WAC3B,EAAKnkB,gB,EAIbD,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTskB,SAAW,SAAAxlB,GAAW,IACVQ,EAAW,EAAKpR,MAAhBoR,OAEJR,EAAO4B,UAAYpB,GAEvB,EAAKU,e,EAGT0P,kCAAoC,SAAA5Q,GAAW,IACnCQ,EAAW,EAAKpR,MAAhBoR,OAEFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAEL,OAAQrB,EAAO6Q,MAAM,UACjB,IAAK,sCAC0B,uBAAvBxP,EAAKoN,KAAK,UAA4D,uBAAvBpN,EAAKoN,KAAK,UACzD,EAAKvN,cAET,MAEJ,IAAK,wCAC0B,oBAAvBG,EAAKoN,KAAK,UAAyD,mBAAvBpN,EAAKoN,KAAK,UACtD,EAAKvN,gB,qFAhFCqB,EAAWC,GAAY,IAAD,EACX7S,KAAKP,MAA1BoR,EADgC,EAChCA,OAAQomB,EADwB,EACxBA,SAEhB,OAAIrkB,EAAU/B,SAAWA,GAIrB+B,EAAUqkB,WAAaA,I,0CAQ3BtlB,IAAUb,GAAG,mCAAoC9Q,KAAKsR,wBACtDK,IAAUb,GAAG,2BAA4B9Q,KAAKw1B,4BAC9C7jB,IAAUb,GAAG,yBAA0B9Q,KAAK61B,UAC5ClkB,IAAUb,GAAG,6BAA8B9Q,KAAK61B,UAChDlkB,IAAUb,GAAG,qBAAsB9Q,KAAK61B,UACxClkB,IAAUb,GAAG,iCAAkC9Q,KAAK61B,UACpDlkB,IAAUb,GAAG,sBAAuB9Q,KAAK61B,UACzClkB,IAAUb,GAAG,wBAAyB9Q,KAAK61B,UAC3ClkB,IAAUb,GAAG,uBAAwB9Q,KAAK61B,UAC1ClkB,IAAUb,GAAG,+BAAgC9Q,KAAK61B,UAClDlkB,IAAUb,GAAG,2BAA4B9Q,KAAK61B,UAC9CpU,KAAkB3Q,GAAG,kCAAmC9Q,KAAKihB,qC,6CAI7DtP,IAAUZ,IAAI,mCAAoC/Q,KAAKsR,wBACvDK,IAAUZ,IAAI,2BAA4B/Q,KAAKw1B,4BAC/C7jB,IAAUZ,IAAI,yBAA0B/Q,KAAK61B,UAC7ClkB,IAAUZ,IAAI,6BAA8B/Q,KAAK61B,UACjDlkB,IAAUZ,IAAI,qBAAsB/Q,KAAK61B,UACzClkB,IAAUZ,IAAI,iCAAkC/Q,KAAK61B,UACrDlkB,IAAUZ,IAAI,sBAAuB/Q,KAAK61B,UAC1ClkB,IAAUZ,IAAI,wBAAyB/Q,KAAK61B,UAC5ClkB,IAAUZ,IAAI,uBAAwB/Q,KAAK61B,UAC3ClkB,IAAUZ,IAAI,+BAAgC/Q,KAAK61B,UACnDlkB,IAAUZ,IAAI,2BAA4B/Q,KAAK61B,UAC/CpU,KAAkB1Q,IAAI,kCAAmC/Q,KAAKihB,qC,+BA+C9D,GAAIjhB,KAAKy1B,aAAc,OAAO,KADzB,MAGwBz1B,KAAKP,MAA1BoR,EAHH,EAGGA,OAAQomB,EAHX,EAGWA,SAEVvlB,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KANb,IAQGimB,EAAiBjmB,EAAjBimB,aACFC,EAAWC,YAAahnB,EAAQomB,GAEhCa,EAAyBC,aAA2BlnB,GACpDmnB,EAAkBC,aAAoBpnB,GACtCkQ,EAAUC,YAAYnQ,GAE5B,OACI,oCACKinB,GACG,yBAAK73B,UAAU,gBACX,yBAAKA,UAAU,wBAAf,MAGP+3B,GACG,yBAAK/3B,UAAWuO,IAAW,CAAE,qBAAsBuS,GAAW,iBAC1D,0BAAM9gB,UAAU,qBAAqB03B,EAAe,EAAIA,EAAe,KAG9EC,IAAaI,IAAoBF,GAC9B,yBAAK73B,UAAU,uBACX,kBAACi4B,GAAD,CAASj4B,UAAU,mC,GArHjBM,IAAMC,YCZjB+B,eACX,uBAAG41B,OAAO,OAAO5B,YAAY,IAAIC,KAAK,OAAOC,SAAS,WAClD,uBAAG2B,UAAU,iCAAiC5B,KAAK,UAAUC,SAAS,WAClE,0BAAMj0B,EAAE,0iBAGhB,SCLWD,eACX,uBAAGg0B,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQC,eAAe,SACnF,uBAAGqB,UAAU,kCACT,4BAAQ7B,YAAY,MAAM8B,GAAG,KAAKC,GAAG,IAAIC,EAAE,MAC3C,0BAAM7B,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,IAAIN,YAAY,QAClD,0BAAMG,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIN,YAAY,UAGxD,WCTWh0B,eACX,0BACI61B,UAAU,kCACV51B,EAAE,8iBAEN,QCLWD,eACX,0BACI61B,UAAU,kCACV51B,EAAE,ylCAEN,aCgGWg2B,I,kNA3FXz5B,MAAQ,G,EAkCR05B,oBAAsB,SAAApoB,GAAW,IAAD,EACE,EAAK5Q,MAA3BoR,EADoB,EACpBA,OAAQmW,EADY,EACZA,UACR0R,EAA4BroB,EAA5BqoB,eAAgB7f,EAAYxI,EAAZwI,QAExB,GAAImO,IAAc0R,GACb7f,EAAL,CAL4B,IAOpB5G,EAA+B4G,EAA/B5G,QAAS7S,EAAsByZ,EAAtBzZ,GAAIu5B,EAAkB9f,EAAlB8f,cACjB9nB,IAAWoB,IAEf,EAAK2mB,aAAex5B,EACpB,EAAKM,SAAS,CAAEm5B,aAAcF,O,EAGlCG,uBAAyB,SAAAzoB,GAAW,IAAD,EACD,EAAK5Q,MAA3BoR,EADuB,EACvBA,OAAQmW,EADe,EACfA,UACR/U,EAAyC5B,EAAzC4B,QAAS8mB,EAAgC1oB,EAAhC0oB,4BACTH,EAHuB,eAGvBA,aAEJ/nB,IAAWoB,IAEV2mB,GAAgBA,GAAgBG,GAAgC/R,GAAa+R,IAC9E,EAAKr5B,SAAS,CAAEm5B,aAAc,KAAMG,QAAQ,K,mFAnChDrnB,IAAUb,GAAG,uBAAwB9Q,KAAK84B,wBAE1Crf,KAAa3I,GAAG,0BAA2B9Q,KAAKy4B,qBAChDhf,KAAa3I,GAAG,6BAA8B9Q,KAAKy4B,uB,6CAInD9mB,IAAUZ,IAAI,uBAAwB/Q,KAAK84B,wBAE3Crf,KAAa1I,IAAI,0BAA2B/Q,KAAKy4B,qBACjDhf,KAAa1I,IAAI,6BAA8B/Q,KAAKy4B,uB,+BA6B9C,IAAD,EAC4Bz4B,KAAKjB,MAA9B85B,EADH,EACGA,aACR,OAFK,EACiBG,OAKlBH,EACiC,8BAA1BA,EAAa,SAChB,kBAAC,GAAD,CACI54B,UAAU,SACVg5B,QAAQ,YACR5yB,MAAO,CAAE6I,MAAO,GAAIgC,OAAQ,GAAIknB,UAAW,uBAG/C,kBAACc,GAAD,CACIj5B,UAAU,SACVg5B,QAAQ,YACR5yB,MAAO,CAAE6I,MAAO,GAAIgC,OAAQ,GAAIknB,UAAW,oBAAqBD,OAAQ,kBAK7E,kBAACgB,GAAD,CAAUl5B,UAAU,SAASg5B,QAAQ,YAAY5yB,MAAO,CAAE6I,MAAO,GAAIgC,OAAQ,KAnBzE,kBAACkoB,GAAD,CAAen5B,UAAU,SAASg5B,QAAQ,YAAY5yB,MAAO,CAAE6I,MAAO,GAAIgC,OAAQ,Q,gDA7DjEzR,EAAOV,GAAQ,IACnC8R,EAAsBpR,EAAtBoR,OAAQmW,EAAcvnB,EAAdunB,UAEVnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACnC6R,EAAehgB,EAAUA,EAAQ8f,cAAgB,KAEvD,OAAI9nB,IAAW9R,EAAMiV,YAAcgT,IAAcjoB,EAAMs6B,cAC5C,CACHrlB,WAAYnD,EACZwoB,cAAerS,EACf6R,eACAG,OAAQM,aAAgBzoB,EAAQmW,IAIjC,S,GAlBMzmB,IAAMC,YC+EZ+4B,I,kNArDX/D,2BAA6B,SAAAnlB,GACN,EAAK5Q,MAAhBoR,SAEOR,EAAOQ,SAClB,EAAK4kB,aAAeplB,EAAOqlB,WAC3B,EAAKnkB,gB,EAIbD,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTskB,SAAW,SAAAxlB,GACY,EAAK5Q,MAAhBoR,SAEOR,EAAO4B,SAEtB,EAAKV,e,qFAhDaqB,EAAWC,GAAY,IACjChC,EAAW7Q,KAAKP,MAAhBoR,OAER,OAAI+B,EAAU/B,SAAWA,I,0CAQzBc,IAAUb,GAAG,mCAAoC9Q,KAAKsR,wBACtDK,IAAUb,GAAG,2BAA4B9Q,KAAKw1B,4BAC9C7jB,IAAUb,GAAG,yBAA0B9Q,KAAK61B,UAC5ClkB,IAAUb,GAAG,wBAAyB9Q,KAAK61B,UAC3ClkB,IAAUb,GAAG,sBAAuB9Q,KAAK61B,UACzClkB,IAAUb,GAAG,+BAAgC9Q,KAAK61B,UAClDlkB,IAAUb,GAAG,2BAA4B9Q,KAAK61B,Y,6CAI9ClkB,IAAUZ,IAAI,mCAAoC/Q,KAAKsR,wBACvDK,IAAUZ,IAAI,2BAA4B/Q,KAAKw1B,4BAC/C7jB,IAAUZ,IAAI,yBAA0B/Q,KAAK61B,UAC7ClkB,IAAUZ,IAAI,wBAAyB/Q,KAAK61B,UAC5ClkB,IAAUZ,IAAI,sBAAuB/Q,KAAK61B,UAC1ClkB,IAAUZ,IAAI,+BAAgC/Q,KAAK61B,UACnDlkB,IAAUZ,IAAI,2BAA4B/Q,KAAK61B,Y,+BAyB/C,GAAI71B,KAAKy1B,aAAc,OAAO,KADzB,IAGG5kB,EAAW7Q,KAAKP,MAAhBoR,OAEFa,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KAElB,IAAM8T,EAAOlS,YAASzC,GAEd+kB,EAAiBlkB,EAAjBkkB,aACR,IAAKA,EAAc,OAAO,KAE1B,IAAM1E,EAAOsI,YAAmB9nB,GAChC,IAAKwf,EAAM,OAAO,KAdb,IAgBG9xB,EAAoBw2B,EAApBx2B,GAAIq6B,EAAgB7D,EAAhB6D,YAEZ,OACI,yBAAKx5B,UAAU,eACVw5B,IAAgBjU,GACb,oCACI,kBAAC,GAAD,CAAQ3U,OAAQA,EAAQmW,UAAW5nB,IACnC,oCAGP8xB,O,GA9EQ3wB,IAAMC,YCJhB+B,eACX,0BAAMC,EAAE,s7CACR,WCFWD,eACX,0BAAMC,EAAE,i3CACR,aCFWD,eACX,0BAAMC,EAAE,2uCACR,QCFWD,eACX,0BAAMC,EAAE,0+CACR,QCFWD,eACX,0BAAMC,EAAE,0pBACR,UCFWD,eACX,0BAAMC,EAAE,27BACR,QCFWD,eACX,0BAAMC,EAAE,k7DACR,SCFWD,eACX,0BAAMC,EAAE,qfACR,WCFWD,eACX,0BAAMC,EAAE,klCACR,U,WC2CEk3B,G,YAGF,WAAYj6B,GAAQ,IAAD,uBACf,4CAAMA,KAgEV+yB,qBAAuB,SAAAniB,GAAW,IACtBQ,EAAW,EAAKpR,MAAhBoR,OAEJA,IAAWR,EAAOspB,gBAAkB9oB,IAAWR,EAAOoiB,YACtD,EAAKlhB,eArEM,EAyEnBkB,aAAe,SAAAvP,GACU,IAAjBA,EAAM0e,QACN6B,aAAS,EAAKhkB,MAAMoR,SA3ET,EA+EnB+oB,kBA/EmB,sCA+EC,WAAM12B,GAAN,+BAAAqR,EAAA,wDACZrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAHM,EAKa,EAAKnF,MAA1BoR,EALQ,EAKRA,OAAQomB,EALA,EAKAA,UACQ,EAAKl4B,MAArBmpB,YANQ,gBASZ,EAAKxoB,SAAS,CAAEwoB,aAAa,IATjB,8BAWN2R,EAAgB,IAAIzI,KAC1BsI,EAAOG,cAAgBA,EAEjBvzB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QACZ6uB,EAAWC,YAAahnB,EAAQomB,GAhB1B,UAiBgB,EAAK6C,YAAYjpB,GAjBjC,kDAiB6C+mB,EAjB7C,WAiBNmC,EAjBM,KAkBNC,EAAmBC,YAAiBppB,GAEtC6oB,EAAOG,gBAAkBA,EApBjB,mDAwBZ,EAAKn6B,SAAS,CACVwoB,aAAa,EACb6R,eACAC,mBACA1zB,OACAE,QA7BQ,0CA/ED,wDAiHnB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,KAtHd,EAyHnB/jB,WAAa,SAAAjB,GACT,EAAKklB,uBAAuBllB,GADV,IAGV2N,EAAW,EAAKpR,MAAhBoR,OAERyQ,aAA+BzQ,GAASmQ,YAAYnQ,KA9HrC,EAiInBipB,YAjImB,sCAiIL,WAAMjpB,GAAN,uBAAA0D,EAAA,wDACF0iB,EAAa,EAAKx3B,MAAlBw3B,SAEFiD,EAAqBC,YAAetpB,GACpC0F,KAAY5L,IAAI,kCAChB4L,KAAY5L,IAAI,yBALZ,0CAMsB,GANtB,cAQJyvB,EAAWC,YAAaxpB,GARpB,SASUxR,IAAgBC,KAAK,CACrC,QAAS,WACTg7B,UAAWrD,EACX7f,aAAc,sBACdC,eAAgB,EAChBC,MAAO4iB,EAAmB9wB,MAAQ,KAd5B,cASJ0O,EATI,OAiBJyiB,EAAYziB,EAAMG,SAASuiB,OAAO,SAACl5B,EAAGlC,GACxC,GAAIi7B,YAAaj7B,KAAQg7B,EAAU,OAAO94B,EAE1C,IAAMoQ,EAAOC,IAAUhH,IAAIvL,GAE3B,OAAOkC,GAAKoQ,GAAQmmB,YAAanmB,EAAKtS,GAAI63B,GAAY,EAAI,IAC3D,GAvBO,kBAyBHsD,EAAYL,EAAmB9wB,OAzB5B,0CAjIK,wDA6JnBqxB,UA7JmB,sCA6JP,WAAMv3B,GAAN,qBAAAqR,EAAA,wDACR,EAAK6T,uBAAuBllB,GADpB,EAGqB,EAAKzD,MAA1BoR,EAHA,EAGAA,OAAQomB,EAHR,EAGQA,UACVW,EAAWC,YAAahnB,EAAQomB,KAEpB,EAAK6C,YAAYjpB,GAN3B,iDAQR6pB,aAAmB7pB,EAAQomB,GAAWW,GAR9B,yCA7JO,wDAwKnB+C,cAxKmB,sCAwKH,WAAMz3B,GAAN,eAAAqR,EAAA,wDACZ,EAAK6T,uBAAuBllB,GAEpB2N,EAAW,EAAKpR,MAAhBoR,OACHopB,YAAiBppB,GAJV,iDAMZ+pB,aAAc/pB,EAAQ,CAAE,QAASspB,YAAetpB,GAAU,eAAiB,oBAN/D,yCAxKG,wDAiLnBgqB,iBAAmB,WAAO,IAAD,EACC,EAAKp7B,MAAnBoR,EADa,EACbA,OAAQyB,EADK,EACLA,EACVZ,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAHqB,IAKboN,EAASpN,EAAToN,KACR,OAAQA,EAAK,UACT,IAAK,qBACD,OAAOxM,EAAE,iBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,eAEb,IAAK,qBACD,OAAIwM,EAAKgc,WACExoB,EAAE,mBAGNA,EAAE,oBApMF,EAyMnByoB,eAAiB,SAAA73B,GACb,EAAKklB,uBAAuBllB,GADN,IAGd2N,EAAW,EAAKpR,MAAhBoR,OAER4S,aAAS5S,EAAQ,MAAM,IA9MR,EAiNnBmqB,WAAa,SAAA93B,GACT,EAAKklB,uBAAuBllB,GADV,IAGV2N,EAAW,EAAKpR,MAAhBoR,OAGR,GADiBoqB,YAAapqB,GAChB,CACV,IAAMa,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAFD,IAIFwpB,EAAoDxpB,EAApDwpB,oBAAqBtF,EAA+BlkB,EAA/BkkB,aAA+BlkB,EAAjBimB,aACxB,GAAK/B,EC5Q7B,SAAsB/kB,EAAQsH,EAAYgjB,GAC7C97B,IAAgBC,KAAK,CACjB,QAAS,eACT2S,QAASpB,EACTqK,YAAa/C,EACbijB,WAAYD,IDwQJE,CAAaxqB,EAAQ,CAAC+kB,EAAax2B,KAAK,GACjC87B,GACPI,aAA2BzqB,GAAQ,QAGvCyqB,aAA2BzqB,GAAQ,IA/NvC,EAAKmC,OAASzS,IAAM4c,YAEpB,IAAMzL,EAAOC,IAAUhH,IAAI,EAAKlL,MAAMoR,QALvB,OAMf,EAAK9R,MAAQ,CACT2S,OACAwW,aAAa,EACb5hB,KAAM,EACNE,IAAK,GAVM,E,mFAcGoM,EAAWC,GAAY,IAAD,EACqB7S,KAAKP,MAA1DoR,EADgC,EAChCA,OAAQyB,EADwB,EACxBA,EAAGlL,EADqB,EACrBA,OAAQm0B,EADa,EACbA,aAActE,EADD,EACCA,SAAU5wB,EADX,EACWA,MAC3C6hB,EAAgBloB,KAAKjB,MAArBmpB,YAER,OAAItV,EAAU/B,SAAWA,IAKrB+B,EAAUN,IAAMA,IAKhBM,EAAUxL,SAAWA,IAKrBwL,EAAU2oB,eAAiBA,IAK3B1oB,EAAUqV,cAAgBA,IAK1BrV,EAAUokB,WAAaA,MAKvBrkB,EAAUvM,QAASA,GAASA,EAAMG,MAAQoM,EAAUvM,MAAMG,Y,0CAU9Dg1B,KAAiB1qB,GAAG,qBAAsB9Q,KAAKwyB,wB,6CAI/CgJ,KAAiBzqB,IAAI,qBAAsB/Q,KAAKwyB,wB,+BAwK1C,IAAD,EAC2ExyB,KAAKP,MAA7EoR,EADH,EACGA,OAAQomB,EADX,EACWA,SAAUlkB,EADrB,EACqBA,kBAAmB3L,EADxC,EACwCA,OAAQkL,EADhD,EACgDA,EAAiBjM,GADjE,EACmDk1B,aADnD,EACiEl1B,OADjE,EAE8DrG,KAAKjB,MAAhEmpB,EAFH,EAEGA,YAAa5hB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAAKwzB,EAF3B,EAE2BA,iBAAkBD,EAF7C,EAE6CA,aAG5CnC,GADOjmB,IAAUhH,IAAIkG,GACVgnB,YAAahnB,EAAQomB,IAEhCwE,EADgBD,KAAiBE,cACF7qB,EAC/BkQ,EAAUC,YAAYnQ,GACtB8qB,EAAWV,YAAapqB,GACxB+qB,EAAazB,YAAetpB,GAClC,OACI,yBACIiN,IAAK9d,KAAKgT,OACV/S,UAAWuO,IAAW,SAAU,CAAE,gBAAiBitB,GAAc,CAAE,gBAAiBr0B,IACpFqH,YAAazO,KAAKyS,aAClB4V,cAAeroB,KAAK45B,kBACpBvzB,MAAOA,GACP,yBAAKpG,UAAU,kBACX,kBAAC,GAAD,CAAU4Q,OAAQA,EAAQmC,QAAM,EAACD,kBAAmBA,EAAmBD,YAAU,IACjF,yBAAK7S,UAAU,wBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAa4Q,OAAQA,IACrB,kBAAC,GAAD,CAAYA,OAAQA,KAExB,yBAAK5Q,UAAU,mBACX,kBAAC,GAAD,CAAe4Q,OAAQA,IACvB,kBAAC,GAAD,CAAaA,OAAQA,EAAQomB,SAAUA,OAInD,kBAACxP,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACrBo1B,GACG,kBAAChS,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK26B,eACnBiB,EACG,oCACI,kBAAC/Z,GAAA,EAAD,KACI,kBAACga,GAAD,OAEJ,kBAAC/Z,GAAA,EAAD,CAAcC,QAASzP,EAAE,gBAG7B,oCACI,kBAACuP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAKxCynB,GACG,kBAAC/R,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKy6B,WACnB7C,EACG,oCACI,kBAAC/V,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,mBAG7B,oCACI,kBAACuP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,gBAKzC,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK+6B,gBACnBhnB,aAAclD,GACX,oCACI,kBAACgR,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS/hB,KAAK66B,sBAGhC,oCACI,kBAAChZ,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS/hB,KAAK66B,uBAIxC,kBAAC7S,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmE,YACnB4c,EACG,oCACI,kBAACc,GAAA,EAAD,KACI,kBAACia,GAAD,OAEJ,kBAACha,GAAA,EAAD,CAAcC,QAASzP,EAAE,kBAG7B,oCACI,kBAACuP,GAAA,EAAD,KACI,kBAACka,GAAD,OAEJ,kBAACja,GAAA,EAAD,CAAcC,QAASzP,EAAE,iBAIrC,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKg7B,YACnBW,EACG,oCACI,kBAAC9Z,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,iBAG7B,oCACI,kBAACuP,GAAA,EAAD,KACI,kBAACma,GAAD,OAEJ,kBAACla,GAAA,EAAD,CAAcC,QAASzP,EAAE,2B,GA5WxC9R,aAgYrBk5B,GAAOtoB,aAAe,CAClBhK,QAAQ,EACR2L,mBAAmB,GAGRkB,qBAAkBylB,IEvYlBuC,I,wLAtCD,IAAD,EACgCj8B,KAAKP,MAAlCoR,EADH,EACGA,OAAQiZ,EADX,EACWA,MAAOvJ,EADlB,EACkBA,UAEnB3B,EAAQ,KACR2B,IACA3B,EAAQ9B,YAAajM,GAAQ,IAGjC,IAAMqrB,EAAU,UAAM,GAAuB,GAAlBx6B,KAAKW,IAAIynB,GAApB,KACVqS,EAAY,UAAM,GAAuB,GAAlBz6B,KAAK06B,IAAItS,GAApB,KAElB,OACI,yBAAK7pB,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACVsgB,EACG3B,EAEA,yBAAK3e,UAAU,2BAA2BoG,MAAO,CAAE6I,MAAOgtB,MAGlE,yBAAKj8B,UAAU,mBACX,yBAAKA,UAAU,6BAA6BoG,MAAO,CAAE6I,MAAOitB,a,GAzBxD57B,IAAMC,Y,8jBCFtC,IAAM6F,GACW,SAAA6K,GAAM,MAAK,CACpBA,SACAiE,SAAU,aAHZ9O,GAKI,SAACyjB,EAAO5Y,GAAR,MAAoB,CACtBA,SACA5K,KAAM,EACN+1B,MAAO,EACP71B,IAAK0K,EAAS4Y,EACd3U,SAAU,aAILmnB,GAAb,YACI,WAAY78B,GAAQ,IAAD,8BACf,4CAAMA,KA+CV88B,kBAAoB,WAAO,IACfn8B,EAAW,EAAKX,MAAhBW,OACAijB,EAAc,EAAKtkB,MAAnBskB,UACAnJ,EAAY,EAAK0R,QAAjB1R,QACR,GAAKA,EAAL,CAEA,IAAMsiB,EAAiBC,WAAWpxB,OAAOqxB,iBAAiBxiB,EAAS,MAAMyiB,iBAAiB,WACpFC,EAAY,EAAKC,aAAaz8B,EAAQo8B,EAAgBnZ,GAG5D,EAAK3jB,SAAL,IAAgB88B,kBAAmBI,MA1DpB,EAwFnBE,kBAAoB,SAAA55B,GAAU,IAAD,EACe,EAAKzD,MAArCW,EADiB,EACjBA,OAAQ28B,EADS,EACTA,UAAWpQ,EADF,EACEA,SADF,EAEa,EAAK5tB,MAAnCy9B,EAFiB,EAEjBA,eAAgBnZ,EAFC,EAEDA,UAExB,GAAI3hB,KAAKiS,IAAIzQ,EAAMyD,OAAO0c,UAAYA,IAAc0Z,EAAW,CAC3D,IAAMH,EAAY,EAAKC,aAAaz8B,EAAQo8B,EAAgBt5B,EAAMyD,OAAO0c,WAEzE,EAAK3jB,SAAL,IACI2jB,UAAWngB,EAAMyD,OAAO0c,WACrBuZ,IAIPjQ,GACAA,EAASzpB,IAtGE,EA8GnB85B,cAAgB,SAAClT,EAAO0S,EAAgBnZ,GAAe,IAAD,EACb,EAAK5jB,MAAlCw9B,EAD0C,EAC1CA,cAAeF,EAD2B,EAC3BA,UAKvB,OAHgBjT,EAAQiT,EAIV1Z,EAAY4Z,EAAgBF,IAHtBjT,EAAQ,GAAKiT,EAIhB1Z,EAAYmZ,EAAiBS,EAAgBF,GAnH9D,EAAKnR,QAAUrrB,IAAM4c,YAErB,EAAKpe,MAAQ,CACTskB,UAAW,EACXuZ,UAAW,IAAInmB,IACfymB,cAAe,GACfV,eAAgB,GATL,EADvB,gFAcuB38B,EAAWC,EAAWC,GACjCF,EAAUO,SAAWJ,KAAKP,MAAMW,QAChCJ,KAAKu8B,sBAhBjB,4CAoB0B3pB,EAAWC,EAAWsqB,GACxC,OAAO,IArBf,0CAwCQ9xB,OAAOC,iBAAiB,SAAUtL,KAAKu8B,mBAAmB,GAD1C,IAGRriB,EAAYla,KAAK4rB,QAAjB1R,QACHA,IACLA,EAAQ5O,iBAAiB,SAAUtL,KAAK88B,mBAAmB,GAE3D98B,KAAKu8B,uBA9Cb,mCA8DiBn8B,EAAQo8B,EAAgBnZ,GAAY,IAAD,OACtCuZ,EAAY,IAAInmB,IAChBymB,EAAgB,GAQtB,OAPA98B,EAAO2B,QAAQ,SAACq7B,EAAMtT,GACd,EAAKkT,cAAclT,EAAO0S,EAAgBnZ,KAC1CuZ,EAAUthB,IAAIwO,EAAOA,GACrBoT,EAAc3lB,KAAKuS,MAIpB,CAAE8S,YAAWM,mBAxE5B,6CA4EQ7xB,OAAOG,oBAAoB,SAAUxL,KAAKu8B,mBADvB,IAGXriB,EAAYla,KAAK4rB,QAAjB1R,QACHA,GACLA,EAAQ1O,oBAAoB,SAAUxL,KAAK88B,qBAhFnD,yCAsFQ,OAFsB98B,KAAKjB,MAAnB69B,YApFhB,mCA4GQ,OAAO58B,KAAK4rB,UA5GpB,+BA2Hc,IAAD,EACgD5rB,KAAKP,MAAlDQ,EADH,EACGA,UAAWG,EADd,EACcA,OAAQi9B,EADtB,EACsBA,WAAYN,EADlC,EACkCA,UAC/BH,EAAc58B,KAAKjB,MAAnB69B,UAEFjX,GAASvlB,GAAU,IAAIwX,IAAI,SAACwlB,EAAMtT,GACpC,OAAO8S,EAAUhmB,IAAIkT,IAAUuT,EAAW,CAAEvT,QAAOzjB,MAAOA,GAAWyjB,EAAOiT,OAKhF,OACI,yBAAKjf,IAAK9d,KAAK4rB,QAAS3rB,UAAWuO,IAAW,QAASvO,IACnD,yBAAKoG,MAAOA,IAAmBjG,GAAU,IAAIiW,OAAS0mB,IAAapX,QAvInF,GAAqCplB,IAAMC,WA8I3C87B,GAAgBlrB,aAAe,CAC3BhR,OAAQ,GACR28B,UAAW,GACXE,cAAe,GAYJX,UC/KR,SAASgB,GAAiBhwB,GAC7B,GAAIA,EAAQiwB,WAAaC,KAAKC,UAC1B,OAAOnwB,EAGX,IAAK,IAAIqJ,EAAIrJ,EAAQowB,WAAWrnB,OAAS,EAAGM,GAAK,EAAGA,IAAK,CACrD,IAAMgnB,EAAWL,GAAiBhwB,EAAQowB,WAAW/mB,IACrD,GAAIgnB,EACA,OAAOA,EAIf,OAAO,KAGJ,SAASC,GAAWtwB,GACvB,GAAKA,EAAL,CAEA,IAAMqwB,EAAWL,GAAiBhwB,GAClC,GAAIqwB,EAAU,CACV,IAAME,EAAQr4B,SAASs4B,cACvBD,EAAME,SAASJ,EAAUA,EAAStnB,QAClCwnB,EAAMG,UAAS,GAEf,IAAMC,EAAY5yB,OAAO6yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAGvBvwB,EAAQqI,SAGL,SAAS0N,GAAU/V,GAA+B,IAAtB+wB,EAAqB,uDAAV,SACrC/wB,IAELA,EAAQ+V,UAAY3hB,KAAKC,IAAI2L,EAAQ+V,UAAW,KAChDxZ,WAAW,WACPyD,EAAQgxB,SAAS,CACb93B,IAAK,EACL63B,cAEL,K,qBCvCQ97B,eACX,0BAAMC,EAAE,2oCACR,WCFWD,eACX,0BAAMC,EAAE,ypBACR,QCFWD,eACX,0BAAMC,EAAE,oiDACR,QCFWD,eACX,0BAAMC,EAAE,0uIACR,YCsBWgb,GADC,I,qIAxBDra,G,yEACDiG,EAAQm1B,aAAaC,QAAQr7B,G,yCAChB,M,yCAGRs7B,KAAKC,MAAMt1B,I,yDAEX,M,iLAIJjG,EAAKiG,G,gEACZm1B,aAAaI,QAAQx7B,EAAKs7B,KAAKG,UAAUx1B,I,uKAGhCjG,G,gEACTo7B,aAAaM,WAAW17B,G,sOAIxBo7B,aAAaO,Q,uGC+Rf5sB,GAAQ,I,YAvSV,aAAe,IAAD,8BACV,+CAWJ8kB,MAAQ,WACJ,EAAKE,QAAU,KACf,EAAKlf,QAAU,GACf,EAAK+mB,eAAiB,GACtB,EAAKC,OAAS,KACV,EAAKC,gBACL,EAAKC,SAAW,MAGpB,EAAKC,MAAQ,MArBH,EAwBdtJ,SAAW,SAAAxlB,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtB8mB,EAAwB9mB,EAAxB8mB,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAKH,QACL,MAEJ,IAAK,+BACL,IAAK,6BACL,IAAK,oCACL,IAAK,iCACL,IAAK,qCACDoI,GAAap5B,OAAO,SACpBo5B,GAAap5B,OAAO,SAChB,EAAKi5B,eACLG,GAAap5B,OAAO,eA3C9B,EAwDdsxB,eAAiB,SAAAjnB,GACb,OAAQA,EAAO,UACX,IAAK,2BACD,EAAKyuB,UA3DH,EAkEdvH,iBAAmB,WACfl4B,IAAgByR,GAAG,SAAU,EAAK+kB,UAClCx2B,IAAgByR,GAAG,eAAgB,EAAKwmB,iBApE9B,EAuEdE,oBAAsB,WAClBn4B,IAAgB0R,IAAI,SAAU,EAAK8kB,UACnCx2B,IAAgB0R,IAAI,eAAgB,EAAKumB,iBAtEzC,EAAK2H,eAAgB,EAErB,EAAKjI,QAEL,EAAKO,mBAEL,EAAK8H,aAAe9d,YAAS,EAAK8d,aAAc,KATtC,E,qMA8EJnoB,EAAW,IACRK,KAAK6nB,GAAaE,KAAK,SAASznB,MAAM,SAAAjD,GAAK,OAAI,QACxDsC,EAASK,KAAK6nB,GAAaE,KAAK,SAASznB,MAAM,SAAAjD,GAAK,OAAI,QACxDsC,EAASK,KAAK6nB,GAAaE,KAAK,WAAWznB,MAAM,SAAAjD,GAAK,OAAI,QACtD5U,KAAKi/B,eACL/nB,EAASK,KAAK6nB,GAAaE,KAAK,YAAYznB,MAAM,SAAAjD,GAAK,OAAI,Q,SAEf+C,QAAQzC,IAAIgC,G,0CAArDioB,E,KAAOI,E,KAAOrI,E,KAASgI,E,KAC9Bl/B,KAAKm/B,MAAQA,EACTn/B,KAAKm/B,QACLn/B,KAAKm/B,MAAMI,MAAQA,GAAS,IAG5Bv/B,KAAKi/B,eACDC,KACCA,GAAY,IAAIn9B,QAAQ,SAAAT,GACrBmP,IAAU6K,IAAIha,KAGlBtB,KAAKk/B,SAAW,CACZ,QAAS,QACTM,SAAUN,EAAStnB,IAAI,SAAAtW,GAAC,OAAIA,EAAElC,KAC9BmsB,YAAa2T,EAAS7oB,SAKlCrW,KAAKk3B,QAAUA,EAEXl3B,KAAKm/B,OACLn/B,KAAKy/B,WAAWz/B,KAAKm/B,O,kBAIlBn/B,KAAKm/B,O,sIAGLA,GACP,GAAKA,EAAL,CADc,IAGNH,EAAiFG,EAAjFH,OAAQlnB,EAAyEqnB,EAAzErnB,MAAO4nB,EAAkEP,EAAlEO,aAAcja,EAAoD0Z,EAApD1Z,MAAOka,EAA6CR,EAA7CQ,YAAaC,EAAgCT,EAAhCS,YAAaL,EAAmBJ,EAAnBI,MAAO5+B,EAAYw+B,EAAZx+B,SAG5E4+B,GAAS,IAAInjB,OAAO,SAAA9a,GAAC,OAAI4nB,QAAQ5nB,KAAIS,QAAQ,YAAkB,IAAf3C,EAAc,EAAdA,GAAIiuB,EAAU,EAAVA,IACjD3iB,IAAUm1B,WAAWzgC,EAAIiuB,MAG5B5H,GAAS,IAAI1jB,QAAQ,SAAAT,GAClBmP,IAAU6K,IAAIha,MAGjBq+B,GAAe,IAAI59B,QAAQ,SAAAT,GACxB2d,KAAgB3D,IAAIha,MAGvBs+B,GAAe,IAAI79B,QAAQ,SAAAT,GACxB4e,KAAgB5E,IAAIha,MAGvBwW,GAAS,IAAIqE,OAAOujB,GAAgB,IAAIvjB,OAAO,CAAC6iB,IAASj9B,QAAQ,SAAAT,GAC1DA,WACOA,EAAEw+B,oBAETnuB,IAAU2J,IAAIha,GACVA,EAAEsQ,QACEtQ,EAAEsQ,MAAMG,OAAOrH,IAAU4Q,IAAIha,EAAEsQ,MAAMG,OACrCzQ,EAAEsQ,MAAMqB,KAAKvI,IAAU4Q,IAAIha,EAAEsQ,MAAMqB,MAEvC3R,EAAE6T,UACFxD,IAAUouB,oBAAoBz+B,EAAElC,IAEhCkC,EAAEs0B,cACFnc,KAAa6B,IAAIha,EAAEs0B,kBAK9Bj1B,GAAW,IAAIoB,QAAQ,YAAmB,IAAD,mBAAhB3C,EAAgB,KAAZ4gC,EAAY,KACtCzpB,KAAY+E,IAAIlc,EAAI4gC,Q,uEAIbhoB,EAAS+mB,G,yFACdkB,EAAU,IAAIxpB,IACdypB,EAAU,IAAIzpB,IACd0pB,EAAgB,IAAI1pB,IACpB2pB,EAAgB,IAAI3pB,IACpBuoB,EAASh/B,KAAKg/B,OACdlnB,EAAQE,EAAQJ,IAAI,SAAAtW,GAAC,OAAIqQ,IAAUhH,IAAIrJ,KACvCo+B,EAAeX,EAAennB,IAAI,SAAAtW,GAAC,OAAIqQ,IAAUhH,IAAIrJ,KAG3DwW,EAAMqE,OAAOujB,GAAcvjB,OAAO,CAAC6iB,IAASj9B,QAAQ,SAAAT,GAAM,IAC9CsQ,EAA8BtQ,EAA9BsQ,MAAOkN,EAAuBxd,EAAvBwd,KAAM8W,EAAiBt0B,EAAjBs0B,aACrB,GAAIhkB,GAASA,EAAMG,MAAO,CAAC,IACf3S,EAAOwS,EAAMG,MAAb3S,GACR,GAAIA,EAAI,CACJ,IAAMihC,EAAO31B,IAAU41B,QAAQlhC,GAC3BihC,GACAJ,EAAQ3kB,IAAIlc,EAAIihC,IAK5B,OAAQvhB,EAAK,UACT,IAAK,qBACD,IAAMyhB,EAAathB,KAAgBtU,IAAImU,EAAKK,gBACxCohB,GACAJ,EAAc7kB,IAAIilB,EAAWnhC,GAAImhC,GAGzC,IAAK,kBACL,IAAK,iBACD,IAAM/vB,EAAOC,IAAU9F,IAAImU,EAAKvO,SAC5BC,GACA0vB,EAAQ5kB,IAAI9K,EAAKpR,GAAIoR,GAG7B,IAAK,qBACD,IAAMyP,EAAaC,KAAgBvV,IAAImU,EAAKe,eACxCI,GACAmgB,EAAc9kB,IAAI2E,EAAW7gB,GAAI6gB,GAK7C,GAAI2V,EAAc,CAAC,IACP1K,EAAmB0K,EAAnB1K,eACR,GAAIA,EAAgB,CAChB,IAAM1a,EAAOC,IAAU9F,IAAIugB,GACvB1a,GACA0vB,EAAQ5kB,IAAI9K,EAAKpR,GAAIoR,O,kBAM9B,CACHwuB,SACAlnB,QACA4nB,eACAja,MAAM,aAAKya,EAAQM,UACnBb,YAAY,aAAKQ,EAAcK,UAC/BZ,YAAY,aAAKQ,EAAcI,UAC/BjB,MAAM,aAAKU,EAAQQ,WACnB9/B,QAAQ,aAAK4V,KAAYoP,MAAM8a,a,0KAI5BvJ,EAASlf,EAAS+mB,G,mEACzB/+B,KAAKgY,QAAUA,EACfhY,KAAK++B,eAAiBA,E,KACR/+B,KAAKg/B,O,qCAAgB3/B,IAAgBC,KAAK,CACpD,QAAS,oBACTiR,QAASE,IAAUgH,UACnBC,OAAO,I,6BAHX1X,KAAKg/B,O,MAKDh/B,KAAKi/B,c,yBACWj/B,KAAKk/B,S,uCAAkB7/B,IAAgBC,KAAK,CACxD,QAAS,gB,4BADbU,KAAKk/B,S,aAITl/B,KAAKk3B,QAAUA,EAEfl3B,KAAKq/B,e,qRAKer/B,KAAK0gC,SAAS1gC,KAAKgY,QAAShY,KAAK++B,gB,cAA/CI,E,OACAI,EAAQJ,EAAMI,MACpBJ,EAAMI,MAAQ,G,SAERH,GAAauB,KAAK,QAASxB,G,cAE3BjoB,EAAW,GACjBqoB,EAAMx9B,QAAQ,SAAAT,GAAM,IAAD,cACIA,EADJ,GACRlC,EADQ,KACJihC,EADI,KAEfnpB,EAASK,KACL,IAAII,QAAQ,SAACipB,EAASC,GAClB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcX,GACzBS,EAAWG,OAAS,SAAAnyB,GAChB8xB,EAAQ,CAAExhC,KAAIiuB,IAAKve,EAAEnI,OAAOnH,UAEhCshC,EAAWI,QAAU,SAAApyB,GACjB8xB,EAAQ,Y,UAMFjpB,QAAQzC,IAAIgC,G,eAA5BiqB,E,iBAEA/B,GAAauB,KAAK,QAASQ,G,YAE7BnhC,KAAKi/B,c,wBACCC,EAAWl/B,KAAKk/B,SAASM,SAAS5nB,IAAI,SAAAtW,GAAC,OAAImP,IAAU9F,IAAIrJ,K,UACzD89B,GAAauB,KAAK,WAAYzB,G,YAGpCl/B,KAAKk3B,Q,kCACCkI,GAAauB,KAAK,UAAW3gC,KAAKk3B,S,mIAKxCl3B,KAAKm/B,OACan/B,KAAKm/B,MAAfI,MAEFnjB,OAAO,SAAA9a,GAAC,OAAI4nB,QAAQ5nB,KAAIS,QAAQ,YAAkB,IAAf3C,EAAc,EAAdA,GAAc,EAAViuB,IACzC3iB,IAAU02B,cAAchiC,S,GAlSfq4B,OAySzBpsB,OAAO8zB,MAAQjtB,GACAA,U,kBC1RTmvB,G,YACF,WAAY5hC,GAAQ,IAAD,8BACf,4CAAMA,KAmBV4yB,wBAA0B,SAAAhiB,GAAW,IACzBiiB,EAAiBjiB,EAAjBiiB,aAER,EAAK5yB,SAAS,CAAE4yB,kBAvBD,EA0BnBgP,2BAA6B,SAAAjxB,GACzB,EAAK3Q,SAAS,CAAE6hC,mBAAoBlxB,EAAO8mB,uBA3B5B,EA8BnBqK,eAAiB,SAAAt+B,GAAU,IACfq+B,EAAuB,EAAKxiC,MAA5BwiC,mBACHE,YAAqBF,IAE1B,EAAK7hC,SAAS,CAAEgiC,SAAUx+B,EAAMy+B,iBAlCjB,EAqCnBC,gBAAkB,WACd,EAAKliC,SAAS,CAAEgiC,SAAU,QAtCX,EAyCnBG,mBAzCmB,qBAyCE,sBAAAttB,EAAA,qDACjB,EAAKqtB,kBADY,yCAzCF,EA+CnBE,iBAAmB,SAAA5+B,GACf,EAAK0+B,kBAELviC,IAAgBgI,aAAa,CACzB,QAAS,yBACTkW,MAAM,KApDK,EAwDnBwkB,eAAiB,SAAA7+B,GACb,EAAK0+B,kBAELviC,IAAgBgI,aAAa,CACzB,QAAS,uBACTkW,MAAM,KA7DK,EAiEnBykB,eAAiB,SAAA9+B,GACb,EAAK0+B,kBAELviC,IAAgBgI,aAAa,CACzB,QAAS,uBACTkW,MAAM,KAtEK,EA0EnB0kB,eAAiB,SAAA/+B,GACb,EAAK0+B,kBAELM,gBA7Ee,EAgFnBC,YAhFmB,sCAgFL,WAAMj/B,GAAN,eAAAqR,EAAA,wDACV,EAAKqtB,kBAEDlwB,EAAO0wB,GAAWjD,MAAQiD,GAAWjD,MAAMH,OAAS,KAH9C,gCAKO3/B,IAAgBC,KAAK,CAC9B,QAAS,oBACTiR,QAASE,IAAUgH,UACnBC,OAAO,IARL,OAKNhG,EALM,iBAYLA,EAZK,iDAcV+R,aAAS/R,EAAKtS,IAdJ,yCAhFK,wDAiGnBijC,eAjGmB,sCAiGF,WAAMn/B,GAAN,eAAAqR,EAAA,wDACb,EAAKqtB,kBAEDlwB,EAAO0wB,GAAWjD,MAAQiD,GAAWjD,MAAMH,OAAS,KAH3C,gCAKI3/B,IAAgBC,KAAK,CAC9B,QAAS,oBACTiR,QAASE,IAAUgH,UACnBC,OAAO,IARF,OAKThG,EALS,iBAYRA,EAZQ,iDAcbrS,IAAgBgI,aAAa,CACzB,QAAS,uBACTkW,MAAM,EACN1M,OAAQa,EAAKtS,KAjBJ,yCAjGE,wDAsHnBkjC,WAAa,SAAAp/B,GACT,EAAK0+B,kBAELW,gBAzHe,EA4HnB9Z,aAAe,WACX,EAAKmZ,kBAELY,aAAW,IA5HX,EAAKzjC,MAAQ,CACTwiC,mBAAoBnM,KAASqN,wBAC7Bf,SAAU,KACVpP,aAAc8C,KAAS9C,cANZ,E,iFAWf8C,KAAStkB,GAAG,2BAA4B9Q,KAAKshC,4BAC7ClM,KAAStkB,GAAG,wBAAyB9Q,KAAKqyB,2B,6CAI1C+C,KAASrkB,IAAI,2BAA4B/Q,KAAKshC,4BAC9ClM,KAASrkB,IAAI,wBAAyB/Q,KAAKqyB,2B,+BAiHrC,IAAD,EAC6CryB,KAAKP,MAA/C6S,EADH,EACGA,EAAGowB,EADN,EACMA,QAASlgB,EADf,EACeA,MAAOmgB,EADtB,EACsBA,UAAWhlB,EADjC,EACiCA,QADjC,EAEkD3d,KAAKjB,MAApD2iC,EAFH,EAEGA,SAAUH,EAFb,EAEaA,mBAAoBjP,EAFjC,EAEiCA,aAEhCsQ,GACDD,GAAalB,YAAqBF,GAC/B,kBAACsB,GAAA,EAAD,CACIzjC,GAAG,YACHsiC,SAAUA,EACVnkB,KAAM2L,QAAQwY,GACd/jB,QAAS3d,KAAK4hC,gBACdkB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB,kBAACG,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK8hC,kBACpB,kBAACjgB,GAAA,EAAD,KACI,kBAACohB,GAAD,OAEJ,kBAACnhB,GAAA,EAAD,CAAcC,QAASzP,EAAE,iBAE7B,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK+hC,gBACpB,kBAAClgB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAE3BggB,GACE,kBAACtK,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKyoB,cACpB,kBAAC5G,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,aAGjC,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKgiC,gBACpB,kBAACngB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAE7B,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKiiC,gBACpB,kBAACpgB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAE7B,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmiC,aACpB,kBAACtgB,GAAA,EAAD,KACI,kBAACqhB,EAAD,OAEJ,kBAACphB,GAAA,EAAD,CAAcC,QAASzP,EAAE,YAE7B,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKqiC,gBACpB,kBAACxgB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAE7B,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKsiC,YACpB,kBAACzgB,GAAA,EAAD,KACI,kBAACshB,GAAD,OAEJ,kBAACrhB,GAAA,EAAD,CAAcC,QAASzP,EAAE,oBAGjC,KAEF8wB,EAAY5gB,EACZ,kBAACzT,EAAA,EAAD,MACA,kBAAC,GAAD,MAEN,OACI,oCACI,kBAACsK,EAAA,EAAD,CACIgqB,YAAW3B,EAAW,cAAgB,KACtC4B,gBAAc,OACdrjC,UAAU,sCACVqZ,aAAW,OACX3K,QAASg0B,EAAYhlB,EAAU3d,KAAKwhC,gBAClCkB,EACK,kBAACvZ,GAAA,EAAD,CAAe5L,KAAMolB,EAAWtZ,SAAU,kBAAC,GAAD,MAAmBD,KAAM,kBAAC,GAAD,QACnE,oCAAGuZ,EAAYS,EAAY,kBAAC,GAAD,QAIrCR,O,GA5NYriC,IAAMC,WAkOpByT,iBAAkBotB,ICxP3BkC,I,kNACFza,cAAgB,SAAA5lB,GACZ,GAAsB,KAAlBA,EAAMuY,QACNvY,EAAM2B,sBACH,GAAsB,KAAlB3B,EAAMuY,QAAgB,CAAC,IAAD,EACC,EAAKhc,MAA3BkQ,EADqB,EACrBA,SAAUgO,EADW,EACXA,QAEZrQ,EAAUpK,EAAMyD,OACtB,IAAK2G,EAAS,OAEd,GAAIA,EAAQiO,UAMR,OALArY,EAAM0B,kBACN1B,EAAMmF,YAAYm7B,2BAElBl2B,EAAQiO,UAAY,UAChB5L,GAAUA,EAASrC,EAAQiO,YAI/BoC,GACAA,EAAQza,QAET,GAAsB,IAAlBA,EAAMuY,QAAe,CAAC,IACrBgoB,EAAgB,EAAKhkC,MAArBgkC,YAEFn2B,EAAUpK,EAAMyD,OACtB,IAAK2G,EAAS,OACd,GAAIA,EAAQiO,UAAW,OAEnBkoB,IACAvgC,EAAM0B,kBACN6+B,O,EAKZ1a,YAAc,SAAA7lB,GACV,IAAMoK,EAAUpK,EAAMyD,OACtB,GAAK2G,EAAL,CAFmB,IAIXf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,Q,EAI5Byc,YAAc,SAAA9lB,GACV,IAAMuZ,EAAYvZ,EAAMwZ,cAAcC,QAAQ,cAC1CF,IACAvZ,EAAM2B,iBACNW,SAASqQ,YAAY,cAAc,EAAO4G,K,EAIlDinB,YAAc,SAAAxgC,GAAU,IACZyM,EAAa,EAAKlQ,MAAlBkQ,SAEFrC,EAAUpK,EAAMyD,OACjB2G,GAEDqC,GACAA,EAASrC,EAAQiO,Y,wEAIf,IAAD,EAC4Cvb,KAAKP,MAA9CkkC,EADH,EACGA,SAAUrxB,EADb,EACaA,EAAGsxB,EADhB,EACgBA,QAASC,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SAEpC,OACI,yBAAK7jC,UAAU,gBACX,yBACIb,GAAG,kBACH0e,IAAK6lB,EACL3lB,YAAa6lB,GAAQvxB,EAAE,UACvB0C,iBAAe,EACf+I,gCAA8B,EAC9B9a,UAAWjD,KAAK8oB,cAChB7K,QAASje,KAAK+oB,YACd7K,QAASle,KAAKgpB,YACd+a,QAAS/jC,KAAK0jC,YACdE,QAASA,IAEZE,GAAY,kBAAC,GAAD,CAAY7jC,UAAU,2B,GAlFzBM,IAAMC,YAkGhC+iC,GAAYnyB,aAAe,CACvB0yB,UAAU,GAGC7vB,qBAAkBsvB,ICqClBS,I,mBAxIX,WAAYvkC,GAAQ,IAAD,8BACf,4CAAMA,KAgEV6hC,2BAA6B,SAAAjxB,GACzB,EAAK3Q,SAAS,CAAE6hC,mBAAoBlxB,EAAO8mB,uBAlE5B,EAqEnB1O,aAAe,WAAO,IAAD,EACgB,EAAKhpB,MAA9BkpB,EADS,EACTA,SAAUE,EADD,EACCA,WACV0Y,EAAuB,EAAKxiC,MAA5BwiC,mBACHE,YAAqBF,IAE1B5Y,GAAUE,IA1EK,EA6EnBob,uBAAyB,WAAO,IACpBC,EAAuB,EAAKzkC,MAA5BykC,mBAEF52B,EAAU,EAAKob,eAAexO,QACpC,GAAK5M,EAAL,CAJ2B,IAMnBf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAIxB23B,EAFsB52B,EAAdiO,aAvFO,EA4FnB8Q,kBAAoB,WAChB,EAAK5D,gBA7FU,EAgGnB0b,YAAc,WACV,EAAK1b,gBA9FL,EAAKC,eAAiBnoB,IAAM4c,YAE5B,EAAKpe,MAAQ,CACTwiC,mBAAoBnM,KAASqN,wBAC7BllB,MAAM,GAPK,E,0EAWNhB,GAAQ,IACT2nB,EAAuBlkC,KAAKP,MAA5BykC,mBAEFE,EAAcpkC,KAAK0oB,eAAexO,QACxC,GAAIkqB,EAAa,CAEb,GADAA,EAAY7oB,UAAYgB,EACpB6nB,EAAY1G,WAAWrnB,OAAS,EAAG,CACnC,IAAMwnB,EAAQr4B,SAASs4B,cACvBD,EAAME,SAASqG,EAAY1G,WAAW,GAAI0G,EAAY1G,WAAW,GAAGrnB,QACpEwnB,EAAMG,UAAS,GAEf,IAAMC,EAAY5yB,OAAO6yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvBuG,EAAYzuB,QACZuuB,EAAmB3nB,M,yCAIR1c,EAAWC,EAAWC,GAAW,IACxC8oB,EAAe7oB,KAAKP,MAApBopB,WAER,GAAIA,IAAehpB,EAAUgpB,WACzB,GAAIA,EACA7oB,KAAK49B,iBACF,CACH,IAAMwG,EAAcpkC,KAAK0oB,eAAexO,QACpCkqB,IACAA,EAAY7oB,UAAY,S,mCAOpC,IAAM6oB,EAAcpkC,KAAK0oB,eAAexO,QACpCkqB,GACAA,EAAYzuB,U,0CAKZ3V,KAAKP,MAAM+iB,OACXxiB,KAAK49B,aAGTxI,KAAStkB,GAAG,2BAA4B9Q,KAAKshC,8B,6CAI7ClM,KAASrkB,IAAI,2BAA4B/Q,KAAKshC,8B,+BAsCxC,IAAD,EACkCthC,KAAKP,MAApCopB,EADH,EACGA,WAAY6Z,EADf,EACeA,QAASlgB,EADxB,EACwBA,MAEzB7I,EAAU,KACV0qB,GAAW,EAcf,OAbIxb,GACAwb,GAAW,EACX1qB,EACI,kBAAC,GAAD,CACIgqB,SAAU3jC,KAAK0oB,eACf/Y,SAAU3P,KAAKikC,uBACftmB,QAAS3d,KAAKqsB,qBAItB1S,EAAU,kBAAC,GAAD,CAAagqB,SAAU3jC,KAAK0oB,eAAgBkb,QAAS5jC,KAAKmkC,cAIpE,yBAAKlkC,UAAU,iBACX,kBAAC,GAAD,CAAgByiC,QAASA,EAASC,UAAW0B,EAAU7hB,MAAOA,EAAO7E,QAAS3d,KAAKqsB,oBAClF1S,O,GA1HWpZ,IAAMC,Y,4BCK5B8jC,G,YACF,WAAY7kC,GAAQ,IAAD,uBACf,4CAAMA,KA2CV8kC,YAAc,WACV,MAAO,mBAAoBl5B,QA7CZ,EAsEnBm5B,6BAA+B,SAAAn0B,GACtB,EAAKk0B,eAAe,EAAKE,cAAa,IAvE5B,EA0EnBC,0BAA4B,SAAAr0B,GAExB,IADoB,EAAKtR,MAAjBm4B,QACR,CAFkC,IAIjByN,EAAkBvC,GAA3BlL,QACHyN,GAEL,EAAKjlC,SAAS,CACVw3B,QAASyN,GACV,WACM,EAAKJ,eAAe,EAAKE,cAAa,OApFhC,EAwFnBx+B,eAAiB,WACb,EAAKw+B,cAAa,IAzFH,EA4FnBpS,wBAA0B,SAAAhiB,GAAW,IACzBiiB,EAAiB8C,KAAjB9C,aACR,EAAK5yB,SAAS,CACV4yB,gBACD,WACM,EAAKiS,eAAe,EAAKE,cAAa,MAjGhC,EAqGnBA,aAAe,WAAwB,IAAvBG,IAAsB,2DACU,EAAK7lC,MAAzCk4B,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,QAAS5E,EADO,EACPA,aAErBuS,EAAS,EAAKC,WAAW5qB,QAE3BkjB,EAAO,KACP92B,EAAO,EACX,GAA0B,iBAAtB2wB,EAAS,SAA6B,CACtC,IAAM8N,EAAO,EAAKC,UAAUr6B,IAAI,gBAC5Bo6B,IACA3H,EAAO2H,EACPz+B,GAAQgsB,EAAe,EAAI,QAE5B,GAA0B,mBAAtB2E,EAAS,SAA+B,CAC/C,IAAM8N,EAAO,EAAKC,UAAUr6B,IAAI,gBAC5Bo6B,IACAz+B,GAAQy+B,EAAKE,aAEjB,IAAK,IAAItuB,EAAI,EAAGA,EAAIugB,EAAQ7gB,OAAQM,IAAK,CACrC,IAAMyF,EAAS,EAAK4oB,UAAUr6B,IAAI,qBAAuBusB,EAAQvgB,GAAGvX,IACpE,GAAI83B,EAAQvgB,GAAGvX,KAAO63B,EAASiO,eAAgB,CAC3C9H,EAAOhhB,EACP9V,GAAQgsB,EAAe,EAAI,EAC3B,MAEAhsB,GAAQ8V,EAAO6oB,aAI3B,GAAK7H,EAAL,CAEA,IAAM+H,EAAkB,EAAKC,mBAAmBlrB,QAChD,GAAIirB,EAAiB,CACjB,IAAME,EAAkBT,EAAa,gDAAkD,KACvFO,EAAgB9+B,MAAMi/B,QAAtB,gBAAyCh/B,EAAzC,sBAA2D82B,EAAK6H,YAAc,GAA9E,eAAuFI,GAG3F,GAAIjI,GAAQwH,EAAW,CAAC,IAAD,iBACXW,EADW,EACXA,SAEJA,GACAA,EAASrjC,OAGb,EAAKqjC,SAAW,IAAI9kC,KAAS,IAAK,CAC9B,CACIuB,KAAM6iC,EAAOW,WACbjkC,GAAIuD,YAAMwB,EAAOu+B,EAAOY,YAAc,EAAIrI,EAAKqI,YAAc,EAAG,EAAGZ,EAAOI,YAAcJ,EAAOY,aAC/FxjC,KAAM,SAAAqE,GAAI,OAAKu+B,EAAOW,WAAal/B,MAI3CuD,WAAW,WACF,EAAK07B,UAEV,EAAKA,SAAS3kC,SACf,MA7JQ,EAoKnB8kC,oBAAsB,SAAAr1B,GAAW,IACrB4mB,EAAa,EAAKl4B,MAAlBk4B,SACAC,EAAYyO,GAAZzO,QAER,EAAKx3B,SAAS,CACVw3B,WACD,WAC2B,mBAAtBD,EAAS,WAA+F,IAA9DC,EAAQnN,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAO63B,EAASiO,iBACnF,EAAKU,kBAEA,EAAKrB,eAAe,EAAKE,kBA9KvB,EAmLnBoB,uBAAyB,SAAAx1B,GAAW,IACxB4mB,EAAa0O,GAAb1O,SAER,EAAKv3B,SAAS,CACVu3B,YACD,WACM,EAAKsN,eAAe,EAAKE,kBAzLnB,EA6LnBmB,gBAAkB,SAAA1iC,GACVA,GAA0B,IAAjBA,EAAM0e,QAEnBviB,IAAgBgI,aAAa,CACzB,QAAS,uBACT4vB,SAAU,CACN,QAAS,mBAnMF,EAwMnB6O,kBAAoB,SAAC5iC,EAAO9D,GACpB8D,GAA0B,IAAjBA,EAAM0e,QAEnBviB,IAAgBgI,aAAa,CACzB,QAAS,uBACT4vB,SAAU,CACN,QAAS,iBACTiO,eAAgB9lC,MA/MT,EAoNnB2mC,YAAc,SAAA7iC,GACLA,EAAM8iC,SAIX9iC,EAAMy+B,cAAc6D,YAActiC,EAAM8iC,OACxC9iC,EAAM0B,oBAvNN,EAAKogC,UAAY,IAAIvuB,IACrB,EAAKquB,WAAavkC,IAAM4c,YACxB,EAAKioB,mBAAqB7kC,IAAM4c,YALjB,IAOPmV,EAAiB8C,KAAjB9C,aACA4E,EAAsByO,GAAtBzO,QAASD,EAAa0O,GAAb1O,SARF,OAUf,EAAKl4B,MAAQ,CACTuzB,eACA4E,UACAD,YAGJ,EAAKhxB,eAAiBggC,YAAS,EAAKhgC,eAAgB,KAhBrC,E,iFAoBfjG,KAAKkmC,gBACL9Q,KAAStkB,GAAG,0BAA2B9Q,KAAK0kC,2BAC5CtP,KAAStkB,GAAG,wBAAyB9Q,KAAKqyB,yBAC1CsT,GAAY70B,GAAG,uBAAwB9Q,KAAK6lC,wBAC5CF,GAAY70B,GAAG,oBAAqB9Q,KAAK0lC,qBACzCS,KAAkBr1B,GAAG,6BAA8B9Q,KAAKwkC,8BAExDxkC,KAAKykC,iB,yCAGU5kC,EAAWC,EAAWC,GACrCC,KAAKomC,kBACLpmC,KAAKkmC,kB,6CAILlmC,KAAKomC,kBACLhR,KAASrkB,IAAI,0BAA2B/Q,KAAK0kC,2BAC7CtP,KAASrkB,IAAI,wBAAyB/Q,KAAKqyB,yBAC3CsT,GAAY50B,IAAI,uBAAwB/Q,KAAK6lC,wBAC7CF,GAAY50B,IAAI,oBAAqB/Q,KAAK0lC,qBAC1CS,KAAkBp1B,IAAI,6BAA8B/Q,KAAKwkC,gC,sCAQzD,GAAKxkC,KAAKukC,cAAV,CACA,IAAMrN,EAAUl3B,KAAK8kC,WAAW5qB,QAChC,GAAKgd,EAAL,CAEA,IAAMmP,EAAW,IAAIC,eAAetmC,KAAKiG,gBACzCogC,EAASE,QAAQrP,GAEjBl3B,KAAKwmC,eAAiB,CAAEH,WAAUnP,e,wCAIlC,GAAKl3B,KAAKukC,eACLvkC,KAAKwmC,eAAV,CAFc,MAIgBxmC,KAAKwmC,eAA3BH,EAJM,EAINA,SAAUnP,EAJJ,EAIIA,QACbmP,GACAnP,GAELmP,EAASI,UAAUvP,M,+BA0Jb,IAAD,OACG5kB,EAAMtS,KAAKP,MAAX6S,EADH,EAEuCtS,KAAKjB,MAAzCm4B,EAFH,EAEGA,QAASD,EAFZ,EAEYA,SAAU3E,EAFtB,EAEsBA,aAE3B,OAAK4E,GACAA,EAAQ7gB,QAEbrW,KAAKglC,UAAY,IAAIvuB,IAEjB,yBAAKqH,IAAK9d,KAAK8kC,WAAY7kC,UAAU,UAAUymC,QAAS1mC,KAAK+lC,aACzD,yBACIjoB,IAAK,SAAAya,GAAC,OAAI,EAAKyM,UAAU1pB,IAAI,eAAgBid,IAC7Ct4B,UAAWuO,IAAW,SAAU,CAAE,gBAAuC,iBAAtByoB,EAAS,WAC5DxoB,YAAazO,KAAK4lC,gBAClBhnB,MAAO0T,EAAehgB,EAAE,kBAAoB,MAC3CggB,EAAe5D,YAAepc,EAAE,mBAAqBA,EAAE,mBAE3D4kB,EAAQtf,IAAI,SAAAtW,GAAC,OACV,yBACI6B,IAAK7B,EAAElC,GACP0e,IAAK,SAAAya,GAAC,OAAI,EAAKyM,UAAU1pB,IAAI,qBAAuBha,EAAElC,GAAIm5B,IAC1Dt4B,UAAWuO,IAAW,SAAU,CAAE,gBAAiByoB,EAASiO,iBAAmB5jC,EAAElC,KACjFqP,YAAa,SAAAK,GAAC,OAAI,EAAKg3B,kBAAkBh3B,EAAGxN,EAAElC,KAC9Cwf,MAAO0T,EAAehxB,EAAEsd,MAAQ,MAC/B0T,EAAe5D,YAAeptB,EAAEsd,OAAStd,EAAEsd,SAEpD,yBAAKd,IAAK9d,KAAKolC,mBAAoBnlC,UAAU,uBAtBhC,S,GAlOPM,IAAMC,WAkQbyT,iBAAkBqwB,IC1P3BqC,G,8LACoB/zB,EAAWC,EAAWsqB,GAAc,IAAD,EACTn9B,KAAKP,MAAzCoR,EAD6C,EAC7CA,OAAQomB,EADqC,EACrCA,SAAU5wB,EAD2B,EAC3BA,MAAOe,EADoB,EACpBA,OACjC,OAAIwL,EAAU/B,SAAWA,IAKrB+B,EAAUqkB,WAAaA,IAKvBrkB,EAAUxL,SAAWA,GAKrBwL,EAAUvM,MAAMG,MAAQH,EAAMG,Q,+BAS5B,IAAD,EACuCxG,KAAKP,MAAzCoR,EADH,EACGA,OAAQomB,EADX,EACWA,SAAU7vB,EADrB,EACqBA,OAAQf,EAD7B,EAC6BA,MAElC,OACI,yBAAKpG,UAAU,mBAAmBoG,MAAOA,GACrC,kBAAC,GAAD,CAAQwK,OAAQA,EAAQomB,SAAUA,EAAU7vB,OAAQA,S,GAhCvC7G,IAAMC,WAqepBomC,G,YA9bX,WAAYnnC,GAAQ,IAAD,uBACf,4CAAMA,KA6GVomC,uBAAyB,SAAAx1B,GAAW,IACxB4mB,EAAa5mB,EAAb4mB,SAER,EAAKv3B,SAAS,CACVu3B,YACD,WACC,EAAK4P,oBApHM,EAwHnB7mB,mBAAqB,SAAA3P,KAxHF,EAkInBy2B,wBAA0B,SAAAz2B,GAAW,IACzBqlB,EAAuBrlB,EAAvBqlB,WAAY7kB,EAAWR,EAAXQ,OAEhB6kB,EACA,EAAKqR,YAAYzrB,IAAIzK,EAAQA,GAE7B,EAAKk2B,YAAY1rB,OAAOxK,GAG5B,EAAKU,eA3IU,EA8InB+vB,2BAA6B,SAAAjxB,GAAW,IACPkxB,EAAuBlxB,EAA5C8mB,oBAER,EAAKz3B,SAAS,CAAE6hC,sBAAsB,kBAAM,EAAKsF,oBAjJlC,EAoJnBv1B,uBAAyB,SAAAjB,GACrB,EAAKqa,YAAW,IArJD,EAyJnBmc,eAzJmB,qBAyJF,4BAAAtyB,EAAA,wDACLgtB,EAAuB,EAAKxiC,MAA5BwiC,mBACHE,YAAqBF,GAFb,iEAIP72B,IAAUs8B,OAAO,kBAAM,EAAKtc,YAAW,KAJhC,yCAzJE,EAgKnBuc,UAAY,WAAO,IAAD,EACgB,EAAKxnC,MAA3BynC,EADM,EACNA,YAAapoB,EADP,EACOA,KACbmY,EAAa,EAAKl4B,MAAlBk4B,SACK,iBAATnY,GACsB,iBAAtBmY,EAAS,UAETiQ,GAAaA,KAtKF,EAyKnBC,qBAAuB,SAAA92B,GAAW,IACtB4mB,EAAa,EAAKl4B,MAAlBk4B,SACA9hB,EAAa9E,EAAb8E,SAEHiyB,YAAenQ,EAAU9hB,EAAS0O,OAIvC,EAAKwjB,kBAAkBh3B,IAjLR,EAoLnBg3B,kBAAoB,SAAAh3B,GAAW,IAAD,EACE,EAAKtR,MAAzB+Y,EADkB,EAClBA,MAAOmf,EADW,EACXA,SACf,GAAKnf,IAFqB,eAIlB8S,QACR,CAL0B,IAOlB3Y,EAAY5B,EAAZ4B,QAEFP,EAAOC,IAAUhH,IAAIsH,GAC3B,GAAKP,GAIA41B,YAAYr1B,EAASglB,GAA1B,CAIA,IAAMsQ,EAAQC,YAAav1B,EAASglB,GAC9BwQ,EAAe3vB,EAAMiS,UAAU,SAAAzoB,GAAC,OAAIA,IAAM2Q,IAChD,IAAsB,IAAlBw1B,GAAiC,MAAVF,EAA3B,CAKA,IADA,IAAMvvB,EAAU,GACPrB,EAAI,EAAGA,EAAImB,EAAMzB,OAAQM,IAAK,CACnC,IAAMjF,EAAOC,IAAUhH,IAAImN,EAAMnB,IAC3B+wB,EAAYF,YAAa1vB,EAAMnB,GAAIsgB,GACrCvlB,GAAsB,MAAdg2B,GACR1vB,EAAQT,KAAK7F,EAAKtS,IAI1B,IAAMuoC,EAAa,GACL,MAAVJ,EAEIt1B,IAAYmjB,KAASsG,aAAgBhqB,EAAKkkB,eAC1Cv2B,IAAgBuoC,UAAU,GAC1BtT,cAA4B,KAGV,IAAlBmT,GACAE,EAAWpwB,KAAKtF,GAIxB,EAAK41B,aAAa7vB,EAAS2vB,EAAY,WACnC,EAAKplB,iBAAiBolB,GACtB,EAAKV,kBApOM,EAmQnBtb,aAAe,WAEX,IAAM9H,EAAO,EAAK+H,QAAQ1R,QAAQ4tB,aAAa5tB,QAC1C2J,IAGDA,EAAKR,WAAa0kB,KAClB,EAAKC,aACEnkB,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAeD,EAAKE,cAEtE,EAAK2G,eA7QM,EAqXnB2S,WAAa,WAAmBj9B,GAAY,IAA5B0pB,EAA2B,EAA3BA,MAAOzjB,EAAoB,EAApBA,MACX4wB,EAAa,EAAKl4B,MAAlBk4B,SACF31B,EAAIlB,EAAO0pB,GAEjB,OAAO,kBAAC,GAAD,CAAgB3mB,IAAK7B,EAAGuP,OAAQvP,EAAG21B,SAAUA,EAAU7vB,OAAQ,EAAK2/B,YAAYnwB,IAAItV,GAAI+E,MAAOA,KAtXtG,EAAK0gC,YAAc,IAAItwB,IAEvB,EAAKmV,QAAUrrB,IAAM4c,YALN,IAOPokB,EAAuBnM,KAAvBmM,mBAPO,OASf,EAAKxiC,MAAQ,CACTwiC,qBACAnW,OAAQ,EACRtT,MAAO,KACPmwB,iBAAiB,EACjBhR,SAAyB,iBAAfx3B,EAAMqf,KAA0B,CAAE,QAAS,gBAAmB,CAAE,QAAS,oBAdxE,E,mFAkBGlM,EAAWC,GAAY,IAAD,EAC8B7S,KAAKP,MAAnEukB,EADgC,EAChCA,MAAOzG,EADyB,EACzBA,KAAM2qB,EADmB,EACnBA,YAAaC,EADM,EACNA,aAAcxiB,EADR,EACQA,MAAOyiB,EADf,EACeA,WADf,EAEJpoC,KAAKjB,MAAjC+Y,EAFgC,EAEhCA,MAAOsT,EAFyB,EAEzBA,OAFyB,EAEjB6L,SAEvB,OAAIrkB,EAAUoR,QAAUA,IAIpBpR,EAAU2K,OAASA,IAInB3K,EAAU+S,QAAUA,IAIpB/S,EAAUw1B,aAAeA,IAIzBx1B,EAAUs1B,cAAgBA,IAI1Bt1B,EAAUu1B,eAAiBA,IAI3Bt1B,EAAUuY,SAAWA,GAIrBvY,EAAUiF,QAAUA,U,8CAWJjY,EAAWC,GAAY,IAC1B+jB,EAAS7jB,KAAK4rB,QAAvB1R,QACR,OAAK2J,EAEE,CAAER,UAAWQ,EAAKR,WAFP,CAAEA,UAAW,K,yCAKhBxjB,EAAWC,EAAWC,GAErC,GAD0BC,KAAK4rB,QAAvB1R,QAGcna,EAAdsjB,Y,0CASRrjB,KAAK6mC,iBAELzR,KAAStkB,GAAG,2BAA4B9Q,KAAKshC,4BAE7C3vB,IAAUb,GAAG,mCAAoC9Q,KAAKsR,wBACtDK,IAAUb,GAAG,wBAAyB9Q,KAAK8mC,yBAC3Cn1B,IAAUb,GAAG,yBAA0B9Q,KAAKqnC,mBAC5C11B,IAAUb,GAAG,wBAAyB9Q,KAAKqnC,mBAC3C11B,IAAUb,GAAG,qBAAsB9Q,KAAKmnC,sBAExCxB,GAAY70B,GAAG,uBAAwB9Q,KAAK6lC,wBAE5C3lB,KAAgBpP,GAAG,kBAAmB9Q,KAAKggB,sB,6CAI3CoV,KAASrkB,IAAI,2BAA4B/Q,KAAKshC,4BAE9C3vB,IAAUZ,IAAI,mCAAoC/Q,KAAKsR,wBACvDK,IAAUZ,IAAI,wBAAyB/Q,KAAK8mC,yBAC5Cn1B,IAAUZ,IAAI,yBAA0B/Q,KAAKqnC,mBAC7C11B,IAAUZ,IAAI,wBAAyB/Q,KAAKqnC,mBAC5C11B,IAAUZ,IAAI,qBAAsB/Q,KAAKmnC,sBAEzCxB,GAAY50B,IAAI,uBAAwB/Q,KAAK6lC,wBAE7C3lB,KAAgBnP,IAAI,kBAAmB/Q,KAAKggB,sB,mCA6HnChI,GAAqC,IAA5B2vB,EAA2B,uDAAd,GAAInd,EAAU,uCACrCyM,EAAaj3B,KAAKjB,MAAlBk4B,SAEFoR,EAAiBrwB,EAAQmE,OAAOwrB,GAAY/hB,KAAK,SAACrR,EAAG+zB,GACvD,OAAOC,YAAaf,YAAac,EAAGrR,GAAWuQ,YAAajzB,EAAG0iB,MAG9D2P,EAAY4B,iBAAiBxoC,KAAKjB,MAAM+Y,MAAOuwB,GAKpDroC,KAAKN,SAAS,CAAEoY,MAAOuwB,GAAkB7d,GAJjCA,GAAUA,M,mCAkClBxqB,KAAKN,SAAS,CACV0rB,OAAQ1pB,KAAK0N,IAAIpP,KAAKjB,MAAMqsB,OAASqd,IAAkB,O,yLAI9ClkC,E,gCACLua,EAAS9e,KAAKP,MAAdqf,K,EAC4B9e,KAAKjB,MAAjCqsB,E,EAAAA,OAAQtT,E,EAAAA,MAAOmf,E,EAAAA,WAEnBnf,GAASsT,EAAS,EAAIqd,IAAmB3wB,EAAMzB,Q,uBAC/CrW,KAAKN,SAAS,CACV0rB,OAAQA,EAASqd,M,8BAKrBzoC,KAAK4qB,Q,wDAIL8d,EAAc,sBACdC,EAAe,GACdpkC,GAAWuT,GAASA,EAAMzB,OAAS,IAC9B3E,EAAOC,IAAUhH,IAAImN,EAAMA,EAAMzB,OAAS,OAE5CqyB,EAAclB,YAAa91B,EAAKtS,GAAI63B,GACpC0R,EAAej3B,EAAKtS,IAIf,iBAAT0f,GAAyBnK,QAAQi0B,IAAI,qBAAsBF,EAAaC,GAC5E3oC,KAAK4qB,SAAU,E,UACMvrB,IAAgBC,KAAK,CACtC,QAAS,WACTg7B,UAAWrD,EACX5f,eAAgBsxB,EAChBvxB,aAAcsxB,EACdpxB,MAAOmxB,MACRpd,QAAQ,WACP,EAAKT,SAAU,EACF,iBAAT9L,GAAyBnK,QAAQi0B,IAAI,qBACrCrkC,GACAlF,IAAgBgI,aAAa,CAAE,QAAS,2BAA4Bwc,KAAMoT,M,SAV5Ez3B,E,QAcKyY,SAAS5B,OAAS,GAAK7W,EAAOyY,SAAS,KAAO0wB,GACrDnpC,EAAOyY,SAAS4wB,QAGhBtkC,EACAvE,KAAK8oC,aAAatpC,EAAOyY,SAAU,WAC/B,EAAKsK,iBAAiB/iB,EAAOyY,UAC7B,EAAKgvB,YAEDznC,EAAOyY,SAAS5B,OAASoyB,KACzB,EAAK/d,aAGT,IAAM7G,EAAO,EAAK+H,QAAQ1R,QAAQ4tB,aAAa5tB,QAC1C2J,IACLA,EAAKR,UAAY,KAIrBrjB,KAAK+oC,YAAYvpC,EAAOyY,SAAU,WAE9B,EAAKsK,iBAAiB/iB,EAAOyY,Y,4IAKxBD,GACb,IAAM9F,EAAQxH,IAAUyH,WACxB+F,YAAiBhG,EAAO8F,K,kCAGhBA,EAASwS,GACjB,GAAuB,IAAnBxS,EAAQ3B,OAAZ,CAD2B,IAQrB2yB,GAFYhpC,KAAKjB,MAAf+Y,OAEmB,IAAIqE,OAAOnE,GACtChY,KAAKN,SAAS,CAAEoY,MAAOkxB,EAAU5d,OAAQ4d,EAAS3yB,OAAS,EAAIoyB,KAAoBje,QAP3EA,GAAUA,M,mCAUT1S,EAAO0S,GAChBxqB,KAAKN,SAAS,CAAEoY,QAAOsT,OAAQ,GAAKZ,K,oCAMpCnH,GAFarjB,KAAK4rB,QAAQ1R,QAAQ4tB,aAAa5tB,W,+BAczC,IAAD,SACmDla,KAAKP,MAArD8d,EADH,EACGA,KAAM6qB,EADT,EACSA,WADT,KACqBF,YADrB,EACkCC,aACHnoC,KAAKjB,OAAjC+Y,EAFH,EAEGA,MAAemf,GAFlB,EAEU7L,OAFV,EAEkB6L,UAGvB,IAAK1Z,EAAM,OAAO,KAElBvd,KAAKI,OAAS,GAEd,GAAI0X,EAAO,CAEPA,EAAM/V,QAAQ,SAAAT,GACNu2B,YAAav2B,EAAG21B,IACD31B,IAGvBtB,KAAKI,OAAS0X,OAIX,GAAIswB,EAAY,CAEnBA,EAAWrmC,QAAQ,SAAAT,GACXu2B,YAAav2B,EAAG21B,IACD31B,IAGvBtB,KAAKI,OAASgoC,EAAWxwB,IAAI,SAAAtW,GAAC,OAAIA,EAAElC,SAUV,iBAAtB63B,EAAS,UACCgS,MAAMjnC,KAAKinC,MAAM,KAAKrxB,IAAI,SAACtW,EAAGwoB,GAAJ,OAAc,kBAAC,GAAD,CAAmB3mB,IAAK2mB,EAAOA,MAAOA,MAIhG,OACI,kBAAC,GAAD,CACIhM,IAAK9d,KAAK4rB,QACV3rB,UAAU,eACVG,OAAQJ,KAAKI,OACb28B,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA/7B,GAAC,OAAI,EAAK+7B,WAAW/7B,EAAG,EAAKlB,SACzCusB,SAAU3sB,KAAK2rB,kB,wCAzLHud,EAAYvB,GAChC,GAAIuB,EAAW7yB,SAAWsxB,EAAWtxB,OAAQ,CACzC,IAAK,IAAIM,EAAI,EAAGA,EAAIuyB,EAAW7yB,OAAQM,IACnC,GAAIuyB,EAAWvyB,KAAOgxB,EAAWhxB,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,M,GAjQWpW,IAAMC,WCpD1B2oC,G,iLACQ,IAAD,EACmDnpC,KAAKP,MAArD6S,EADH,EACGA,EAAG82B,EADN,EACMA,aAAczjB,EADpB,EACoBA,MAAOyiB,EAD3B,EAC2BA,WAAYzqB,EADvC,EACuCA,QAE5C,OACI,oCACI,yBAAK1d,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,sCAAsC0O,QAASgP,GACjE,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,oBAGnD,yBAAKrS,UAAU,mBACX,kBAAC,GAAD,CACI6e,KAAK,kBACLhB,IAAKsrB,EACLhB,WAAYA,EACZ7qB,MAAM,EACNoI,MAAOA,U,GApBTplB,IAAMC,WA8BbyT,iBAAkBk1B,IClClB5mC,eACX,0BAAMC,EAAE,suBACR,UCSE6mC,I,kNACFtqC,MAAQ,CACJmpB,aAAa,EACb1hB,IAAK,EACLF,KAAM,G,EAGVszB,kB,sCAAoB,WAAM12B,GAAN,iBAAAqR,EAAA,qDACZrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAEc,EAAK7F,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,KAEvB5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,SAhBQ,yC,wDAqBpB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,K,EAGjCf,aAAe,SAAAjkB,GACX,EAAKklB,0BAILkhB,EAFqB,EAAK7pC,MAAlB6pC,a,wEAKF,IAAD,EAC8CtpC,KAAKP,MAAhDoR,EADH,EACGA,OAAQ6B,EADX,EACWA,SAAUK,EADrB,EACqBA,kBAAmBT,EADxC,EACwCA,EADxC,EAE8BtS,KAAKjB,MAAhCmpB,EAFH,EAEGA,YAAa1hB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAEpB8N,EAAaC,YAAkBxD,EAAQkC,EAAmBT,GAEhE,OACI,oCACI,kBAACqP,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAU,WAAW0O,QAAS+D,EAAU2V,cAAeroB,KAAK45B,mBACzE,kBAAC,GAAD,CAAU5mB,QAAM,EAACnC,OAAQA,EAAQkC,kBAAmBA,EAAmBD,YAAU,IACjF,yBAAK7S,UAAU,kBAAkBmU,IAErC,kBAACqT,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACtB,kBAACojB,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmnB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC0nB,GAAD,OAEJ,kBAACznB,GAAA,EAAD,CAAcC,QAASzP,EAAE,oB,GA3E/B/R,IAAMipC,gBA2F5BH,GAAQj4B,aAAe,CACnB2B,mBAAmB,GAGRkB,qBAAkBo1B,IChG3BI,I,kNACF1qC,MAAQ,CACJmpB,aAAa,EACb1hB,IAAK,EACLF,KAAM,G,EAGVszB,kB,sCAAoB,WAAM12B,GAAN,iBAAAqR,EAAA,qDACZrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAEc,EAAK7F,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,KAEvB5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,SAhBQ,yC,wDAqBpB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,K,EAGjCf,aAAe,SAAAjkB,GACX,EAAKklB,0BAILkhB,EAFqB,EAAK7pC,MAAlB6pC,a,wEAKF,IAAD,EAC0BtpC,KAAKP,MAA5B6S,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQlC,EADd,EACcA,QADd,EAE8B3O,KAAKjB,MAAhCmpB,EAFH,EAEGA,YAAa1hB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAE1B,OACI,oCACI,kBAACqb,GAAA,EAAD,CACIC,QAAM,EACN3hB,UAAU,sBACV0O,QAASA,EACT0Z,cAAeroB,KAAK45B,mBACpB,kBAAC,GAAD,CAAM/oB,OAAQA,KAElB,kBAAC4W,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACtB,kBAACojB,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmnB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC0nB,GAAD,OAEJ,kBAACznB,GAAA,EAAD,CAAcC,QAASzP,EAAE,oB,GA5ErB/R,IAAMipC,gBA2FvBv1B,iBAAkBw1B,IC9BlBC,I,mBAhEX,WAAYjqC,GAAQ,IAAD,8BACf,4CAAMA,KA8BV+yB,qBAAuB,SAAAniB,GAAW,IACtBoiB,EAA+BpiB,EAA/BoiB,WAAYkH,EAAmBtpB,EAAnBspB,eAEpB,EAAKj6B,SAAS,CACV+yB,WAAYA,EACZkH,eAAgBA,KAjCpB,EAAK56B,MAAQ,CACT0zB,WAAY2C,KAASsG,YACrB/B,eAAgB,MALL,E,mFASG/mB,EAAWC,GAAY,IACjChC,EAAW7Q,KAAKP,MAAhBoR,OAER,OAAIgC,EAAU4f,aAAe5hB,GAIzBgC,EAAU8mB,iBAAmB9oB,I,0CAQjCukB,KAAStkB,GAAG,qBAAsB9Q,KAAKwyB,wB,6CAIvC4C,KAASrkB,IAAI,qBAAsB/Q,KAAKwyB,wB,+BAYlC,IAAD,EACuBxyB,KAAKP,MAAzBoR,EADH,EACGA,OAAQlC,EADX,EACWA,QACIg7B,EAAmB3pC,KAAKjB,MAApC0zB,WAEF5P,EAAWxK,YAAgBxH,GAEjC,OACI,kBAAC8Q,GAAA,EAAD,CACIC,QAAM,EACN3hB,UAAWuO,IAAW,oBAAqB,CAAE,gBAAiBqC,IAAW84B,IACzEh7B,QAASA,GACT,yBAAK1O,UAAU,6BACX,kBAAC,GAAD,CAAM4Q,OAAQA,EAAQyO,SAAUuD,EAAW,IAAMA,EAAW,a,GArDlDtiB,IAAMC,Y,iPCK9BopC,G,YACF,WAAYnqC,GAAQ,IAAD,8BACf,4CAAMA,KA8BV+yB,qBAAuB,SAAAniB,GACnB,EAAK3Q,S,uVAAL,IACO2Q,KA9BP,EAAKtR,MAAQ,CACT0zB,WAAY2C,KAASsG,YACrBmO,cAAezU,KAAS0U,gBALb,E,mFASGl3B,EAAWC,GAAY,IAAD,EACV7S,KAAKP,MAA3BoR,EADgC,EAChCA,OAAQmW,EADwB,EACxBA,UAEhB,OAAInU,EAAU4f,aAAe5hB,GAAUgC,EAAUg3B,gBAAkB7iB,GAI/DnU,EAAU8mB,iBAAmB9oB,GAAUgC,EAAUk3B,oBAAsB/iB,I,0CAQ3EoO,KAAStkB,GAAG,qBAAsB9Q,KAAKwyB,wB,6CAIvC4C,KAASrkB,IAAI,qBAAsB/Q,KAAKwyB,wB,+BASlC,IAAD,EACiDxyB,KAAKP,MAAnDoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAWgjB,EADtB,EACsBA,WAAYr7B,EADlC,EACkCA,QAAS2D,EAD3C,EAC2CA,EAC1Cq3B,EAAiB3pC,KAAKjB,MAAM0zB,WAC5BwX,EAAoBjqC,KAAKjB,MAAM8qC,cAC/BhxB,EAAUY,KAAa9O,IAAIkG,EAAQmW,GAEjCkE,EAAmBrS,EAAnBqS,eAEFgG,EAAOgZ,YAAerxB,GACtBwd,EAAa8T,YAAqBtxB,EAASvG,GAC3C83B,EAAiBC,YAAyBxxB,EAASvG,GACnDqH,EAAU2wB,aAAWzxB,EAASvG,IAAM,OACpC6B,EAAWtD,IAAW84B,GAAkB3iB,IAAcijB,EAEtDM,EACFrf,GAAkB8e,EACd,kBAACQ,GAAA,EAAD,CAAUl6B,OAAQ4a,EAAgBlY,QAAM,IAExC,kBAAC,GAAD,CAAUnC,OAAQA,EAAQmC,QAAM,IAGxC,OACI,kBAAC2O,GAAA,EAAD,CAAUC,QAAM,EAAC3hB,UAAWuO,IAAW,gBAAiB,CAAE,gBAAiB2F,IAAaxF,QAASA,GAC7F,yBAAK1O,UAAU,kBACVsqC,EACD,yBAAKtqC,UAAU,wBACX,yBAAKA,UAAU,kBACV+pC,GAAcI,EACX,yBAAKnqC,UAAU,gBAAgBmqC,GAE/B,kBAAC,GAAD,CAAav5B,OAAQA,IAEzB,yBAAK5Q,UAAU,eAAeixB,IAElC,yBAAKjxB,UAAU,mBACX,yBAAKA,UAAU,kBAEP,qCACM+pC,GAAc3T,GACZ,0BAAMp2B,UAAU,yBAAyBo2B,EAAzC,MAEH1c,Y,GA/EdpZ,IAAMC,WAkGlByT,iBAAkB21B,I,OC5FlBa,OAff,YAAmE,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,UAAWh8B,EAAqB,EAArBA,QAASi8B,EAAY,EAAZA,SAClD,OACI,yBAAK3qC,UAAU,kBACX,yBAAKA,UAAWuO,IAAW,uBAAwB,CAAE,iCAAkCm8B,KAAeC,GACrG1hB,QAAQwhB,IAAY,uBAAG/7B,QAASA,GAAU+7B,K,kkBCiBjDG,G,YACF,WAAYprC,GAAQ,IAAD,8BACf,4CAAMA,KAmBVqpB,cAAgB,SAAA5lB,GACZ,KAAIua,KAAaqtB,OAAOz0B,OAAS,KAI7BnT,EAAM6nC,YAIV,OAAQ7nC,EAAMC,KACV,IAAK,SACDD,EAAM2B,iBACN3B,EAAM0B,kBACN1B,EAAMyD,OAAOwD,OAEb,EAAKL,gBAnCE,EA4DnBkhC,oBAAsB,SAAA7J,GAId,IAHJ,IAAM8J,EAAM,GACNrzB,EAAM,IAAInB,IAEHE,EAAI,EAAGA,EAAIwqB,EAAQ9qB,OAAQM,IAAK,CACzC,IAAInX,EAAS2hC,EAAQxqB,IAAMwqB,EAAQxqB,GAAGsB,SACtC,GAAIzY,EACA,IAAK,IAAI0rC,EAAI,EAAGA,EAAI1rC,EAAO6W,OAAQ60B,IAC1BtzB,EAAIhB,IAAIpX,EAAO0rC,MAChBtzB,EAAI0D,IAAI9b,EAAO0rC,GAAI1rC,EAAO0rC,IAC1BD,EAAI1zB,KAAK/X,EAAO0rC,KAUhC,OAJAD,EAAIrlB,KAAK,SAACrR,EAAG+zB,GACT,OAAOC,YAAaf,YAAac,GAAId,YAAajzB,MAG/C02B,GAhFQ,EAmFnBpvB,WAnFmB,sCAmFN,WAAMpQ,GAAN,2EAAA8I,EAAA,wDACT,EAAK42B,UAAY,IAAI/Z,KACrB,EAAK3lB,KAAOA,EACN0/B,EAAY,EAAKA,UACnBj5B,EAAQ,KAIJrB,EAAW,EAAKpR,MAAhBoR,OACAkH,EAAkB,EAAKhZ,MAAvBgZ,cAEHlH,EAXI,wBAYCqG,EAAW,GACXk0B,EAAe/rC,IAAgBC,KAAK,CACtC,QAAS,cACTid,MAAO9Q,EACP6L,MAAO,MAEXJ,EAASK,KAAK6zB,IAERpvB,EAAYlF,GAAcrL,KACfuQ,IAAcvQ,IACrB4/B,EAAoBhsC,IAAgBC,KAAK,CAC3C,QAAS,cACTid,MAAOP,EACP1E,MAAO,MAEXJ,EAASK,KAAK8zB,KAGZpvB,EAAe9F,GAAiB1K,KAClBwQ,IAAiBxQ,IAC3B6/B,EAAuBjsC,IAAgBC,KAAK,CAC9C,QAAS,cACTid,MAAON,EACP3E,MAAO,MAEXJ,EAASK,KAAK+zB,IArCb,UAwCiB3zB,QAAQzC,IAAIgC,EAASU,IAAI,SAAAtW,GAAC,OAAIA,EAAEuW,MAAM,SAAA/I,GAAC,OAAI,UAxC5D,WAwCCqyB,EAxCD,OAyCCoK,EAAQ,EAAKP,oBAAoB7J,GAEnCgK,IAAc,EAAKA,UA3ClB,sDA+CDpzB,IACQzF,EAAM,EAAK7S,MAAX6S,EAEFuJ,EAAapQ,EAAK8a,gBAClBilB,EAAuB,CAAC,iBAAkBl5B,EAAE,iBAAiBiU,gBAG1CklB,KAAK,SAAA9mB,GAAE,OAAIA,EAAG+mB,SAAS7vB,MAC3CG,GAAawvB,EAAqBC,KAAK,SAAA9mB,GAAE,OAAIA,EAAG+mB,SAAS1vB,EAAUuK,mBAEpEglB,EAAMI,OAAO,EAAG,EAAG5zB,EAAc3Y,KAIzC,EAAKM,SAAS,CACV8G,IAAK,KACLolC,cAAe,KACfL,MAAOA,IAGXr5B,EAAQxH,IAAUyH,WAClB+F,YAAiBhG,EAAOq5B,MAGxBM,GADIA,EAAcpgC,EAAKmQ,QACG0R,WAAW,KAAOue,EAAYC,OAAO,GAAKD,GACpDx1B,QAAU01B,MAxErB,wBAyEKC,EAAiB,GAEjBC,EAAgB5sC,IAAgBC,KAAK,CACvC,QAAS,oBACTid,MAAOsvB,IAEXG,EAAez0B,KAAK00B,GAEhBjwB,IAEAkwB,GADIA,EAAmBlwB,EAAUJ,QACG0R,WAAW,KAAO4e,EAAiBJ,OAAO,GAAKI,GAC9D71B,QAAU01B,MAAuBG,IAAqBL,IACjEM,EAAqB9sC,IAAgBC,KAAK,CAC5C,QAAS,oBACTid,MAAO2vB,IAEXF,EAAez0B,KAAK40B,IAzF3B,UA6F2Bx0B,QAAQzC,IAAI82B,EAAep0B,IAAI,SAAAtW,GAAC,OAAIA,EAAEuW,MAAM,SAAA/I,GAAC,OAAI,UA7F5E,WA6FKs9B,EA7FL,OA8FKC,EAAS,EAAKrB,oBAAoBoB,GAEpCjB,IAAc,EAAKA,UAhGtB,mDAoGD,EAAKzrC,SAAS,CACV2sC,WAGJn6B,EAAQxH,IAAUyH,WAClB+F,YAAiBhG,EAAOm6B,GAzGvB,wBA2GD,EAAK3sC,SAAS,CACV2sC,OAAQ,OA5GX,WAiHL/gB,EAAW,IACXza,EAlHK,kCAmHYxR,IAAgBC,KAAK,CAClC,QAAS,qBACT2S,QAASpB,EACT0L,MAAO9Q,EACPyf,eAAgB,EAChBC,gBAAiB,EACjBC,OAAQ,EACR9T,MAAO,GACP8E,OAAQ,OA3HP,QAmHLkP,EAnHK,gDA8HYjsB,IAAgBC,KAAK,CAClC,QAAS,iBACTg7B,UAAW,CAAE,QAAS,gBACtB/d,MAAO9Q,EACP6gC,YAAa,EACbj1B,eAAgB,EAChBk1B,kBAAmB,EACnBj1B,MAAO,KArIN,QA8HLgU,EA9HK,kBAyIT7R,KAAagS,SAASH,EAASA,UAE3BkhB,EAAc,KACb37B,EA5II,4CA8I6BxR,IAAgBC,KAAK,CAC/C,QAAS,qBACT+tB,IAAK5hB,IAhJR,QA8IKghC,EA9IL,OAoJDhzB,KAAagS,SAAS,CAACghB,EAAgB5zB,UAEvC2zB,EAAcC,EAtJb,mDAwJD93B,QAAQi0B,IAAI,mBAAqBn9B,EAAO,yBAAxC,MAxJC,WA8JL0/B,IAAc,EAAKA,UA9Jd,mDA2KT,IAPA,EAAKzrC,SAAS,CACV4rB,WACAkhB,gBAGE10B,EAAQ,IAAIrB,IACZgP,EAAQ,IAAIhP,IACTE,EAAI,EAAGA,EAAI2U,EAASA,SAASjV,OAAQM,IAC1CmB,EAAMwD,IAAIgQ,EAASA,SAAS3U,GAAG1E,QAASqZ,EAASA,SAAS3U,GAAG1E,SACzDqZ,EAASA,SAAS3U,GAAGuU,gBACrBzF,EAAMnK,IAAIgQ,EAASA,SAAS3U,GAAGuU,eAAgBI,EAASA,SAAS3U,GAAGuU,gBAIxEshB,IACQv6B,GADM,EACsBu6B,GAA5Bv6B,QAASiZ,EADJ,EACIA,eAEjBpT,EAAMwD,IAAIrJ,EAASA,GACfiZ,GACAzF,EAAMnK,IAAI4P,EAAgBA,IAIlChZ,EAAQxH,IAAUyH,WAClB+F,YAAiBhG,EAAD,aAAY4F,EAAM40B,SAClChqB,YAAiBxQ,EAAD,aAAYuT,EAAMinB,SA7LzB,yDAnFM,wDAmRnB11B,YAnRmB,qBAmRL,4CAAAzC,EAAA,yDACS,EAAK9U,MAAhBoR,OADE,uBAGN,EAAKnR,SAAS,CACV8G,IAAK,KACLolC,cAAe,KACfL,MAAO,KACPc,OAAQ,KACR/gB,SAAU,KACVkhB,YAAa,OATX,iCAeJG,EAAattC,IAAgBC,KAAK,CACpC,QAAS,cACTstC,SAAU,CAAE,QAAS,wBACrBt1B,MAAO,KACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASI,SAAU,MAGnC40B,EAAuBxtC,IAAgBC,KAAK,CAC9C,QAAS,cACTid,MAAO,GACPjF,MAAO,MACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASI,SAAU,MAGnCT,EAAuBnY,IAAgBC,KAAK,CAC9C,QAAS,oBACTiR,QAASE,IAAUgH,UACnBC,OAAO,IACRG,MAAM,SAAAjD,MAnCC,SAqCwC+C,QAAQzC,IAAI,CAC1Dy3B,EACAE,EACAr1B,IAxCM,mCAqCHhR,EArCG,KAqCEolC,EArCF,KAqCiB7zB,EArCjB,KA2CV,EAAKrY,SAAS,CACV8G,MACAolC,gBACA7zB,gBACAwzB,MAAO,KACPc,OAAQ,KACR/gB,SAAU,KACVkhB,YAAa,OAGXt6B,EAAQxH,IAAUyH,WACxB+F,YAAiBhG,EAAO1L,EAAIyR,UAC5BC,YAAiBhG,EAAO05B,EAAc3zB,UAvD5B,0CAnRK,EA6UnB60B,yBAA2B,SAAA5pC,GACvBA,EAAM0B,kBAENvF,IAAgBC,KAAK,CACjB,QAAS,4BAGb,EAAKI,SAAS,CAAEksC,cAAe,QApVhB,EAuVnBmB,oBAAsB,SAACl8B,EAAQmW,EAAWgmB,EAAaC,GAAc,IACzDC,EAAoB,EAAKztC,MAAzBytC,gBAEJF,GACA3tC,IAAgBC,KAAK,CACjB,QAAS,uBACT2S,QAASpB,IAIjBq8B,EAAgBr8B,EAAQmW,EAAWimB,IAjWpB,EAoWnBthB,aAAe,WACX,IAAM9H,EAAO,EAAK+H,QAAQ1R,QAEtB2J,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,MAC1D,EAAKshB,kBAxWM,EA4WnBC,UAAY,SAAA9hB,GACR,IAAMjV,EAASiV,EAAWA,EAASA,SAASjV,OAAS,EAMrD,MAAO,CACHi2B,YALej2B,EAAS,EAAIiV,EAASA,SAASjV,EAAS,GAAG6a,KAAO,EAMjE7Z,eALiBhB,EAAS,EAAIiV,EAASA,SAASjV,EAAS,GAAGpE,QAAU,EAMtEs6B,kBALoBl2B,EAAS,EAAIiV,EAASA,SAASjV,EAAS,GAAGjX,GAAK,IAjXzD,EA0XnBiuC,eAAiB,SAAC/hB,EAAU9rB,GACxB,OAAKA,GACAA,EAAO8rB,SAASjV,OAEhBiV,GACAA,EAASA,SAASjV,OAEhB,CACHkV,YAAa/rB,EAAO+rB,YACpBD,SAAUA,EAASA,SAASnP,OAAO3c,EAAO8rB,WALxB9rB,EAHF8rB,GA3XL,EAuYnB6hB,eAvYmB,qBAuYF,4CAAA54B,EAAA,yDACT,EAAKqW,QADI,oDAGL/Z,EAAW,EAAKpR,MAAhBoR,OAEFs6B,EAAY,EAAKA,UAEf7f,EAAa,EAAKvsB,MAAlBusB,SAEFF,EAAS,EAAKgiB,UAAU9hB,GAE9B,EAAKV,SAAU,EACXprB,EAAS,IACTqR,EAbS,kCAcMxR,IAAgBC,KAAK,CAChC,QAAS,qBACT2S,QAASpB,EACT0L,MAAO,EAAK9Q,KACZyf,eAAgB,EAChBC,gBAAiBC,EAAOmhB,kBACxBj1B,MAAO,GACP8E,OAAQ,OArBH,QAcT5c,EAdS,gDAwBMH,IAAgBC,KAAhB,IACX,QAAS,iBACTg7B,UAAW,CAAE,QAAS,gBACtB/d,MAAO,EAAK9Q,MACT2f,EAJQ,CAKX9T,MAAO,MA7BF,QAwBT9X,EAxBS,kBAgCb,EAAKorB,SAAU,EAEf0iB,aAAwB9tC,EAAQ8rB,EAAWA,EAASA,SAAW,IAC/D7R,KAAagS,SAASjsB,EAAO8rB,UAEzB6f,IAAc,EAAKA,UArCV,mDA+Cb,IANA,EAAKzrC,SAAS,CACV4rB,SAAU,EAAK+hB,eAAe/hB,EAAU9rB,KAGtCsY,EAAQ,IAAIrB,IACZgP,EAAQ,IAAIhP,IACTE,EAAI,EAAGA,EAAInX,EAAO8rB,SAASjV,OAAQM,IACxCmB,EAAMwD,IAAI9b,EAAO8rB,SAAS3U,GAAG1E,QAASzS,EAAO8rB,SAAS3U,GAAG1E,SACrDzS,EAAO8rB,SAAS3U,GAAGuU,gBACnBzF,EAAMnK,IAAI9b,EAAO8rB,SAAS3U,GAAGuU,eAAgB1rB,EAAO8rB,SAAS3U,GAAGuU,gBAIlEhZ,EAAQxH,IAAUyH,WACxB+F,YAAiBhG,EAAD,aAAY4F,EAAM40B,SAClChqB,YAAiBxQ,EAAD,aAAYuT,EAAMinB,SAxDrB,0CAvYE,EAkcnBa,qBAAuB,SAAArqC,GACnBA,EAAM0B,mBAncS,EAscnBkF,YAAc,YAGV6T,EAFoB,EAAKle,MAAjBke,YAvcO,EA4cnB6vB,8BA5cmB,sCA4ca,WAAM38B,GAAN,eAAA0D,EAAA,wDACvB1D,EADuB,iEAGtBxR,IAAgBC,KAAK,CACvB,QAAS,0BACT2S,QAASpB,IALe,UAQpB+6B,EAAkB,EAAK7sC,MAAvB6sC,cARoB,iDAW5B,EAAKlsC,SAAS,CACVksC,cAAc,MAAMA,EAAP,CAAsB3zB,SAAU2zB,EAAc3zB,SAASmE,OAAO,SAAA9a,GAAC,OAAIA,IAAMuP,QAZ9D,yCA5cb,wDA4dnB48B,oBA5dmB,sCA4dG,WAAM58B,GAAN,eAAA0D,EAAA,wDACb1D,EADa,iEAGZxR,IAAgBC,KAAK,CACvB,QAAS,gBACT2S,QAASpB,EACT+7B,SAAU,CACN,QAAS,0BAPC,UAWVpmC,EAAQ,EAAKzH,MAAbyH,IAXU,iDAclB,EAAK9G,SAAS,CACV8G,IAAI,MAAMA,EAAP,CAAYyR,SAAUzR,EAAIyR,SAASmE,OAAO,SAAA9a,GAAC,OAAIA,IAAMuP,QAf1C,yCA5dH,sDAGf,EAAK9K,gBAAkB,IAAIoF,IAAgB,EAAK2d,eAChD,EAAK8C,QAAUrrB,IAAM4c,YACrB,EAAKpe,MAAQ,GALE,E,iFAQE,IACT0M,EAASzL,KAAKP,MAAdgM,KAERzL,KAAK0tC,oBAAoBjiC,GAEzB5F,IAAgBC,IAAI9F,KAAK+F,mB,6CAIzBF,IAAgBG,OAAOhG,KAAK+F,mB,yCAuBblG,EAAWC,EAAWC,GAAW,IAAD,EACtBC,KAAKP,MAAtBoR,EADuC,EACvCA,OAAQpF,EAD+B,EAC/BA,KAEZ5L,EAAU4L,OAASA,EACnBzL,KAAK0tC,oBAAoBjiC,GAClB5L,EAAUgR,SAAWA,GAC5B7Q,KAAK0tC,oBAAoBjiC,K,0CAIbA,GAChB,IAAMogC,EAAcpgC,EAAOA,EAAKmQ,OAAS,GAEpCiwB,EAGD7rC,KAAK6b,WAAWgwB,GAFhB7rC,KAAKgX,gB,+BAybH,IAAD,SACiBhX,KAAKP,MAAnBoR,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAEgEtS,KAAKjB,MAAlEyH,EAFH,EAEGA,IAAKolC,EAFR,EAEQA,cAAeL,EAFvB,EAEuBA,MAAOc,EAF9B,EAE8BA,OAAQ/gB,EAFtC,EAEsCA,SAAUkhB,EAFhD,EAEgDA,YAE/C96B,EAAOC,IAAUhH,IAAIkG,GAErB88B,EACFnnC,GAAOA,EAAIyR,SACLzR,EAAIyR,SAASL,IAAI,SAAAtW,GAAC,OACd,kBAAC,GAAD,CACI6B,IAAK7B,EACLuP,OAAQvP,EACRoR,SAAU,kBAAM,EAAKq6B,oBAAoBzrC,EAAG,MAAM,GAAO,IACzDgoC,SAAU,kBAAM,EAAKmE,oBAAoBnsC,QAGjD,GAEJssC,EACFhC,GAAiBA,EAAc3zB,SACzB2zB,EAAc3zB,SAASL,IAAI,SAAAtW,GAAC,OACxB,kBAAC,GAAD,CACI6B,IAAK7B,EACLuP,OAAQvP,EACRqN,QAAS,kBAAM,EAAKo+B,oBAAoBzrC,EAAG,MAAM,GAAM,IACvDgoC,SAAU,kBAAM,EAAKkE,8BAA8BlsC,QAG3D,GAEJusC,EAAatC,EACbA,EAAM3zB,IAAI,SAAAtW,GAAC,OACP,kBAAC,GAAD,CACI6B,IAAK7B,EACLuP,OAAQvP,EACRqN,QAAS,kBAAM,EAAKo+B,oBAAoBzrC,EAAG,MAAM,GAAM,QAG/D,GAEAwsC,EAAiB,IAAIr3B,IACrBs3B,EAAc1B,EACdA,EAAOz0B,IAAI,SAAAtW,GAGP,OAFAwsC,EAAexyB,IAAIha,EAAGA,GAGlB,kBAAC,GAAD,CACI6B,IAAK7B,EACLuP,OAAQvP,EACRqN,QAAS,kBAAM,EAAKo+B,oBAAoBzrC,EAAG,MAAM,GAAM,QAInE,GAEA0sC,EACFxB,GAAeA,EAAYv6B,UAAYu6B,EAAY3zB,UAAYi1B,EAAel3B,IAAI41B,EAAYv6B,SAC1F,kBAAC,GAAD,CACI9O,IAAKqpC,EAAYv6B,QACjBpB,OAAQ27B,EAAYv6B,QACpBtD,QAAS,kBAAM,EAAKo+B,oBAAoBP,EAAYv6B,QAAS,MAAM,GAAM,MAE7E,KAEFg8B,EAAoB,IAAIx3B,IACxBy3B,EACF5iB,GAAYA,EAASA,SACfA,EAASA,SAAS1T,IAAI,SAAAtW,GAClB,IAAM6B,EAAG,UAAM7B,EAAE2Q,QAAR,YAAmB3Q,EAAElC,IAG9B,OAFA6uC,EAAkB3yB,IAAInY,EAAKA,GAGvB,kBAAC,GAAD,CACIA,IAAKA,EACL0N,OAAQvP,EAAE2Q,QACV+U,UAAW1lB,EAAElC,GACb4qC,WAAY9gB,QAAQrY,GACpBlC,QAAS,kBAAM,EAAKo+B,oBAAoBzrC,EAAE2Q,QAAS3Q,EAAElC,IAAI,GAAO,QAI5E,GAEJ+uC,EACF3B,GACAA,EAAY3zB,UACXo1B,EAAkBr3B,IAAlB,UAAyB41B,EAAY3zB,QAAQ5G,QAA7C,YAAwDu6B,EAAY3zB,QAAQzZ,KACzE,kBAAC,GAAD,CACI+D,IAAG,UAAKqpC,EAAY3zB,QAAQ5G,QAAzB,YAAoCu6B,EAAY3zB,QAAQzZ,IAC3DyR,OAAQ27B,EAAY3zB,QAAQ5G,QAC5B+U,UAAWwlB,EAAY3zB,QAAQzZ,GAC/B4qC,YAAY,EACZr7B,QAAS,kBACL,EAAKo+B,oBAAoBP,EAAY3zB,QAAQ5G,QAASu6B,EAAY3zB,QAAQzZ,IAAI,GAAO,MAG7F,KAEJgvC,EAAQ9iB,EAAWA,EAASC,YAAc,EAE1CihB,GACAA,EAAY3zB,UACXo1B,EAAkBr3B,IAAlB,UAAyB41B,EAAY3zB,QAAQ5G,QAA7C,YAAwDu6B,EAAY3zB,QAAQzZ,MAE7EgvC,IAGJ,IAAIC,EAAkB/7B,EAAE,cAKxB,OAJI87B,IACAC,EAA4B,IAAVD,EAAc,kBAAd,gBAA2CA,EAA3C,cAIlB,yBAAKtwB,IAAK9d,KAAK4rB,QAAS3rB,UAAU,SAAS0sB,SAAU3sB,KAAK2rB,cACrDja,GACG,oCACI,yBAAKzR,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,qBAClB,yBAAKrS,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAM4Q,OAAQA,EAAQyP,YAAY,KAEtC,kBAACjH,EAAA,EAAD,CACIpZ,UAAU,sBACVqZ,aAAW,SACX7K,YAAazO,KAAK8J,aAClB,kBAACiF,EAAA,EAAD,SAIZ,yBAAK9O,UAAU,kCAGtB0tC,EAASt3B,OAAS,GACf,oCACI,yBAAKpW,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,cAClB,yBAAKrS,UAAU,wBAAwB0sB,SAAU3sB,KAAKutC,sBAClD,yBAAKttC,UAAU,iCACd0tC,EACD,yBAAK1tC,UAAU,mCAGvB,yBAAKA,UAAU,kCAGtB2tC,EAAmBv3B,OAAS,GACzB,yBAAKpW,UAAU,wBACX,kBAAC,GAAD,CAAeyqC,QAASp4B,EAAE,eAAgB3D,QAAS3O,KAAK8sC,0BACnDx6B,EAAE,WAENs7B,GAGRC,EAAWx3B,OAAS,GACjB,oCACI,yBAAKpW,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,qBACjBu7B,GAEL,yBAAK5tC,UAAU,kCAGtB8tC,EAAY13B,OAAS,GAClB,oCACI,yBAAKpW,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,iBACjB07B,EACAD,GAEL,yBAAK9tC,UAAU,mCAGrBqrB,GAAakhB,GAAeA,EAAY3zB,UACtC,yBAAK5Y,UAAU,wBACX,kBAAC,GAAD,KAAgBouC,GACfF,EACAD,Q,GAjqBJ3tC,IAAMC,WAgrBZyT,iBAAkB42B,I,UCxoBlByD,I,mBA1DX,WAAY7uC,GAAQ,IAAD,8BACf,4CAAMA,KAKVqpB,cAAgB,SAAA5lB,GACZ,KAAIua,KAAaqtB,OAAOz0B,OAAS,KAI7BnT,EAAM6nC,YAIV,OAAQ7nC,EAAMC,KACV,IAAK,SAAL,IACYwa,EAAY,EAAKle,MAAjBke,QACJA,IACAza,EAAM2B,iBACN3B,EAAM0B,kBACN1B,EAAMyD,OAAOwD,OAEbwT,OApBZ,EAAK5X,gBAAkB,IAAIoF,IAAgB,EAAK2d,eAHjC,E,gFA6BAjpB,EAAWC,EAAWC,GAAW,IACxCwd,EAASvd,KAAKP,MAAd8d,KAEJ1d,EAAU0d,OAASA,IACfA,EACA1X,IAAgBC,IAAI9F,KAAK+F,iBAEzBF,IAAgBG,OAAOhG,KAAK+F,oB,+BAK9B,IAAD,EACwC/F,KAAKP,MAA1CmrC,EADH,EACGA,SAAUrtB,EADb,EACaA,KAAMmlB,EADnB,EACmBA,QAAS/kB,EAD5B,EAC4BA,QAEjC,OACI,kBAAC4wB,GAAA,EAAD,CAAOC,UAAU,QAAQC,GAAIlxB,EAAMmlB,QAASA,EAASgM,cAAY,EAACC,eAAa,GAC3E,yBAAK1uC,UAAU,gBAAgB0d,EAAUpd,IAAMquC,aAAahE,EAAU,CAAEjtB,YAAaitB,Q,GA/C3ErqC,IAAMC,YCLjB+B,eACX,0BAAMC,EAAE,yrCACR,UCFWD,eACX,0BAAMC,EAAE,kiBACR,QCFWD,eACX,0BAAMC,EAAE,ssFACR,UCFWD,eACX,0BAAMC,EAAE,sbACR,Q,oBCSEqsC,G,2MACF9vC,MAAQ,CACJ2iC,SAAU,KACVnkB,MAAM,G,EAGVikB,eAAiB,SAAAt+B,GACb,EAAKxD,SAAS,CAAEgiC,SAAUx+B,EAAMy+B,iB,EAGpCC,gBAAkB,WACd,EAAKliC,SAAS,CAAEgiC,SAAU,Q,EAG9BoN,aAAe,WACX,EAAKlN,kBAEL,EAAKliC,SAAS,CAAE6d,MAAM,K,EAG1BwxB,WAAa,WACT,EAAKjlC,cACLzK,IAAgB2vC,U,EAGpBllC,YAAc,WACV,EAAKpK,SAAS,CAAE6d,MAAM,K,wEAGhB,IACEjL,EAAMtS,KAAKP,MAAX6S,EADH,EAEsBtS,KAAKjB,MAAxB2iC,EAFH,EAEGA,SAAUnkB,EAFb,EAEaA,KAElB,OACI,oCACI,kBAAClE,EAAA,EAAD,CACIgqB,YAAW3B,EAAW,cAAgB,KACtC4B,gBAAc,OACdrjC,UAAU,sBACVqZ,aAAW,OACX3K,QAAS3O,KAAKwhC,gBACd,kBAACyN,GAAD,OAEJ,kBAACpM,GAAA,EAAD,CACIzjC,GAAG,YACHsiC,SAAUA,EACVnkB,KAAM2L,QAAQwY,GACd/jB,QAAS3d,KAAK4hC,gBACdkB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK8uC,cACpB,kBAACjtB,GAAA,EAAD,KACI,kBAACqtB,GAAD,OAEJ,kBAACptB,GAAA,EAAD,CAAcC,QAASzP,EAAE,cAGjC,kBAAC,IAAD,CACIkL,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS3d,KAAK8J,YACd8T,kBAAgB,qBAChB,kBAAC,IAAD,CAAaxe,GAAG,qBAAqBkT,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,CAAmB9oC,MAAO,CAAEgP,WAAY,aACnC/C,EAAE,sBAGX,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK8J,YAAayP,MAAM,WACpCjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAK+uC,WAAYx1B,MAAM,WACnCjH,EAAE,c,GAnFE/R,IAAMC,WA8FxByT,iBAAkB46B,ICzGlBtsC,eACX,0BAAMC,EAAE,8yBACR,QCFWD,eACX,0BAAMC,EAAE,q7DACR,YCiBE4sC,I,kNAEF9rB,iBAAmB,WAAO,IACdzS,EAAW,EAAKpR,MAAhBoR,OAEFa,EAAOC,IAAUhH,IAAIkG,GACtBa,GACAA,EAAKE,OAEV2R,aAA6B,CAAE1S,Y,wEAGzB,IAAD,EAYD7Q,KAAKP,MAVLoR,EAFC,EAEDA,OACA2R,EAHC,EAGDA,MACAlQ,EAJC,EAIDA,EACAqL,EALC,EAKDA,QACA0xB,EANC,EAMDA,cACAC,EAPC,EAODA,UACAC,EARC,EAQDA,gBACAC,EATC,EASDA,kBACAC,EAVC,EAUDA,WACAC,EAXC,EAWDA,UAEEh+B,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KAdb,IAgBGE,EAAUF,EAAVE,MAER,OACI,oCACI,yBAAK3R,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAC9C6E,EAAQ,kBAACzT,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK9O,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,cAE/C,kBAAC,GAAD,OAEJ,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACI4Q,OAAQA,EACRoC,KAAK,EACLqN,YAAY,EACZvN,mBAAmB,EACnBsN,aAAczO,EAAQ5R,KAAKsjB,iBAAmB,QAGtD,kBAAC3B,GAAA,EAAD,CAAU1hB,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS0gC,GACrD,kBAACxtB,GAAA,EAAD,KACI,kBAAC8tB,GAAD,OAEJ,kBAAC7tB,GAAA,EAAD,CAAcC,QAASzP,EAAE,kBAE7B,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS2gC,GACrD,kBAACztB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,sBAE7B,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS4gC,GACrD,kBAAC1tB,GAAA,EAAD,KACI,kBAACia,GAAD,OAEJ,kBAACha,GAAA,EAAD,CAAcC,QAASzP,EAAE,oBAE7B,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS6gC,GACrD,kBAAC3tB,GAAA,EAAD,KACI,kBAAC+tB,GAAD,OAEJ,kBAAC9tB,GAAA,EAAD,CAAcC,QAASzP,EAAE,sBAE7B,kBAACqP,GAAA,EAAD,CAAUtD,WAAW,EAAOpe,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS+gC,GACvE,kBAAC7tB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,cAE7B,kBAACqP,GAAA,EAAD,CAAUtD,WAAW,EAAOpe,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS8gC,GACvE,kBAAC5tB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,qB,GArF9B/R,IAAMC,YAyGVyT,iBAAkBm7B,I,yCC5HlB7sC,eACX,0BAAMC,EAAE,u+DACR,Y,UCUEqtC,I,0BACF,WAAYpwC,GAAQ,IAAD,uBACf,4CAAMA,KAaVqwC,aAAe,WACX,EAAKpwC,SAAS,CACV6d,MAAM,KAhBK,EAoBnBwxB,WAAa,WACT,IAAMgB,EAAU,EAAKC,WAAW91B,QAC3B61B,IAELA,EAAQE,mBAAmBC,OAAO,SAAA7P,GAC9B,IAAM8P,EAAUziB,IAAI0iB,gBAAgB/P,GAEpC,EAAK3gC,SAAS,CACV2gC,OACA8P,YALkC,IAQ9BE,EAAa,EAAK5wC,MAAlB4wC,SACHA,GAELA,EAAShQ,EAAM8P,IAChB,cAEH,EAAKL,iBAtCU,EAyCnBQ,aAAe,WACX,EAAKC,eAAer2B,QAAQs2B,SA1Cb,EA6CnBC,qBA7CmB,qBA6CI,0CAAAl8B,EAAA,wDAEE,KADbgrB,EAAU,EAAKgR,eAAer2B,QAA9BqlB,OACElpB,OAFS,oDAIE,IAAjBkpB,EAAMlpB,OAJS,sBAKW4yB,MAAMjnC,KAAKu9B,GALtB,kBAKP90B,EALO,gBAMVA,EANU,iEAQeimC,YAAcjmC,GAR7B,mCAQRyE,EARQ,KAQDgC,EARC,KAUf,EAAKxR,SAAS,CACV6d,MAAM,EACN9S,OACAkmC,QAASjjB,IAAI0iB,gBAAgB3lC,GAC7ByE,QACAgC,WAfW,QAmBnB,EAAKq/B,eAAer2B,QAAQ9Q,MAAQ,GAnBjB,0CA1CnB,EAAKmnC,eAAiBhwC,IAAM4c,YAC5B,EAAK6yB,WAAazvC,IAAM4c,YAJT,IAMPyzB,EAAe,EAAKnxC,MAApBmxC,WANO,OAQf,EAAK7xC,MAAQ,CACToxC,QAASS,EACTrzB,MAAM,GAVK,E,sEAmET,IACEjL,EAAMtS,KAAKP,MAAX6S,EADH,EAE6CtS,KAAKjB,MAA/Cwe,EAFH,EAEGA,KAAMrO,EAFT,EAESA,MAAOgC,EAFhB,EAEgBA,OAAQy/B,EAFxB,EAEwBA,QAASR,EAFjC,EAEiCA,QAFjC,EAI0CU,YAAW,CAAE3hC,QAAOgC,UAAU,KAAK,GAAnE4/B,EAJV,EAIG5hC,MAAyB6hC,EAJ5B,EAIoB7/B,OAEzB,OACI,oCACI,yBAAKjR,UAAU,kBACTkwC,EACE,yBAAKlwC,UAAU,8BAA8B6T,IAAI,GAAGjC,IAAKs+B,EAASxhC,QAAS3O,KAAKswC,eAEhF,yBAAKrwC,UAAU,oDAAoD0O,QAAS3O,KAAKswC,cAC7E,kBAACU,GAAD,CAAc/wC,UAAU,0BAIpC,2BACI6d,IAAK9d,KAAKuwC,eACVtwC,UAAU,yBACV6e,KAAK,OACLmyB,UAAU,EACVC,OAAO,UACPvhC,SAAU3P,KAAKywC,uBAEjBlzB,GACE,kBAAC,IAAD,CACIG,mBAAoB,EACpBH,MAAM,EACNI,QAAS3d,KAAK8vC,aACdlyB,kBAAgB,gBAChB,yBAAK3d,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAAS3O,KAAK8vC,cACrD,kBAAC/gC,EAAA,EAAD,OAEJ,yBAAK9O,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,uBAGnD,kBAAC,KAAD,KACI,kBAAC,KAAD,CACIwL,IAAK9d,KAAKgwC,WACVn+B,IAAK8+B,EACLtqC,MAAO,CAAE6K,OAAQ6/B,EAAW7hC,MAAO4hC,EAAUK,OAAQ,eAErDC,YAAa,EACbC,SAAU,EACVC,QAAQ,KAEhB,yBAAKrxC,UAAU,8BAA8B0O,QAAS3O,KAAK+uC,YACvD,kBAACwC,GAAA,EAAD,a,GAtHDhxC,IAAMC,YAqIlByT,iBAAkB47B,ICnI3B2B,I,mBACF,WAAY/xC,GAAQ,IAAD,uBACf,4CAAMA,KAuEVgyC,qBAxEmB,qBAwEI,oCAAAl9B,EAAA,wDACX1D,EAAW,EAAKpR,MAAhBoR,OACAgS,EAAa,EAAK9jB,MAAlB8jB,UACJ6uB,EAAc,EAAKC,YAAYz3B,QAAQ9Q,OAC3BkkB,WAAW,MAAQokB,EAAYr7B,OAAS,IACpDq7B,EAAcA,EAAY5F,OAAO,IAEjCjpB,IAAa6uB,GAA+B,KAAhBA,EAPb,gBAQf,EAAKhyC,SAAS,CACVkyC,cAAe,OATJ,wCAeMvyC,IAAgBC,KAAK,CACtC,QAAS,oBACT2S,QAASpB,EACTgS,SAAU6uB,IAlBC,QAeTlyC,EAfS,QAuBXqyC,EAAe,EAAKF,YAAYz3B,QAAQ9Q,OAC3BkkB,WAAW,MAAQukB,EAAax7B,OAAS,IACtDw7B,EAAeA,EAAa/F,OAAO,IAEnC+F,IAAiBH,GACjB,EAAKhyC,SAAS,CACVkyC,cAAepyC,IA7BR,0CAxEJ,EA2GnBsyC,kBA3GmB,sCA2GC,WAAM5hB,GAAN,iBAAA3b,EAAA,4DACR1D,EAAW,EAAKpR,MAAhBoR,OADQ,SAGVxR,IAAgBC,KAAK,CACvB,QAAS,kBACTsS,MAAO,CAAE,QAAS,gBAAiBmgC,KAAM,oBAAqB7hB,UALlD,OAQVhe,EAAQxH,IAAUyH,WACxBC,YAAgBF,EAAOrB,GAAQ,GATf,yCA3GD,sDAGf,EAAKmhC,aAAezxC,IAAM4c,YAC1B,EAAK80B,YAAc1xC,IAAM4c,YACzB,EAAK+0B,OAAS3xC,IAAM4c,YACpB,EAAKw0B,YAAcpxC,IAAM4c,YAEzB,IAAM3M,EAAOC,IAAU9F,IAAI8F,IAAUgH,WAC/B06B,EAAe1hC,IAAUyO,YAAYzO,IAAUgH,WATtC,OAWf,EAAK1Y,MAAQ,CACTqzC,UAAW5hC,EAAOA,EAAK6hC,WAAa,GACpCC,SAAU9hC,EAAOA,EAAK+hC,UAAY,GAClCntB,IAAK+sB,EAAeA,EAAa/sB,IAAM,GACvCvC,SAAUrS,EAAOA,EAAKqS,SAAW,GACjC+uB,cAAe,MAhBJ,E,oFAqBf5xC,KAAKwyC,UACLxyC,KAAKyyC,SACLzyC,KAAK0yC,gB,oCAGM,IAAD,EAC0B1yC,KAAKjB,MAAjC8jB,EADE,EACFA,SAAU+uB,EADR,EACQA,cACdF,EAAc1xC,KAAK2xC,YAAYz3B,QAAQ9Q,MACvCsoC,EAAYpkB,WAAW,MAAQokB,EAAYr7B,OAAS,IACpDq7B,EAAcA,EAAY5F,OAAO,IAGjCjpB,IAAa6uB,GACZE,GAC0B,8BAA3BA,EAAc,UAElBvyC,IAAgBC,KAAK,CACjB,QAAS,cACTujB,SAAU6uB,M,gCAIP,IAAD,EAC0B1xC,KAAKjB,MAA7BqzC,EADF,EACEA,UAAWE,EADb,EACaA,SACbK,EAAe3yC,KAAKgyC,aAAa93B,QAAQ9Q,MACzCwpC,EAAc5yC,KAAKiyC,YAAY/3B,QAAQ9Q,MAEzCupC,IAAiBP,GAAaQ,IAAgBN,GAIlDjzC,IAAgBC,KAAK,CACjB,QAAS,UACT+yC,WAAYM,EACZJ,UAAWK,M,+BAIT,IACExtB,EAAQplB,KAAKjB,MAAbqmB,IACFytB,EAAS7yC,KAAKkyC,OAAOh4B,QAAQ9Q,MAC/BypC,IAAWztB,GAIf/lB,IAAgBC,KAAK,CACjB,QAAS,SACT8lB,IAAKytB,M,+BAmDH,IAAD,EACwB7yC,KAAKP,MAA5BoR,EADD,EACCA,OAAQyB,EADT,EACSA,EAAGqL,EADZ,EACYA,QADZ,EAEyD3d,KAAKjB,MAA3DqzC,EAFH,EAEGA,UAAWE,EAFd,EAEcA,SAAUltB,EAFxB,EAEwBA,IAAKvC,EAF7B,EAE6BA,SAAU+uB,EAFvC,EAEuCA,cAExCkB,GAAW,EACXC,EAAgBzgC,EAAE,YACtB,GAAIs/B,EACA,OAAQA,EAAc,UAClB,IAAK,4BACDkB,GAAW,EACXC,EAAgB,wBAChB,MAEJ,IAAK,4CACL,IAAK,iDACL,IAAK,yCACDD,GAAW,EACXC,EAAgB,mBAChB,MAEJ,IAAK,0CACDD,GAAW,EACXC,EAAgB,4BAM5B,IAAMrhC,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KA7Bb,IA+BGE,EAAUF,EAAVE,MAEFC,EAAMC,YAAOF,EAAQA,EAAMG,MAAQ,MACnCuI,EAAW,GACX7O,EAAOunC,aAAsB1gC,EAAE,gBAAiBgI,GAChD24B,EAAgB/sB,aAAiB,CAAE,QAAS,gBAAiBza,OAAM6O,aAEzE,OACI,oCACI,yBAAKra,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,kBAGnD,yBAAKrS,UAAU,wBACX,kBAAC,GAAD,CAAc2wC,WAAY/+B,EAAKw+B,SAAUrwC,KAAK8xC,oBAC9C,yBAAK7xC,UAAU,qBACX,kBAACizC,GAAA,EAAD,CACIvP,SAAU3jC,KAAKgyC,aACf/xC,UAAU,qBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOld,EAAE,aACT6gC,aAAcf,IAElB,kBAACc,GAAA,EAAD,CACIvP,SAAU3jC,KAAKiyC,YACfhyC,UAAU,qBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOld,EAAE,YACT6gC,aAAcb,IAElB,kBAACY,GAAA,EAAD,CACIvP,SAAU3jC,KAAKkyC,OACfjyC,UAAU,qBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOld,EAAE,OACT6gC,aAAc/tB,IAElB,yBAAKnlB,UAAU,qBAAqBqS,EAAE,cAE1C,yBAAKrS,UAAU,iCACf,yBAAKA,UAAU,yBACX,kBAACizC,GAAA,EAAD,CACIvP,SAAU3jC,KAAK2xC,YACf/8B,MAAOk+B,EACP7yC,UAAU,qBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOujB,EACPI,aAActwB,EACdlT,SAAU3P,KAAKyxC,uBAEnB,yBAAKxxC,UAAU,qBACVgzC,U,GAlNH1yC,IAAMC,YAqOjB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQkzB,ICnPRjvC,eACX,0BAAMi0B,KAAK,eAAeC,SAAS,UAAUj0B,EAAE,0nBAC/C,OCFWD,eACX,0BAAMk0B,SAAS,UAAUj0B,EAAE,qgCAC3B,cCFWD,eACX,0BAAMk0B,SAAS,UAAUj0B,EAAE,otDAC3B,eCFWD,eACX,0BAAMk0B,SAAS,UAAUj0B,EAAE,wmEAC3B,YCFWD,eACX,0BAAMk0B,SAAS,UAAUj0B,EAAE,0zCAC3B,cCFWD,eACX,0BAAMk0B,SAAS,UAAUj0B,EAAE,q0CAC3B,aCFWD,eACX,0BAAMk0B,SAAS,UAAUj0B,EAAE,kgEAC3B,Q,qBCDWD,eACX,0BAAMC,EAAE,+bACR,Q,UCUE4wC,I,kNAEFr0C,MAAQ,CACJmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,EACL6b,SAAS,G,EAGb8F,sBAAwB,SAAAjlB,GACC,EAAKzD,MAAlB6pC,WAGJpmC,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAGV,EAAKlF,SAAS,CACVwoB,aAAa,EACb5hB,KAAMpD,EAAM4F,QACZtC,IAAKtD,EAAM6F,Y,EAInBqf,uBAAyB,WACrB,EAAK1oB,SAAS,CACVwoB,aAAa,EACb5hB,KAAM,EACNE,IAAK,K,EAIb2gB,aAAe,WACX,EAAKiB,yBADY,MAGY,EAAK3oB,MAA1BoR,EAHS,EAGTA,OAAQy4B,EAHC,EAGDA,SAEhBA,GAAYA,EAASz4B,I,wEAGf,IAAD,EACyC7Q,KAAKP,MAA3CoR,EADH,EACGA,OAAQyB,EADX,EACWA,EAAGwM,EADd,EACcA,KAAMuD,EADpB,EACoBA,QAAS1T,EAD7B,EAC6BA,QAD7B,EAE8B3O,KAAKjB,MAAhCmpB,EAFH,EAEGA,YAAa5hB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBoY,EAAQ9B,YAAajM,GAAQ,EAAMyB,GAEzC,OACI,oCACI,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,sBAAsBozC,UAAMC,EAAW1xB,QAAM,EAACjT,QAASA,EAAS0Z,cAAeroB,KAAKmoB,uBACpG,yBAAKloB,UAAU,oBACX,kBAAC,GAAD,CAAU4Q,OAAQA,EAAQkB,OAAO,EAAMgB,mBAAmB,KAE9D,yBAAK9S,UAAU,uBACX,yBAAKA,UAAU,qBACV2e,GAEHE,GACE,yBAAK7e,UAAU,wBACVszC,YAAY1iC,EAAQyB,UAInBghC,IAAZjxB,GACE,kBAACmxB,GAAA,EAAD,CAAOvzC,UAAU,uBAAuBsZ,MAAM,UAAU8I,QAASA,KAGzE,kBAACoF,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACtB,kBAACojB,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmnB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC0nB,GAAD,OAEJ,kBAACznB,GAAA,EAAD,CAAcC,QAASzP,EAAE,oB,GAtF5B/R,IAAMC,YAuGhByT,iBAAkBm/B,ICvG3BK,I,kNAEF10C,MAAQ,CACJmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,G,EAGT2hB,sBAAwB,SAAAjlB,GACC,EAAKzD,MAAlB6pC,WAGJpmC,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAGV,EAAKlF,SAAS,CACVwoB,aAAa,EACb5hB,KAAMpD,EAAM4F,QACZtC,IAAKtD,EAAM6F,Y,EAInBqf,uBAAyB,WACrB,EAAK1oB,SAAS,CACVwoB,aAAa,EACb5hB,KAAM,EACNE,IAAK,K,EAIb2gB,aAAe,WACX,EAAKiB,yBADY,IAGTkhB,EAAa,EAAK7pC,MAAlB6pC,SAERA,GAAYA,K,wEAGN,IAAD,EACkDtpC,KAAKP,MAApD6S,EADH,EACGA,EAAGrS,EADN,EACMA,UAAWmpB,EADjB,EACiBA,KAAM3d,EADvB,EACuBA,KAAM4W,EAD7B,EAC6BA,QAAS1T,EADtC,EACsCA,QADtC,EAE8B3O,KAAKjB,MAAhCmpB,EAFH,EAEGA,YAAa5hB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAE3B,OACI,oCACI,kBAACmb,GAAA,EAAD,CAAU1hB,UAAWuO,IAAWvO,EAAW,sBAAuB,oBAAqBozC,UAAMC,EAAW1xB,QAAM,EAACnT,YAAaE,EAAS0Z,cAAeroB,KAAKmoB,uBACrJ,yBAAKloB,UAAU,oBACVmpB,GAEL,yBAAKnpB,UAAU,uBACVwL,QAES6nC,IAAZjxB,GACE,kBAACmxB,GAAA,EAAD,CAAOvzC,UAAU,uBAAuBsZ,MAAM,UAAU8I,QAASA,KAGzE,kBAACoF,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACtB,kBAACojB,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmnB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC0nB,GAAD,OAEJ,kBAACznB,GAAA,EAAD,CAAcC,QAASzP,EAAE,oB,GA5E5B/R,IAAMC,YA8FhByT,iBAAkBw/B,ICtDlBC,I,mBAhDX,WAAYj0C,GAAQ,IAAD,8BACf,4CAAMA,KAEDk0C,OAASpzC,IAAM4c,YAHL,E,yEAMN,IAAD,EAMJnd,KAAK2zC,OAAOz5B,QAEhB,MAAO,CAAE5T,KARD,EAEJstC,WAMWptC,IARP,EAGJqtC,UAKgB3kC,MARZ,EAIJu2B,YAIuBv0B,OARnB,EAKJ6S,gB,sCAMQtY,GACZ,IAAMqoC,EAAM9zC,KAAK2zC,OAAOz5B,QACnB45B,IAELA,EAAIztC,MAAMi/B,QAAU75B,K,+BAGd,IAAD,EACqCzL,KAAKP,MAAvC2pB,EADH,EACGA,KAAM3d,EADT,EACSA,KAAM0I,EADf,EACeA,SAAUxF,EADzB,EACyBA,QAE9B,OACI,yBAAKmP,IAAK9d,KAAK2zC,OAAQ1zC,UAAWuO,IAAW,OAAQ,CAAE,gBAAiB2F,IAAaxF,QAASA,GAC1F,yBAAK1O,UAAU,aACVmpB,GAEL,yBAAKnpB,UAAU,eACX,kBAAC8O,EAAA,EAAD,CAAW9O,UAAU,sBAEzB,yBAAKA,UAAU,aAAawL,Q,GApCzBlL,IAAMC,YCgDVuzC,I,mBA7CX,WAAYt0C,GAAQ,IAAD,8BACf,4CAAMA,KAEDk0C,OAASpzC,IAAM4c,YAHL,E,yEAMN,IAAD,EAMJnd,KAAK2zC,OAAOz5B,QAEhB,MAAO,CAAE5T,KARD,EAEJstC,WAMWptC,IARP,EAGJqtC,UAKgB3kC,MARZ,EAIJu2B,YAIuBv0B,OARnB,EAKJ6S,gB,sCAMQtY,GACZ,IAAMqoC,EAAM9zC,KAAK2zC,OAAOz5B,QACnB45B,IAELA,EAAIztC,MAAMi/B,QAAU75B,K,+BAGd,IAAD,EACiCzL,KAAKP,MAAnCoR,EADH,EACGA,OAAQsD,EADX,EACWA,SAAUxF,EADrB,EACqBA,QAE1B,OACI,yBAAKmP,IAAK9d,KAAK2zC,OAAQ1zC,UAAWuO,IAAW,OAAQ,CAAE,gBAAiB2F,IAAaxF,QAASA,GAC1F,kBAAC,GAAD,CAAUkC,OAAQA,EAAQkB,OAAO,IACjC,yBAAK9R,UAAU,eACX,kBAAC8O,EAAA,EAAD,CAAW9O,UAAU,sBAEzB,yBAAKA,UAAU,aAAaoU,YAAkBxD,S,GAlCvCtQ,IAAMC,YCgBvBwzC,I,mBAEF,WAAYv0C,GAAQ,IAAD,8BACf,4CAAMA,KAaVw0C,iBAAmB,SAACpjC,EAAQqjC,GAAY,IAC5BC,EAAS,EAAK10C,MAAd00C,KAER,GAAID,EAAQ,CACR,IAAM99B,EAAQ,EAAKsS,eAAexO,QAClC9D,EAAMT,QACNS,EAAMmF,UAAY,GAClB,EAAKkN,aAAa,IAGtB,EAAKtf,aAAsB,YAATgrC,EAAqB,oBAAsB,oBAAqBtjC,IAxBnE,EA0LnBujC,gBAAkB,WAAO,IAAD,EACK,EAAK30C,MAAtB2c,EADY,EACZA,OAAQ+3B,EADI,EACJA,KACRE,EAAgB,EAAKt1C,MAArBs1C,YACR,GAAKj4B,EAEL,GAAIi4B,EACA,OAAQA,GACJ,IAAK,mBACL,IAAK,uBACL,IAAK,eACL,IAAK,iBACL,IAAK,mBACL,IAAK,gBACL,IAAK,eACL,IAAK,mBACD,EAAKlrC,aAAakrC,GAElB,EAAK30C,SAAS,CACV20C,YAAa,OAEjB,MAEJ,QACI,EAAKJ,iBAAiBI,GAEtB,EAAK30C,SAAS,CACV20C,YAAa,YAS7B,GADyB,YAATF,EACH,CAAC,IAENG,EAMAl4B,EANAk4B,iBACAC,EAKAn4B,EALAm4B,qBACAC,EAIAp4B,EAJAo4B,aACAC,EAGAr4B,EAHAq4B,eACAC,EAEAt4B,EAFAs4B,iBACAC,EACAv4B,EADAu4B,kBAGJ,GAAIA,EAAkBt+B,OAAS,EAAG,CAC9B,IAAMu+B,EAAWD,EAAkBA,EAAkBt+B,OAAS,GAC9D,IAAKu+B,EAAU,OAEf,EAAKl1C,SAAS,CACV20C,YAAaO,SAEVJ,EACP,EAAK90C,SAAS,CACV20C,YAAa,iBAEVK,EACP,EAAKh1C,SAAS,CACV20C,YAAa,qBAEVI,EACP,EAAK/0C,SAAS,CACV20C,YAAa,mBAEVE,EACP,EAAK70C,SAAS,CACV20C,YAAa,yBAEVC,GACP,EAAK50C,SAAS,CACV20C,YAAa,yBAGlB,CAAC,IAEAQ,EAIAz4B,EAJAy4B,cACAC,EAGA14B,EAHA04B,aACAC,EAEA34B,EAFA24B,iBACAC,EACA54B,EADA44B,kBAGJ,GAAIA,EAAkB3+B,OAAS,EAAG,CAC9B,IAAMu+B,EAAWI,EAAkBA,EAAkB3+B,OAAS,GAC9D,IAAKu+B,EAAU,OAEf,EAAKl1C,SAAS,CACV20C,YAAaO,SAEVG,EACP,EAAKr1C,SAAS,CACV20C,YAAa,qBAEVS,EACP,EAAKp1C,SAAS,CACV20C,YAAa,iBAEVQ,GACP,EAAKn1C,SAAS,CACV20C,YAAa,oBA5RV,EAkSnBlrC,aAAe,SAAC2V,EAAM1V,IAGlBuG,EAFqB,EAAKlQ,MAAlBkQ,UAECmP,EAAM1V,GAEf,EAAK1J,SAAS,CACV20C,YAAa,QAxSF,EA4SnB5rB,aA5SmB,sCA4SJ,WAAMhd,GAAN,yBAAA8I,EAAA,wDACLgI,EAAQ9Q,EAAKmQ,OADR,uBAGP,EAAKlc,SAAS,CACVysB,YAAa,KACbkoB,YAAa,OALV,iCAULn9B,EAAW,IACRK,KACLlY,IAAgBC,KAAK,CACjB,QAAS,cACTid,QACAjF,MAAO,OAfJ,SAkBiBK,QAAQzC,IAAIgC,GAlB7B,mCAkBJiV,EAlBI,KAoBLja,EAAQxH,IAAUyH,WACxB+F,YAAiBhG,EAAOia,EAAYlU,UAEpC,EAAKvY,SAAS,CAAEysB,cAAakoB,YAAa,OAvB/B,0CA5SI,sDAGf,EAAK3rB,eAAiBnoB,IAAM4c,YAC5B,EAAK83B,aAAe10C,IAAM4c,YAC1B,EAAK+3B,SAAW,IAAIz+B,IAEpB,EAAK1X,MAAQ,CACTs1C,YAAa,KACbloB,YAAa,KACbvX,OAAO,GAVI,E,qFA2BK/U,EAAWC,GAAY,IAAD,EACjBE,KAAKP,MAAtB2c,EADkC,EAClCA,OAAQ+3B,EAD0B,EAC1BA,KACCgB,EAAet1C,EAAxBuc,OAER,GAAIvc,EAAUuc,SAAWA,EACrB,OAAO,KAGX,IAAMg5B,EAAmB,YAATjB,EACVkB,EAAYD,EAAUv1C,EAAUuc,OAAOu4B,kBAAoB90C,EAAUuc,OAAO44B,kBAC5ErvB,EAAQyvB,EAAUh5B,EAAOu4B,kBAAoBv4B,EAAO44B,kBAEpDM,EACFD,EAAUh/B,OAASsP,EAAMtP,QACtB8+B,EAAWb,mBAAqBl4B,EAAOk4B,kBACvCa,EAAWZ,uBAAyBn4B,EAAOm4B,sBAC3CY,EAAWV,iBAAmBr4B,EAAOq4B,gBACrCU,EAAWT,mBAAqBt4B,EAAOs4B,kBACvCS,EAAWX,eAAiBp4B,EAAOo4B,cACnCW,EAAWL,eAAiB14B,EAAO04B,cACnCK,EAAWN,gBAAkBz4B,EAAOy4B,eACpCM,EAAWJ,mBAAqB34B,EAAO24B,iBAExCQ,EAAYv1C,KAAKi1C,aAAa/6B,QAC9Bs7B,EAAaD,EAAUzxB,aACvB2xB,EAAmBF,EAAUxxB,aAE7B2xB,EAAcH,EAAUlvC,MAAMi/B,QAC9BqQ,EAAgBJ,EAAUlyB,UAC5BiyB,IACAC,EAAUlvC,MAAMi/B,QAAU,MAG9B,IAAMsQ,EAAU,IAAIn/B,IAjCsB,uBAkC1C,YAAgBzW,KAAKk1C,SAASxI,OAA9B,+CAAsC,CAAC,IAA9BvpC,EAA6B,QAC5BwhB,EAAK3kB,KAAKk1C,SAASvqC,IAAIxH,GAC7B,GAAIwhB,EAAI,CACJ,IAAMyG,EAASzG,EAAGyoB,YAClBwI,EAAQt6B,IAAInY,EAAKioB,KAtCiB,kFA0C1C,MAAO,CAAEzF,MAAOiwB,EAASC,MAAO,CAAEP,aAAYE,aAAYC,mBAAkBE,gBAAeD,kB,yCAG5E71C,EAAWC,EAAWC,GACjCF,EAAUuc,SAAWpc,KAAKP,MAAM2c,QAIpCpc,KAAK81C,aAAa/1C,EAAS81C,S,mCAIlB91C,GAAW,IAAD,OACnB,GAAKA,EAAL,CADmB,IAGXu1C,EAAyEv1C,EAAzEu1C,WAAYE,EAA6Dz1C,EAA7Dy1C,WAAYC,EAAiD11C,EAAjD01C,iBAAkBE,EAA+B51C,EAA/B41C,cAAeD,EAAgB31C,EAAhB21C,YAE3DH,EAAYv1C,KAAKi1C,aAAa/6B,QAE9B67B,EAAgBR,EAAUzxB,aAI1BkyB,GAHsBT,EAAUxxB,aAGpBgyB,EAAgBP,GADjBO,EAAgBP,EAKzBA,EAFU,KAGVD,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAI6zC,EAHxC,KAGV,OACA10C,sBAAsB,WAClBy0C,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAIo0C,EAL5C,KAKN,OACAlsC,WAAW,WACP,EAAK6e,eAAexO,QAAQ+7B,eAAe,CAAE5X,SAAU,UACxD,SAGPkX,EAAUlvC,MAAMi/B,QAAhB,sBAXU,IAWV,OACAtlC,KAAK0oB,eAAexO,QAAQ+7B,eAAe,CAAE5X,SAAU,YAEpD2X,EACHD,EAfU,KAgBVR,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAI8zC,EAhBxC,KAgBV,OACA30C,sBAAsB,WAClBy0C,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAIo0C,EAlB5C,KAkBN,WAGJR,EAAUlvC,MAAMi/B,QAAhB,sBArBU,IAqBV,OACAiQ,EAAUlyB,UAAYsyB,GAGtBL,GACAC,EAAUlvC,MAAMi/B,QAAUoQ,EAC1BH,EAAUlyB,UAAYsyB,GAEtB31C,KAAK0oB,eAAexO,QAAQ+7B,eAAe,CAAE5X,SAAU,c,mCAKtD6X,GAAc,IAAD,OACtB,GAAKA,EAAL,CAEA,IAAMC,EAAkB,IAAI1/B,IAHN,uBAItB,YAAgBzW,KAAKk1C,SAASxI,OAA9B,+CAAsC,CAAC,IAA9BvpC,EAA6B,QAC5BwhB,EAAK3kB,KAAKk1C,SAASvqC,IAAIxH,GAC7B,GAAIwhB,EAAI,CACJ,IAAMyxB,EAAgBzxB,EAAGyoB,YACnBiJ,EAAaH,EAAYt/B,IAAIzT,GAAO+yC,EAAYvrC,IAAIxH,GAAO,KACjE,GAAIkzC,EAAY,CACRA,EAAW/vC,KAAO8vC,EAAc9vC,MAChC6vC,EAAgB76B,IAAIqJ,EAAI,CAAE0xB,aAAYD,kBAG1C,IAAMhe,EAAS,+BAA2Bie,EAAW/vC,KAAO8vC,EAAc9vC,KAA3D,eAAsE+vC,EAAW7vC,IAAM4vC,EAAc5vC,IAArG,OACfme,EAAG2xB,gBAAgBle,MAfT,kFAoBtBt3B,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKo0C,SAASxI,OAA9B,+CAAsC,CAAC,IAA9BvpC,EAA6B,QAC5BwhB,EAAK,EAAKuwB,SAASvqC,IAAIxH,GAC7B,GAAIwhB,EAAI,CACJ,IAAIigB,EAAU,mCACd,GAAIuR,EAAgBv/B,IAAI+N,GAAK,CAAC,IAAD,EACawxB,EAAgBxrC,IAAIga,GAAlD0xB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpBxR,EAAa,+BAAwByR,EAAW/vC,KAAO8vC,EAAc9vC,KAAO+vC,EAAWnnC,MAA1E,eAAsFmnC,EAAW7vC,IAAM4vC,EAAc5vC,IAArH,QACP,mCAGVme,EAAG2xB,gBAAgB1R,KAXH,kFAenBuR,EAAgBnlC,MAErBnH,WAAW,WAAO,IAAD,uBACb,YAAessC,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B/nB,EAA8B,QAC3ByxB,EAAkBD,EAAgBxrC,IAAIga,GAAtCyxB,cACFxR,EAAa,+BAAwBwR,EAAclnC,MAAtC,WACb,iCAENyV,EAAG2xB,gBAAgB1R,IANV,kFASb9jC,sBAAsB,WAAO,IAAD,uBACxB,YAAeq1C,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B/nB,EAA8B,QAGnCA,EAAG2xB,gBAFgB,qCAFC,sFAQ7B,U,+BAgJD,IAAD,SACkEt2C,KAAKP,MAApE6S,EADH,EACGA,EAAG8J,EADN,EACMA,OAAQtE,EADd,EACcA,MAAOR,EADrB,EACqBA,MAAO68B,EAD5B,EAC4BA,KAAMx2B,EADlC,EACkCA,QAAmBgP,GADrD,EAC2Chd,SAD3C,EACqDgd,UADrD,EAEgC3sB,KAAKjB,MAAlCs1C,EAFH,EAEGA,YAAaloB,EAFhB,EAEgBA,YAGjBmoB,EAMAl4B,EANAk4B,iBACAC,EAKAn4B,EALAm4B,qBACAC,EAIAp4B,EAJAo4B,aACAC,EAGAr4B,EAHAq4B,eACAC,EAEAt4B,EAFAs4B,iBACAC,EACAv4B,EADAu4B,kBAIAE,EAIAz4B,EAJAy4B,cACAC,EAGA14B,EAHA04B,aACAC,EAEA34B,EAFA24B,iBACAC,EACA54B,EADA44B,kBAGEI,EAAmB,YAATjB,EACVxuB,EAAQyvB,EAAUT,EAAoBK,EAE5C,OACI,oCACI,yBAAK/0C,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAA8CqS,EAAZ,YAAT6hC,EAAuB,gBAAqB,oBAG7F,yBAAKr2B,IAAK9d,KAAKi1C,aAAch1C,UAAU,uBACjCm1C,GACE,oCACKd,GAAoB,kBAAC,GAAD,CAAM3lC,QAAS,kBAAM,EAAKxF,aAAa,qBAAqB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,mBAAoBqJ,IAAQxQ,SAA0B,qBAAhBkgC,EAAoCjrB,KAAM,kBAAC,GAAD,CAAc6P,QAAQ,cAAextB,KAAM6G,EAAE,oBAC5OiiC,GAAwB,kBAAC,GAAD,CAAM5lC,QAAS,kBAAM,EAAKxF,aAAa,yBAAyB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,uBAAwBqJ,IAAQxQ,SAA0B,yBAAhBkgC,EAAwCjrB,KAAM,kBAACmtB,GAAD,MAAqB9qC,KAAM6G,EAAE,uBAC5OmiC,GAAkB,kBAAC,GAAD,CAAM9lC,QAAS,kBAAM,EAAKxF,aAAa,mBAAmB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,iBAAkBqJ,IAAQxQ,SAA0B,mBAAhBkgC,EAAkCjrB,KAAM,kBAAC,GAAD,CAAY6P,QAAQ,cAAextB,KAAM6G,EAAE,kBAClOoiC,GAAoB,kBAAC,GAAD,CAAM/lC,QAAS,kBAAM,EAAKxF,aAAa,qBAAqB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,mBAAoBqJ,IAAQxQ,SAA0B,qBAAhBkgC,EAAoCjrB,KAAM,kBAAC,GAAD,CAAc6P,QAAQ,cAAextB,KAAM6G,EAAE,oBAC5OkiC,GAAgB,kBAAC,GAAD,CAAM7lC,QAAS,kBAAM,EAAKxF,aAAa,iBAAiB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,eAAgBqJ,IAAQxQ,SAA0B,iBAAhBkgC,EAAgCjrB,KAAM,kBAACotB,GAAD,MAAc/qC,KAAM6G,EAAE,kBAG3M8iC,GACC,oCACKP,GAAiB,kBAAC,GAAD,CAAMlmC,QAAS,kBAAM,EAAKxF,aAAa,kBAAkB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,gBAAiBqJ,IAAQxQ,SAA0B,kBAAhBkgC,EAAiCjrB,KAAM,kBAAC,GAAD,CAAY6P,QAAQ,cAAextB,KAAM6G,EAAE,iBAC9NwiC,GAAgB,kBAAC,GAAD,CAAMnmC,QAAS,kBAAM,EAAKxF,aAAa,iBAAiB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,eAAgBqJ,IAAQxQ,SAA0B,iBAAhBkgC,EAAgCjrB,KAAM,kBAAC,GAAD,CAAc6P,QAAQ,cAAextB,KAAM6G,EAAE,gBAC5NyiC,GAAoB,kBAAC,GAAD,CAAMpmC,QAAS,kBAAM,EAAKxF,aAAa,qBAAqB2U,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAI,mBAAoBqJ,IAAQxQ,SAA0B,qBAAhBkgC,EAAoCjrB,KAAM,kBAACotB,GAAD,MAAc/qC,KAAM6G,EAAE,qBAG7NqT,EAAM/N,IAAI,SAAAtW,GAAC,OAAI,kBAAC,GAAD,CAAU6S,SAAUkgC,IAAgB/yC,EAAGwc,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAIha,EAAGqjB,IAAQxhB,IAAK7B,EAAGuP,OAAQvP,EAAGqN,QAAS,kBAAM,EAAKslC,iBAAiB3yC,QACzJ,kBAAC,GAAD,CAAaqiC,SAAU3jC,KAAK0oB,eAAgBmb,KAAMvxB,EAAE,UAAWqL,QAAS3d,KAAKy2C,kBAAmB9mC,SAAU3P,KAAKyoB,aAAcgb,YAAazjC,KAAKo0C,mBAEnJ,yBAAKn0C,UAAU,2BAA2BoG,MAAO,CAAEqwC,OAAQ,KAC3D,yBAAK54B,IAAK9d,KAAK22C,UAAW12C,UAAU,uBAAuBoG,MAAO,CAAEuwC,WAAY,EAAGzhC,SAAU,WAAYjE,OAAQ,QAAUyb,SAAUA,GACjI,kBAAC,GAAD,KAAgBra,EAAE,oBACjB8iC,GACG,oCACI,kBAAC,GAAD,CAAYzmC,QAAS,kBAAM,EAAKxF,aAAa,qBAAqBkZ,QAASiyB,EAAkBlrB,KAAM,kBAAC,GAAD,CAAcnpB,UAAU,0BAA0Bg5B,QAAQ,cAAextB,KAAM6G,EAAE,oBACpL,kBAAC,GAAD,CAAY3D,QAAS,kBAAM,EAAKxF,aAAa,yBAAyBkZ,QAASkyB,EAAsBnrB,KAAM,kBAACmtB,GAAD,CAAiBt2C,UAAU,4BAA6BwL,KAAM6G,EAAE,uBAC3K,kBAAC,GAAD,CAAY3D,QAAS,kBAAM,EAAKxF,aAAa,mBAAmBkZ,QAASoyB,EAAgBrrB,KAAM,kBAAC,GAAD,CAAYnpB,UAAU,0BAA0Bg5B,QAAQ,cAAextB,KAAM6G,EAAE,kBAC9K,kBAAC,GAAD,CAAY3D,QAAS,kBAAM,EAAKxF,aAAa,qBAAqBkZ,QAASqyB,EAAkBtrB,KAAM,kBAAC,GAAD,CAAcnpB,UAAU,0BAA0Bg5B,QAAQ,cAAextB,KAAM6G,EAAE,oBACpL,kBAAC,GAAD,CAAY3D,QAAS,kBAAM,EAAKxF,aAAa,iBAAiBkZ,QAASmyB,EAAcprB,KAAM,kBAACotB,GAAD,CAAUv2C,UAAU,4BAA6BwL,KAAM6G,EAAE,kBAG1J8iC,GACE,oCACI,kBAAC,GAAD,CAAYzmC,QAAS,kBAAM,EAAKxF,aAAa,kBAAkBkZ,QAASwyB,EAAezrB,KAAM,kBAAC2S,GAAD,CAAW97B,UAAU,4BAA6BwL,KAAM6G,EAAE,iBACvJ,kBAAC,GAAD,CAAY3D,QAAS,kBAAM,EAAKxF,aAAa,iBAAiBkZ,QAASyyB,EAAc1rB,KAAM,kBAAC,GAAD,CAAUnpB,UAAU,4BAA6BwL,KAAM6G,EAAE,gBACpJ,kBAAC,GAAD,CAAY3D,QAAS,kBAAM,EAAKxF,aAAa,qBAAqBkZ,QAAS0yB,EAAkB3rB,KAAM,kBAAC,GAAD,CAAcnpB,UAAU,4BAA6BwL,KAAM6G,EAAE,qBAGtKwF,GAASA,EAAMzB,OAAS,GACtB,oCACI,yBAAKpW,UAAU,+BAA+BoG,MAAO,CAAE8qC,OAAQ,cAC/D,kBAAC,GAAD,KAAgB7+B,EAAE,iBACfwF,GAAS,IAAIqS,MAAM,EAAG7S,GAAOM,IAAI,SAAAtW,GAAC,OAAI,kBAAC,GAAD,CAAYwd,MAAM,EAAMnQ,QAAS,kBAAM,EAAKslC,iBAAiB3yC,IAAI6B,IAAK7B,EAAGuP,OAAQvP,EAAG+gB,QAAkB,YAAT8xB,EAAqBQ,EAAkBjJ,SAASpqC,GAAK0zC,EAAkBtJ,SAASpqC,QAG5N6qB,GACE,yBAAKlsB,UAAU,4BACTksB,EAAYlU,SAASL,IAAI,SAAAtW,GAAC,OAAI,kBAAC,GAAD,CAAYwd,MAAM,EAAMnQ,QAAS,kBAAM,EAAKslC,iBAAiB3yC,GAAG,IAAO6B,IAAK7B,EAAGuP,OAAQvP,EAAG+gB,QAAkB,YAAT8xB,EAAqBQ,EAAkBjJ,SAASpqC,GAAK0zC,EAAkBtJ,SAASpqC,c,GAzZjNf,IAAMC,YA0arByT,iBAAkB+/B,I,8jBCpajC,IAAM6C,GAASt2C,IAAMu2C,KAAK,kBAAM,sDAE1BC,G,YAEF,WAAYt3C,GAAQ,IAAD,8BACf,4CAAMA,KAqCVu3C,kBAtCmB,qBAsCC,oCAAAziC,EAAA,yDACM,EAAKxV,MAAnBk4C,UADQ,iEAKNC,EAAW,CACbC,MAAM,wBANE,SASUx/B,QAAQzC,IAAIgiC,GATtB,cASN/V,EATM,iBAWSxpB,QAAQzC,IAAIisB,EAAQvpB,IAAI,SAAAtW,GAAC,OAAIA,EAAE81C,UAXxC,oCAWLlnB,EAXK,KAaZ,EAAKxwB,SACD,CACIwwB,SAfI,kDAmBZvb,QAAQC,MAAR,MAnBY,wDAtCD,EA6DnBm6B,WAAa,WAAO,IACRsI,EAAW,EAAK53C,MAAhB43C,OACAC,EAAe,EAAKv4C,MAApBu4C,WAEF14B,EAAQ,EAAK24B,SAASr9B,QAAQ9Q,MAAMwS,OAC1C,IAAKgD,EAKD,OAJA,EAAK24B,SAASr9B,QAAQvE,aACtB,EAAKjW,SAAS,CACVkV,OAAO,IAIX,EAAKlV,SAAS,CACVkV,OAAO,IAIf0iC,EAAW14B,MAAQA,EC9GpB,SAAuBxC,GAC1B,IAAKA,EAAQ,OAAO,EADc,IAI9Bk4B,EAOAl4B,EAPAk4B,iBACAC,EAMAn4B,EANAm4B,qBACAC,EAKAp4B,EALAo4B,aACAC,EAIAr4B,EAJAq4B,eACAC,EAGAt4B,EAHAs4B,iBACAC,EAEAv4B,EAFAu4B,kBAIJ,QAFIv4B,EADAwC,QAKG01B,GAAoBC,GAAwBC,GAAgBC,GAAkBC,GAAoBC,EAAkBt+B,OAAS,GDiG3HmhC,CAAcF,GAKnBD,GAAUA,EAAOC,GAJb,EAAK1+B,sBAAsB,qDAjFhB,EAwFnB6+B,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAUz9B,QACzBw9B,GACAA,EAAOE,MACPF,EAAOE,KAAKC,UAEjBH,EAAOE,KAAKE,YAAY,IA9FT,EAiGnBC,4BAA8B,WAAO,IACzBzlC,EAAM,EAAK7S,MAAX6S,EACAglC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBhD,kBAAkB,IAEzD,EAAK50C,SAAS,CACV43C,WAAYU,IAGF,EAAKT,SAASr9B,QAAQ9Q,QACtBkJ,EAAE,mBACZ,EAAK5S,SAAS,CACVkf,MAAO,OA/GA,EAoHnBq5B,+BAAiC,WAAO,IAC5B3lC,EAAM,EAAK7S,MAAX6S,EACAglC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB/C,sBAAsB,IAE7D,EAAK70C,SAAS,CACV43C,WAAYU,IAGF,EAAKT,SAASr9B,QAAQ9Q,QACtBkJ,EAAE,sBACZ,EAAK5S,SAAS,CACVkf,MAAO,OAlIA,EAuInBs5B,0BAA4B,WAAO,IACvB5lC,EAAM,EAAK7S,MAAX6S,EACAglC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB7C,gBAAgB,IAEvD,EAAK/0C,SAAS,CACV43C,WAAYU,IAGF,EAAKT,SAASr9B,QAAQ9Q,QACtBkJ,EAAE,iBACZ,EAAK5S,SAAS,CACVkf,MAAO,OArJA,EA0JnBu5B,4BAA8B,WAAO,IACzB7lC,EAAM,EAAK7S,MAAX6S,EACAglC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB5C,kBAAkB,IAEzD,EAAKh1C,SAAS,CACV43C,WAAYU,IAGF,EAAKT,SAASr9B,QAAQ9Q,QACtBkJ,EAAE,mBACZ,EAAK5S,SAAS,CACVkf,MAAO,OAxKA,EA6KnBw5B,wBAA0B,WAAO,IACrB9lC,EAAM,EAAK7S,MAAX6S,EACAglC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB9C,cAAc,IAErD,EAAK90C,SAAS,CACV43C,WAAYU,IAGF,EAAKT,SAASr9B,QAAQ9Q,QACtBkJ,EAAE,eACZ,EAAK5S,SAAS,CACVkf,MAAO,OA3LA,EAgMnBy5B,yBAA2B,SAAAxnC,GAAW,IAC1BymC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB3C,kBAAmB2C,EAAW3C,kBAAkBv4B,OAAO,SAAA9a,GAAC,OAAIA,IAAMuP,MAEzG,EAAKnR,SAAS,CACV43C,WAAYU,MAvMD,EA2MnBM,yBAA2B,WAAO,IACtBhB,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBzC,eAAe,IAEtD,EAAKn1C,SAAS,CACV43C,WAAYU,MAlND,EAsNnBO,wBAA0B,WAAO,IACrBjB,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBxC,cAAc,IAErD,EAAKp1C,SAAS,CACV43C,WAAYU,MA7ND,EAiOnBQ,4BAA8B,WAAO,IACzBlB,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBvC,kBAAkB,IAEzD,EAAKr1C,SAAS,CACV43C,WAAYU,MAxOD,EA4OnBS,yBAA2B,SAAA5nC,GAAW,IAC1BymC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBtC,kBAAmBsC,EAAWtC,kBAAkB54B,OAAO,SAAA9a,GAAC,OAAIA,IAAMuP,MAEzG,EAAKnR,SAAS,CACV43C,WAAYU,MAnPD,EAuPnBU,sBAvPmB,sCAuPK,WAAMvE,GAAN,eAAA5/B,EAAA,qEACClV,IAAgBC,KAAK,CACtC,QAAS,WACTg7B,UAAW,CAAE,QAAS,gBACtBljB,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MANS,OACd9X,EADc,OASpB,EAAKE,SAAS,CACVi5C,iBAAiB,EACjBxE,OACAr8B,MAAOtY,EAAOyY,SACdX,MAAOmxB,MAbS,yCAvPL,wDA4TnBmQ,uBAAyB,WAErB,EAAKC,wBAEL,EAAKn5C,SAAS,CACVi5C,iBAAiB,EACjBxE,KAAM,QAlUK,EAsUnBhrC,aAAe,SAAC2V,EAAM1V,GAAW,IACrBkuC,EAAe,EAAKv4C,MAApBu4C,WACR,GAAKA,EAAL,CAEA,IAAIU,EAAgB,KACpB,OAAQl5B,GACJ,IAAK,mBACDk5B,EAAa,MAAQV,EAAR,CAAoBhD,kBAAmBgD,EAAWhD,mBAC/D,MAEJ,IAAK,uBACD0D,EAAa,MAAQV,EAAR,CAAoB/C,sBAAuB+C,EAAW/C,uBACnE,MAEJ,IAAK,eACDyD,EAAa,MAAQV,EAAR,CAAoB9C,cAAe8C,EAAW9C,eAC3D,MAEJ,IAAK,iBACDwD,EAAa,MAAQV,EAAR,CAAoB7C,gBAAiB6C,EAAW7C,iBAC7D,MAEJ,IAAK,mBACDuD,EAAa,MAAQV,EAAR,CAAoB5C,kBAAmB4C,EAAW5C,mBAC/D,MAEJ,IAAK,oBACD,IAAIoE,EAAUC,EACVzB,EAAW3C,kBAAkBjJ,SAAStiC,IACtC0vC,EAAWxB,EAAW3C,kBAAkBv4B,OAAO,SAAA9a,GAAC,OAAIA,IAAM8H,IAC1D2vC,EAAWzB,EAAWtC,oBAEtB8D,EAAQ,uBAAQxB,EAAW3C,mBAAnB,CAAsCvrC,IAC9C2vC,EAAWzB,EAAWtC,kBAAkB54B,OAAO,SAAA9a,GAAC,OAAIA,IAAM8H,KAG9D4uC,EAAa,MACNV,EADM,CAET3C,kBAAmBmE,EACnB9D,kBAAmB+D,IAEvB,MAEJ,IAAK,gBACDf,EAAa,MAAQV,EAAR,CAAoBzC,eAAgByC,EAAWzC,gBAC5D,MAEJ,IAAK,eACDmD,EAAa,MAAQV,EAAR,CAAoBxC,cAAewC,EAAWxC,eAC3D,MAEJ,IAAK,mBACDkD,EAAa,MAAQV,EAAR,CAAoBvC,kBAAmBuC,EAAWvC,mBAC/D,MAEJ,IAAK,oBACD,IAAI+D,EAAUC,EACVzB,EAAWtC,kBAAkBtJ,SAAStiC,IACtC2vC,EAAWzB,EAAWtC,kBAAkB54B,OAAO,SAAA9a,GAAC,OAAIA,IAAM8H,IAC1D0vC,EAAWxB,EAAW3C,oBAEtBoE,EAAQ,uBAAQzB,EAAWtC,mBAAnB,CAAsC5rC,IAC9C0vC,EAAWxB,EAAW3C,kBAAkBv4B,OAAO,SAAA9a,GAAC,OAAIA,IAAM8H,KAG9D4uC,EAAa,MACNV,EADM,CAET3C,kBAAmBmE,EACnB9D,kBAAmB+D,IAQ1Bf,GAEL,EAAKt4C,SAAS,CACV43C,WAAYU,MArZD,EAyZnBgB,kBAAoB,WAChB,IAAMp6B,EAAQ,EAAK24B,SAASr9B,QAAQ9Q,MAAM0iC,OAAO,EAAGmN,KAEpD,EAAKv5C,SAAS,CACVkf,WA7ZW,EAianB+M,aAAe,SAAAzoB,GACX,IAAM2hC,EAAS3hC,EAAMyD,OACjBk+B,EAAOxhB,UAAYwhB,EAAO9gB,cAAgB8gB,EAAO/gB,cACjD,EAAKpkB,SAAS,CACV4X,MAAO,EAAKvY,MAAMuY,MAAQmxB,OAranB,EA0anB7vB,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAKpZ,MAAxCqZ,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,QACJmW,aAAW,QACXC,MAAM,UACNtZ,UAAU,4BACV0O,QAAS,kBAAMoK,EAAcC,KAC7B,kBAACjK,EAAA,EAAD,WApbZ,EAAKwoC,SAAWh3C,IAAM4c,YACtB,EAAKw6B,UAAYp3C,IAAM4c,YAEvB,EAAKpe,MAAQ,CACTm6C,cAAe,EACfhpB,KAAM,KACNyoB,iBAAiB,EACjBxE,KAAM,KACNv1B,MAAO,GACPhK,OAAO,EACPukC,OAAO,EACPrhC,MAAO,GACPR,MAAO,GAfI,E,iFAmCftX,KAAKg3C,sB,8CAqOgB,IACb1kC,EAAMtS,KAAKP,MAAX6S,EACAglC,EAAet3C,KAAKjB,MAApBu4C,WAGR,IADct3C,KAAKu3C,SAASr9B,QAAQ9Q,MACxB,CAAC,IAELkrC,EAMAgD,EANAhD,iBACAC,EAKA+C,EALA/C,qBACAC,EAIA8C,EAJA9C,aACAC,EAGA6C,EAHA7C,eACAC,EAEA4C,EAFA5C,iBACAC,EACA2C,EADA3C,kBAQA2C,EAJAzC,cAIAyC,EAHAxC,aAGAwC,EAFAvC,iBAEAuC,EADAtC,kBAGCL,EAAkBt+B,UACfi+B,GAAqBC,GAAyBC,GAAiBC,GAAmBC,EAI1EJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,GAIlFJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,EAIhFJ,GAAqBC,IAAwBC,GAAiBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,IAAgBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,GAAiBC,IAAkBC,GACzF10C,KAAKN,SAAS,CACVkf,MAAOtM,EAAE,oBALbtS,KAAKN,SAAS,CACVkf,MAAOtM,EAAE,kBALbtS,KAAKN,SAAS,CACVkf,MAAOtM,EAAE,gBALbtS,KAAKN,SAAS,CACVkf,MAAOtM,EAAE,eALbtS,KAAKN,SAAS,CACVkf,MAAOtM,EAAE,uBALbtS,KAAKN,SAAS,CACVkf,MAAOtM,EAAE,wB,+BA4JnB,IAAD,SAC8BtS,KAAKP,MAAhC6S,EADH,EACGA,EAAG8J,EADN,EACMA,OAAQhd,EADd,EACcA,GAAIue,EADlB,EACkBA,QACvB,IAAKvB,EAAQ,OAAO,KAFf,MAIkFpc,KAAKjB,MAApFu4C,EAJH,EAIGA,WAAYpnB,EAJf,EAIeA,KAAMyoB,EAJrB,EAIqBA,gBAAiBxE,EAJtC,EAIsCA,KAAMr8B,EAJ5C,EAI4CA,MAAOR,EAJnD,EAImDA,MAAOsH,EAJ1D,EAI0DA,MAAOhK,EAJjE,EAIiEA,MAGlE0/B,GAPC,EAIwE6E,MASzE7B,EANAhD,kBACAC,EAKA+C,EALA/C,qBACAC,EAIA8C,EAJA9C,aACAC,EAGA6C,EAHA7C,eACAC,EAEA4C,EAFA5C,iBACAC,EACA2C,EADA3C,kBAIAE,EAIAyC,EAJAzC,cACAC,EAGAwC,EAHAxC,aACAC,EAEAuC,EAFAvC,iBACAC,EACAsC,EADAtC,kBAGJ,OACI,oCACI,yBAAK/0C,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAmCqS,EAAVlT,GAAM,EAAM,aAAkB,qBAE3E,kBAACia,EAAA,EAAD,CAAYpZ,UAAU,sBAAsBsZ,MAAM,UAAU5K,QAAS3O,KAAK+uC,YACtE,kBAACqK,GAAD,QAGR,yBAAKn5C,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,IAAMo5C,SAAP,CAAgBC,SAAU,MACtB,kBAACzC,GAAD,CACI/4B,IAAK9d,KAAK23C,UACVh3C,QAAS,CACL44C,UAAU,EACVC,MAAM,EACNC,cAAevpB,EACfwpB,SAAU,MACVC,iBAAkB,CACdC,oBAAqB,iBACrBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,IAG3BprC,QAAS3O,KAAKy3C,yBAM1B,yBAAKx3C,UAAU,uBACX,kBAACizC,GAAA,EAAD,CACIvP,SAAU3jC,KAAKu3C,SACft3C,UAAU,qBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOld,EAAE,kBACTlJ,MAAOwV,EACPhK,MAAOA,EACPjF,SAAU3P,KAAKg5C,qBAGvB,yBAAK/4C,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,kBAClB,kBAAC,GAAD,CAAYrS,UAAU,0BAA0BmpB,KAAM,kBAAC4wB,GAAD,MAAYvuC,KAAM6G,EAAE,kBAAmB3D,QAAS,kBAAM,EAAK+pC,sBAAsB,cACtIpE,GAAoB,kBAAC,GAAD,CAAYhL,SAAUtpC,KAAK+3C,4BAA6B3uB,KAAM,kBAAC,GAAD,CAAcnpB,UAAU,0BAA0Bg5B,QAAQ,cAAextB,KAAM6G,EAAE,oBACnKiiC,GAAwB,kBAAC,GAAD,CAAYjL,SAAUtpC,KAAKi4C,+BAAgC7uB,KAAM,kBAACmtB,GAAD,CAAiBt2C,UAAU,4BAA6BwL,KAAM6G,EAAE,uBACzJmiC,GAAkB,kBAAC,GAAD,CAAYnL,SAAUtpC,KAAKk4C,0BAA2B9uB,KAAM,kBAAC,GAAD,CAAYnpB,UAAU,0BAA0Bg5B,QAAQ,cAAextB,KAAM6G,EAAE,kBAC7JoiC,GAAoB,kBAAC,GAAD,CAAYpL,SAAUtpC,KAAKm4C,4BAA6B/uB,KAAM,kBAAC,GAAD,CAAcnpB,UAAU,0BAA0Bg5B,QAAQ,cAAextB,KAAM6G,EAAE,oBACnKkiC,GAAgB,kBAAC,GAAD,CAAYlL,SAAUtpC,KAAKo4C,wBAAyBhvB,KAAM,kBAACotB,GAAD,CAAUv2C,UAAU,4BAA6BwL,KAAM6G,EAAE,gBAClIqiC,EAAkB/8B,IAAI,SAAAtW,GAAC,OACrB,kBAAC,GAAD,CAAY6B,IAAK7B,EAAGuP,OAAQvP,EAAGgoC,SAAU,EAAK+O,8BAGtD,yBAAKp4C,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,kBAClB,kBAAC,GAAD,CAAYrS,UAAU,6BAA6BmpB,KAAM,kBAAC,KAAD,MAAe3d,KAAM6G,EAAE,qBAAsB3D,QAAS,kBAAM,EAAK+pC,sBAAsB,cAC/I7D,GAAiB,kBAAC,GAAD,CAAYvL,SAAUtpC,KAAKs4C,yBAA0BlvB,KAAM,kBAAC2S,GAAD,CAAW97B,UAAU,4BAA6BwL,KAAM6G,EAAE,iBACtIwiC,GAAgB,kBAAC,GAAD,CAAYxL,SAAUtpC,KAAKu4C,wBAAyBnvB,KAAM,kBAAC,GAAD,CAAUnpB,UAAU,4BAA6BwL,KAAM6G,EAAE,gBACnIyiC,GAAoB,kBAAC,GAAD,CAAYzL,SAAUtpC,KAAKw4C,4BAA6BpvB,KAAM,kBAAC,GAAD,CAAcnpB,UAAU,4BAA6BwL,KAAM6G,EAAE,oBAC9I0iC,EAAkBp9B,IAAI,SAAAtW,GAAC,OACrB,kBAAC,GAAD,CAAY6B,IAAK7B,EAAGuP,OAAQvP,EAAGgoC,SAAU,EAAKmP,+BAI1D,kBAAC,GAAD,CAAal7B,KAAMo7B,EAAiBh7B,QAAS3d,KAAK44C,wBAC9C,kBAAC,GAAD,CAAiBx8B,OAAQk7B,EAAYnD,KAAMA,EAAMr8B,MAAOA,EAAOR,MAAOA,EAAO3H,SAAU3P,KAAKmJ,aAAcwjB,SAAU3sB,KAAK2rB,oB,gDAxgBzGlsB,EAAOV,GAAQ,IACnCqd,EAAqB3c,EAArB2c,OAAQ69B,EAAax6C,EAAbw6C,SACRf,EAAiBn6C,EAAjBm6C,aAER,OAAI98B,GAAU88B,IAAiBe,EACpB,CACHf,aAAce,EACd3C,WAAW,MAAKl7B,GAChBwC,MAAOxC,EAAOwC,OAIf,S,GAjCYre,IAAMC,WAijBlB8d,GALCC,YACZtK,cACAuK,eAGWF,CAAQy4B,IE5jBjBmD,I,kNAEFn7C,MAAQ,CACJiU,QAAQ,EACRkV,aAAa,EACb5hB,KAAM,EACNE,IAAK,G,EAGT2gB,aAAe,WACX,EAAKiB,yBACL,EAAK+xB,oB,EAGTA,iBAAmB,WACf,EAAKz6C,SAAS,CACVsT,QAAQ,K,EAIhBonC,kBAAoB,WAChB,EAAK16C,SAAS,CACVsT,QAAQ,K,EAIhBqnC,mBAAqB,WACjB,EAAKD,qB,EAGTE,oBAAsB,WAAO,IACjB35B,EAAS,EAAKlhB,MAAdkhB,KACHA,IAEL,EAAKy5B,oBAEL/6C,IAAgBC,KAAK,CACjB,QAAS,mBACT4lC,eAAgBvkB,EAAKvhB,O,EAI7B+oB,sBAAwB,SAAAjlB,GAChBA,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAGV,EAAKlF,SAAS,CACVwoB,aAAa,EACb5hB,KAAMpD,EAAM4F,QACZtC,IAAKtD,EAAM6F,W,EAInBqf,uBAAyB,WACrB,EAAK1oB,SAAS,CACVwoB,aAAa,EACb5hB,KAAM,EACNE,IAAK,K,wEAIH,IAAD,EAC8BxG,KAAKP,MAAhC6S,EADH,EACGA,EAAGqO,EADN,EACMA,KAAM45B,EADZ,EACYA,OAAQziC,EADpB,EACoBA,MACzB,IAAK6I,EAAM,OAAO,KAFb,MAIsC3gB,KAAKjB,MAAxCiU,EAJH,EAIGA,OAAQkV,EAJX,EAIWA,YAAa1hB,EAJxB,EAIwBA,IAAKF,EAJ7B,EAI6BA,KAE1BsY,EAAU+B,EAAV/B,MACFU,EDvEP,SAA2BhN,EAAG2nC,EAAUniC,GAC3C,IAAKA,EAAO,MAAO,IAGnB,IADA,IAAIs2B,EAAQ,EACHz3B,EAAI,EAAGA,EAAImB,EAAMG,SAAS5B,OAAQM,IAC0D,MAA7F6wB,YAAa1vB,EAAMG,SAAStB,GAAI,CAAE,QAAS,iBAAkBuuB,eAAgB+U,KAC7E7L,IAIR,OAAKA,EAIY,IAAVA,EAAc,SAAd,UAA4BA,EAA5B,UAHI97B,EAAE,iBC4DQkoC,CAAkBloC,EAAGqO,EAAKvhB,GAAI0Y,GAE/C,OACI,oCACI,kBAAC6J,GAAA,EAAD,CAAU1hB,UAAU,sBAAsBozC,UAAMC,EAAW1xB,QAAM,EAACjT,QAAS4rC,EAAQlyB,cAAeroB,KAAKmoB,uBACnG,kBAACrG,GAAA,EAAD,CACI7hB,UAAU,2BACV8hB,QAASnD,EACT67B,UAAWn7B,KAGnB,kBAACmI,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACtB,kBAACojB,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmnB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC0nB,GAAD,OAEJ,kBAACznB,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAIrC,kBAAC,IAAD,CACIkL,QAASC,KACTC,mBAAoB,EACpBH,KAAMvK,EACN2K,QAAS3d,KAAK8vC,aACdlyB,kBAAgB,uBAChB,kBAAC,IAAD,CAAaxe,GAAG,uBAAuBkT,EAAE,YACzC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,KACK78B,EAAE,uBAGX,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAKq6C,mBAAoB9gC,MAAM,WAC3CjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAKs6C,oBAAqB/gC,MAAM,WAC5CjH,EAAE,c,GAzHV/R,IAAMC,YAwIZyT,iBAAkBimC,ICpJ3BQ,I,kNAEFC,UAAY,WAAO,IACCC,EAAsB,EAAKn7C,MAAnC2c,OACR,GAAKw+B,EAAL,CAFc,IAINx+B,EAAWw+B,EAAXx+B,OAER/c,IAAgBC,KAAK,CACjB,QAAS,mBACT8c,a,wEAIE,IAAD,EACoCpc,KAAKP,MAAtC6S,EADH,EACGA,EAAWsoC,EADd,EACMx+B,OACX,IAAKw+B,EAAmB,OAAO,KAF1B,IAIGx+B,EAAwBw+B,EAAxBx+B,OAAQ4R,EAAgB4sB,EAAhB5sB,YAEhB,OACI,kBAACrM,GAAA,EAAD,CACI1hB,UAAU,sBACVozC,UAAMC,EACN1xB,QAAM,GACN,kBAACE,GAAA,EAAD,CACI7hB,UAAU,0BACV8hB,QAAS3F,EAAOwC,MAChB67B,UAAWzsB,IAEf,kBAAC5P,EAAA,EAAD,CAAQne,UAAU,yBAAyBgiB,QAAQ,YAAY44B,kBAAgB,EAACthC,MAAM,UAAU5K,QAAS3O,KAAK26C,WACzGroC,EAAE,a,GA/BS/R,IAAMC,YA2CvByT,iBAAkBymC,IChC3B7D,I,OAASt2C,IAAMu2C,KAAK,kBAAM,uDAE1BxS,G,YAEF,WAAY7kC,GAAQ,IAAD,8BACf,4CAAMA,KA4BVimC,oBAAsB,SAAAr1B,GAClBxG,WAAW,WACP,EAAKixC,YACN,MAhCY,EA0EnB9D,kBA1EmB,qBA0EC,oCAAAziC,EAAA,yDACM,EAAKxV,MAAnBk4C,UADQ,iEAKNC,EAAW,CACbC,MAAM,uBACNA,MAAM,wBAPE,SAUUx/B,QAAQzC,IAAIgiC,GAVtB,cAUN/V,EAVM,iBAYSxpB,QAAQzC,IAAIisB,EAAQvpB,IAAI,SAAAtW,GAAC,OAAIA,EAAE81C,UAZxC,oCAYLlnB,EAZK,KAcZ,EAAKxwB,SACD,CACIwwB,SAhBI,kDAoBZvb,QAAQC,MAAR,MApBY,wDA1ED,EAkGnBmmC,mBAAqB,WAAO,IAChBzoC,EAAM,EAAK7S,MAAX6S,EAER,GADoBqzB,GAAZzO,QACI7gB,QAAU2kC,IAClB,EAAKpiC,sBAAsBtG,EAAE,0BADjC,CAsBA,EAAK5S,SAAS,CACVu7C,YAAY,EACZhB,UAAW,EACX79B,OApBW,CACX,QAAS,YACTwC,MAAO,GACPs8B,UAAW,GACXC,gBAAiB,GACjBxG,kBAAmB,GACnBK,kBAAmB,GACnBH,eAAe,EACfC,cAAc,EACdC,kBAAkB,EAClBT,kBAAkB,EAClBC,sBAAsB,EACtBC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,OAxHP,EAkInB0G,kBAAoB,WAChB,EAAK17C,SAAS,CACVu7C,YAAY,EACZhB,UAAW,EACX79B,OAAQ,QAtIG,EA0InBi/B,iBA1ImB,sCA0IA,WAAM16B,GAAN,eAAApM,EAAA,qEACMlV,IAAgBC,KAAK,CACtC,QAAS,gBACT4lC,eAAgBvkB,EAAKvhB,KAHV,UACTgd,EADS,wDAQf,EAAK1c,SAAS,CACVu7C,YAAY,EACZhB,SAAUt5B,EAAKvhB,GACfgd,WAXW,yCA1IA,wDAyJnB2yB,WAAa,SAAA3yB,GAAW,IACZ69B,EAAa,EAAKl7C,MAAlBk7C,SAER,EAAKmB,oBACAh/B,KAEa,IAAd69B,EACA56C,IAAgBC,KAAK,CACjB,QAAS,iBACT4lC,eAAgB+U,EAChB79B,WAGJ/c,IAAgBC,KAAK,CACjB,QAAS,mBACT8c,aAxKO,EA6KnBq7B,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAUz9B,QACzBw9B,GACAA,EAAOE,MACPF,EAAOE,KAAKC,UAEjBH,EAAOE,KAAKE,YAAY,IAnLT,EAsLnBl/B,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAKpZ,MAAxCqZ,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,QACJmW,aAAW,QACXC,MAAM,UACNtZ,UAAU,4BACV0O,QAAS,kBAAMoK,EAAcC,KAC7B,kBAACjK,EAAA,EAAD,WAhMZ,EAAK4oC,UAAYp3C,IAAM4c,YAEvB,EAAKpe,MAAQ,CACTk8C,YAAY,EACZhB,UAAW,EACX79B,OAAQ,KACRk7B,WAAY,KACZgE,mBAAoB,KACpBxjC,MAAO,KACPyjC,WAAY,IAAI9kC,KAZL,E,iFAiBfzW,KAAKg3C,oBACLh3C,KAAK86C,WAELnV,GAAY70B,GAAG,oBAAqB9Q,KAAK0lC,uB,6CAKzCC,GAAY50B,IAAI,oBAAqB/Q,KAAK0lC,uB,6KAWtBrmC,IAAgBC,KAAK,CACrC,QAAS,WACTg7B,UAAW,CAAE,QAAS,gBACtBjjB,eAAgB,EAChBD,aAAc,sBACdE,MAAO,M,OAKX,IAVMQ,E,OAQW0jC,EAAe7V,GAAxBzO,QACFhgB,EAAW,GACRP,EAAI,EAAGA,EAAI6kC,EAAWnlC,OAAQM,IACnCO,EAASK,KAAKlY,IAAgBC,KAAK,CAC/B,QAAS,gBACT4lC,eAAgBsW,EAAW7kC,GAAGvX,KAC/ByY,MAAM,SAAA/I,GAAC,OAAI,Q,gBAEI6I,QAAQzC,IAAIgC,G,OAKlC,IALMggB,E,OAIAqkB,EAAa,IAAI9kC,IACdE,EAAI,EAAGA,EAAI6kC,EAAWnlC,OAAQM,IACnC4kC,EAAWjgC,IAAIkgC,EAAW7kC,GAAGvX,GAAI83B,EAAQvgB,I,iBAGZtX,IAAgBC,KAAK,CAClD,QAAS,8B,QADPg8C,E,OAMNt7C,KAAKN,SAAS,CACVoY,QACAyjC,aACAD,uB,oIAmIE,IAAD,SACkBt7C,KAAKP,MAApB6S,EADH,EACGA,EAAGqL,EADN,EACMA,QADN,EAEiF3d,KAAKjB,MAAnFu8C,EAFH,EAEGA,mBAAoBL,EAFvB,EAEuBA,WAAY7+B,EAFnC,EAEmCA,OAAQ69B,EAF3C,EAE2CA,SAAU/pB,EAFrD,EAEqDA,KAAMpY,EAF3D,EAE2DA,MAAOyjC,EAFlE,EAEkEA,WAC/DrkB,EAAYyO,GAAZzO,QAEFukB,EAAavkB,GAAWA,EAAQ7gB,OAAS,EACzCqlC,EAAwBJ,GACvBA,EAAmBlkB,aAAa/gB,OAAS,KACvC6gB,GAAWA,EAAQ7gB,OAAS2kC,KAIrC,OACI,oCACI,yBAAK/6C,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,2BAGnD,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,4BACX,kBAAC,IAAMo5C,SAAP,CAAgBC,SAAU,MACtB,kBAAC,GAAD,CACIx7B,IAAK9d,KAAK23C,UACVh3C,QAAS,CACL44C,UAAU,EACVC,MAAM,EACNC,cAAevpB,EACfwpB,SAAU,MACVC,iBAAkB,CACdC,oBAAqB,iBACrBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,IAG3BprC,QAAS3O,KAAKy3C,yBAK1B,yBAAKx3C,UAAU,uBAAuBqS,EAAE,wBACxC,kBAAC8L,EAAA,EAAD,CAAQne,UAAU,wBAAwBsZ,MAAM,UAAU0I,QAAQ,YAAY44B,kBAAgB,EAACc,UAAW,kBAAC3B,GAAD,MAAYrrC,QAAS3O,KAAK+6C,oBAC/HzoC,EAAE,qBAGTmpC,GACE,oCACI,yBAAKx7C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,aAChB4kB,GAAW,IAAItf,IAAI,SAAAtW,GAAC,OAAK,kBAAC,GAAD,CAAQ6B,IAAK7B,EAAElC,GAAIuhB,KAAMrf,EAAG8a,OAAQm/B,EAAW5wC,IAAIrJ,EAAElC,IAAK0Y,MAAOA,EAAOyiC,OAAQ,kBAAM,EAAKc,iBAAiB/5C,UAIjJo6C,GACE,oCACI,yBAAKz7C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,sBACjBgpC,EAAmBlkB,aAAaxf,IAAI,SAAAtW,GAAC,OAAK,kBAAC,GAAD,CAAmB6B,IAAK7B,EAAE8a,OAAOwC,MAAOxC,OAAQ9a,SAK3G,kBAAC,GAAD,CAAaic,KAAM09B,EAAYt9B,QAAS3d,KAAKo7C,mBACzC,kBAAC,GAAD,CAAch/B,OAAQA,EAAQhd,GAAI66C,EAAU5C,OAAQr3C,KAAK+uC,mB,GAjRvDxuC,IAAMC,WAiSb8d,GALCC,YACZtK,cACAuK,eAGWF,CAAQgmB,ICrTR/hC,eACX,0BAAMC,EAAE,uhCACR,Y,kBCkFWo5C,G,2MA9EX78C,MAAQ,CACJ0S,QAAQ,G,EAWZoqC,oCAAsC,SAAAxrC,GAAW,IACrCyrC,EAAc,EAAKr8C,MAAnBq8C,UACR,GAAKA,EAAL,CAF4C,IAIpCt2C,EAAas2C,EAAbt2C,SACR,GAAKA,EAAL,CAL4C,IAOpCsV,EAActV,EAAdsV,UACR,GAAKA,EAAL,CAR4C,IAUpCrQ,EAASqQ,EAATrQ,KACR,GAAKA,EAAL,CAX4C,IAapC7C,EAAWyI,EAAXzI,OAEJ6C,EAAKrL,KAAOwI,GAIhB,EAAK2J,mB,EAGToB,WAAa,WACT,EAAKjT,SAAS,CAAE+R,QAAQ,K,EAG5BvN,YAAc,WAAO,IAAD,EACe,EAAKzE,MAA5Bq8C,EADQ,EACRA,UAAWntC,EADH,EACGA,QAEfA,GACAA,EAAQmtC,I,mFArCZpxC,IAAUoG,GAAG,oCAAqC9Q,KAAK67C,uC,6CAIvDnxC,IAAUqG,IAAI,oCAAqC/Q,KAAK67C,uC,+BAqClD,IAAD,EAC6B77C,KAAKP,MAA/Bq8C,EADH,EACGA,UAAWrgB,EADd,EACcA,WAGXj2B,GAFYxF,KAAKjB,MAAjB0S,OAEaqqC,EAAbt2C,UACAwqB,EAA6BxqB,EAA7BwqB,cAAelV,EAActV,EAAdsV,UAEjBmV,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWre,YAAOgJ,EAAYA,EAAUrQ,KAAO,MAE/CoH,EAAMse,GAAYF,EAExB,OACI,yBAAKhwB,UAAU,eAAe0O,QAAS3O,KAAKkE,aACxC,yBAAKjE,UAAU,uBAAuBoG,MAAO,CAAEgqB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,KAAiCK,eAAgB,QAASyrB,mBAAoB,QACvIlqC,IAAQse,GACL,yBAAKlwB,UAAU,4BAA4BoG,MAAO,CAAEgqB,gBAAgB,OAAD,OAASxe,EAAT,SAGzE4pB,GAAc,oCAAE,yBAAKx7B,UAAU,uBAAsB,yBAAKA,UAAU,8BACpEuF,GAAYA,EAASA,UAAY,kBAACw2C,GAAA,EAAD,CAAcvxC,KAAMjF,EAASA,SAAUy2C,cAAc,S,GAnEhF17C,IAAMC,WCKxB07C,I,kNACFn9C,MAAQ,CACJo9C,WAAYxqC,IAAUmqC,UAAYnqC,IAAUmqC,UAAU18C,IAAM,G,EAehE8E,YAAc,SAAA43C,GACV,EAAKp8C,SAAS,CACVy8C,WAAYL,EAAU18C,KAFH,IAKfoG,EAAas2C,EAAbt2C,SACR,GAAKA,EAAL,CAEsCA,EAA9BsV,UARe,IAQMrQ,EAASjF,EAAnBA,SACnB,GAAKiF,EAAL,CAGA,IADYqH,YAAOrH,GACT,CACN,IAAMyH,EAAQxH,IAAUyH,WACxBiqC,YAAsBlqC,EAAO4pC,GAAW,GAG5Cz8C,IAAgBgI,aAAa,CACzB,QAAS,6BACTy0C,iB,mFA9BJ97C,KAAKgX,gB,oCAGM,IACHqlC,EAAgBr8C,KAAKP,MAArB48C,YACR,GAAKA,EAAL,CAEA,IAAMnqC,EAAQxH,IAAUyH,WACxBmqC,YAAuBpqC,EAAOmqC,EAAYA,gB,+BA0BpC,IAAD,SAC+Br8C,KAAKP,MAAjC6S,EADH,EACGA,EAAG+pC,EADN,EACMA,YAAa1+B,EADnB,EACmBA,QAChBw+B,EAAen8C,KAAKjB,MAApBo9C,WAEFI,EAAaF,EAAYA,YAAYjgC,OAAO,SAAA9a,GAAC,MAAwB,4BAApBA,EAAEwd,KAAK,WAE9D,OACI,oCACI,yBAAK7e,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,qBAGnD,yBAAKrS,UAAU,6DACTs8C,EAAW3kC,IAAI,SAAAtW,GAAC,OAAK,kBAAC,GAAD,CAAW6B,IAAK7B,EAAElC,GAAI08C,UAAWx6C,EAAGm6B,WAAYn6B,EAAElC,KAAO+8C,EAAYxtC,QAAS,EAAKzK,sB,GAzDjG3D,IAAMC,YAoEpByT,iBAAkBioC,I,2LCvD3BM,I,mBACF,WAAY/8C,GAAQ,IAAD,8BACf,4CAAMA,KASV0J,aAAe,SAAAjG,GACX,EAAKxD,SAAS,CAAEof,KAAM5b,EAAMyD,OAAOyC,QAEnCoyB,KAAiBnE,KAAK,4BAA6B,CAC/CvY,KAAM5b,EAAMyD,OAAOyC,MACnB2Y,QAAS,EAAK06B,SAAS,EAAK19C,MAAMwa,UAfvB,EAmBnBmjC,mBAAqB,SAAAx5C,GACjB,EAAKxD,SAAS,CAAE6Z,MAAOrW,EAAMyD,OAAOyC,QAEpCoyB,KAAiBnE,KAAK,4BAA6B,CAC/CvY,KAAM,EAAK/f,MAAM+f,KACjBiD,QAAS,EAAK06B,SAASv5C,EAAMyD,OAAOyC,UAxBzB,EA4BnBuzC,eAAiB,SAAAvzC,GACb,OAAQA,GACJ,KAAKwzC,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,IAAK,UACD,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ,EAiDnBR,SAAW,SAAArzC,GACP,OAAQA,GACJ,IAAK,MACD,OAAOwzC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,MAAO,CAAEhY,KAAM,WACnB,IAAK,SACD,OAAOiY,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQ,EAsEnBnzC,YAAc,WACV,EAAKpK,SAAS,CAAE6d,MAAM,KAvEP,EA0EnBA,KAAO,WACH,EAAK7d,SAAS,CAAE6d,MAAM,KAxEtB,EAAKxe,MAAQ,CACTwe,MAAM,EACNuB,KAAM,EAAKrf,MAAMukB,MAAMk5B,QAAQp+B,KAC/BvF,MAAO,EAAKojC,eAAe,EAAKl9C,MAAMukB,MAAMk5B,QAAQn7B,QAAQgjB,OANjD,E,sEA8ET,IACEzyB,EAAMtS,KAAKP,MAAX6S,EADH,EAEyBtS,KAAKjB,MAA3B+f,EAFH,EAEGA,KAAMvF,EAFT,EAESA,MAAOgE,EAFhB,EAEgBA,KAErB,OACI,kBAAC,IAAD,CACIC,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS3d,KAAK8J,YACd8T,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAAC,IAAD,CAAaze,GAAG,sBAAsBkT,EAAE,eACxC,kBAAC,KAAD,KACI,kBAAC6qC,GAAA,EAAD,CAAaC,UAAU,WAAWn9C,UAAU,qBACxC,kBAACo9C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxB9qC,EAAE,UAEP,kBAACirC,GAAA,EAAD,CACIjkC,aAAW,QACXy4B,KAAK,SACL9xC,UAAU,qBACVmJ,MAAO0V,EACPnP,SAAU3P,KAAKmJ,cACf,kBAACq0C,GAAA,EAAD,CAAkBp0C,MAAM,QAAQq0C,QAAS,kBAACjK,GAAA,EAAD,CAAOj6B,MAAM,YAAciW,MAAM,UAC1E,kBAACguB,GAAA,EAAD,CAAkBp0C,MAAM,OAAOq0C,QAAS,kBAACjK,GAAA,EAAD,CAAOj6B,MAAM,YAAciW,MAAM,WAGjF,kBAAC2tB,GAAA,EAAD,CAAaC,UAAU,WAAWn9C,UAAU,qBACxC,kBAACo9C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxB9qC,EAAE,WAEP,kBAACirC,GAAA,EAAD,CACIjkC,aAAW,SACXy4B,KAAK,UACL9xC,UAAU,qBACVmJ,MAAOmQ,EACP5J,SAAU3P,KAAK08C,oBACf,kBAACc,GAAA,EAAD,CACIp0C,MAAM,MACNq0C,QACI,kBAACjK,GAAA,EAAD,CACIj6B,MAAM,UACNjK,QAAS,CACLjF,KAAM,sBAIlBmlB,MAAM,QAEV,kBAACguB,GAAA,EAAD,CACIp0C,MAAM,SACNq0C,QACI,kBAACjK,GAAA,EAAD,CACIj6B,MAAM,UACNjK,QAAS,CACLjF,KAAM,yBAIlBmlB,MAAM,WAEV,kBAACguB,GAAA,EAAD,CACIp0C,MAAM,QACNq0C,QACI,kBAACjK,GAAA,EAAD,CACIj6B,MAAM,UACNjK,QAAS,CACLjF,KAAM,wBAIlBmlB,MAAM,UAEV,kBAACguB,GAAA,EAAD,CACIp0C,MAAM,QACNq0C,QACI,kBAACjK,GAAA,EAAD,CACIj6B,MAAM,UACNjK,QAAS,CACLjF,KAAM,wBAIlBmlB,MAAM,UAEV,kBAACguB,GAAA,EAAD,CACIp0C,MAAM,OACNq0C,QACI,kBAACjK,GAAA,EAAD,CACIj6B,MAAM,UACNjK,QAAS,CACLjF,KAAM,uBAIlBmlB,MAAM,SAEV,kBAACguB,GAAA,EAAD,CACIp0C,MAAM,SACNq0C,QACI,kBAACjK,GAAA,EAAD,CACIj6B,MAAM,UACNjK,QAAS,CACLjF,KAAM,yBAIlBmlB,MAAM,WAEV,kBAACguB,GAAA,EAAD,CACIp0C,MAAM,aACNq0C,QACI,kBAACjK,GAAA,EAAD,CACIj6B,MAAM,UACNjK,QAAS,CACLjF,KAAM,8BAIlBmlB,MAAM,wB,GAvMZjvB,IAAMC,YA0NjB8d,GAPCC,YACZkI,cACAi3B,KACAzpC,cACAyS,cAGWpI,CAAQk+B,IClOjBmB,I,mBACF,WAAYl+C,GAAQ,IAAD,8BACf,4CAAMA,KAUVm+C,iBAAmB,WACf,EAAKC,eAAe3jC,QAAQqD,QAZb,EAmBnBvG,YAAc,WACV3X,IAAgBC,KAAK,CACjB,QAAS,iBACTw+C,gBAAgB,IACjBv+C,KAAK,SAAA88C,GAAW,OAAI,EAAK38C,SAAS,CAAE28C,mBAvBxB,EA0BnB0B,mBAAqB,WACZ,EAAKh/C,MAAMs9C,aAEhB,EAAK38C,SAAS,CACVq+C,oBAAoB,KA9BT,EAkCnBC,oBAAsB,WAClB,EAAKt+C,SAAS,CACVq+C,oBAAoB,KAjCxB,EAAKh/C,MAAQ,CACTs9C,YAAa,KACb0B,oBAAoB,GAGxB,EAAKF,eAAiBt9C,IAAM4c,YARb,E,iFAgBfnd,KAAKgX,gB,+BAwBC,IAAD,EACkBhX,KAAKP,MAApB6S,EADH,EACGA,EAAGqL,EADN,EACMA,QADN,EAEuC3d,KAAKjB,MAAzCs9C,EAFH,EAEGA,YAAa0B,EAFhB,EAEgBA,mBAErB,OACI,oCACI,yBAAK99C,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,sBAGnD,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC0hB,GAAA,EAAD,CAAUtD,WAAW,EAAOpe,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS3O,KAAK+9C,oBAC5E,kBAACl8B,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,qBAE7B,kBAACqP,GAAA,EAAD,CAAUtD,WAAW,EAAOpe,UAAU,qBAAqB2hB,QAAM,EAACjT,QAAS3O,KAAK49C,kBAC5E,kBAAC/7B,GAAA,EAAD,KACI,kBAACo8B,GAAD,OAEJ,kBAACn8B,GAAA,EAAD,CAAcC,QAASzP,EAAE,mBAIrC,kBAAC,GAAD,CAAaiL,KAAMwgC,EAAoBpgC,QAAS3d,KAAKg+C,qBACjD,kBAAC,GAAD,CAAgB3B,YAAaA,KAEjC,kBAAC,GAAD,CAAav+B,IAAK9d,KAAK69C,sB,GA1EjBt9C,IAAMC,YA0Fb8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQq/B,IC/FjBO,I,mBACF,WAAYz+C,GAAQ,IAAD,uBACf,4CAAMA,KAUV0J,aAAe,SAAAmoB,GACX,EAAK5xB,SAAS,CAAE4xB,aAEhBjyB,IAAgBgI,aAAa,CAAE,QAAS,6BAA8BiqB,cAdvD,IAGPN,EAASvxB,EAATuxB,KACFM,EAAWN,EAAOA,EAAKM,SAAW,KAJzB,OAMf,EAAKvyB,MAAQ,CACTuyB,SAAUA,GAAY,MAPX,E,sEAiBT,IAAD,SACkBtxB,KAAKP,MAApB6S,EADH,EACGA,EAAGqL,EADN,EACMA,QACH2T,EAAatxB,KAAKjB,MAAlBuyB,SAGF6sB,GAFOhY,KAAkBxlB,MAAQ,CAAEy9B,eAAgB,KAElCA,eAAexmC,IAAI,SAAAtW,GAAC,OACvC,yBAAK6B,IAAK7B,EAAElC,GAAIa,UAAU,gBAAgB0O,QAAS,kBAAM,EAAKxF,aAAa7H,EAAElC,MACzE,kBAACo0C,GAAA,EAAD,CACIj6B,MAAM,UACNtZ,UAAU,wBACVoiB,QAASiP,IAAahwB,EAAElC,GACxBi/C,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CAAc1iB,GAAG,UAAU2iB,QAASzgB,EAAEywC,KAAM0I,UAAWn5C,EAAEi9C,iBAIjE,OACI,oCACI,yBAAKt+C,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,eAGnD,yBAAKrS,UAAU,wBAAwBk+C,Q,GA9ChC59C,IAAMC,YA8Dd8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQ4/B,I,4kBC5DjBr9B,G,YACF,WAAYphB,GAAQ,IAAD,uBACf,4CAAMA,KAsDV++C,cAAgB,SAAAC,GACZ,IAAMC,EAAW,EAAK3/C,MAAM0/C,GAC5B,GAAKC,EAAL,CAFwB,IAKlBC,EAAW,MAAQD,EAAR,CAAkBE,SAAuB,IADrCF,EAAbE,SACsD,QAAqB,IAEnF,EAAKl/C,SAAL,eAAiB++C,EAAWE,MA9Db,EAiEnBE,kBAAoB,SAAAJ,GAChB,IAAMC,EAAW,EAAK3/C,MAAM0/C,GAC5B,GAAKC,EAAL,CAF4B,IAKtBC,EAAW,MAAQD,EAAR,CAAkBI,cADVJ,EAAjBI,eAGR,EAAKp/C,SAAL,eAAiB++C,EAAWE,MAxEb,EA2EnBI,oBAAsB,WAClB,EAAKr/C,SAAS,CAAEs/C,eAAgB,EAAKjgD,MAAMigD,iBAzE3C,IAAMC,EAAsB1oC,KAAY5L,IAAI,4CAH7B,OAKf,EAAK5L,MAAQ,CACTmgD,qBAAsBz9B,KAAkBi9B,SAAS/zC,IAAI,yCACrDw0C,mBAAoB19B,KAAkBi9B,SAAS/zC,IAAI,uCACnDy0C,qBAAsB39B,KAAkBi9B,SAAS/zC,IAAI,yCACrDq0C,eAAgBC,IAAwBA,EAAoB71C,OATjD,E,oFAaK,IAAD,EACuEpJ,KAAKjB,MAAvFmgD,EADW,EACXA,qBAAsBC,EADX,EACWA,mBAAoBC,EAD/B,EAC+BA,qBAAsBJ,EADrD,EACqDA,cACxEh/C,KAAKq/C,6BAA6B,wCAAyCH,GAC3El/C,KAAKq/C,6BAA6B,sCAAuCF,GACzEn/C,KAAKq/C,6BAA6B,wCAAyCD,GAC3Ep/C,KAAKs/C,uBAAuBN,K,+CAGN,IACdA,EAAkBh/C,KAAKjB,MAAvBigD,cAEFC,EAAsB1oC,KAAY5L,IAAI,8CAClBs0C,IAAwBA,EAAoB71C,SAC7C41C,GAEzB3/C,IAAgBC,KAAK,CACjB,QAAS,YACTyyC,KAAM,2CACN3oC,MAAO,CACH,QAAS,qBACTA,OAAQ41C,O,mDAKS99B,EAAOw9B,GAChC,GAAKx9B,GACAw9B,EAAL,CACA,IAAMa,EAAc99B,KAAkBi9B,SAAS/zC,IAAIuW,GACnD,GAAKq+B,EAAL,CAJ0C,IAMlCX,EAA2BF,EAA3BE,SAAUE,EAAiBJ,EAAjBI,aACAU,EAA6CD,EAAvDX,SAAoCa,EAAmBF,EAAjCT,aAC1BF,IAAaY,GAAcV,IAAiBW,GAEhDpgD,IAAgBC,KAAK,CACjB,QAAS,+BACT4hB,MAAO,CAAE,QAASA,GAClBw+B,sBAAuBhB,Q,gCA4BrBA,GACN,QAAKA,GAIe,IAFCA,EAAbE,W,kCAKAF,GACR,QAAKA,GAEoBA,EAAjBI,e,+BAKF,IAAD,SACkB9+C,KAAKP,MAApB6S,EADH,EACGA,EAAGqL,EADN,EACMA,QADN,EAEqF3d,KAAKjB,MAAvFmgD,EAFH,EAEGA,qBAAsBC,EAFzB,EAEyBA,mBAAoBC,EAF7C,EAE6CA,qBAAsBJ,EAFnE,EAEmEA,cAExE,OACI,oCACI,yBAAK/+C,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,oBAGnD,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,8BAClB,yBAAKrS,UAAU,gBAAgB0O,QAAS,kBAAM,EAAK6vC,cAAc,0BAC7D,kBAACmB,GAAA,EAAD,CACIpmC,MAAM,UACNtZ,UAAU,wBACVoiB,QAASriB,KAAK4/C,UAAUV,GACxBb,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CACI1iB,GAAG,UACH2iB,QAASzP,EAAE,gCACXmoC,UACIz6C,KAAK4/C,UAAUV,GACT5sC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKrS,UAAU,gBAAgB0O,QAAS,kBAAM,EAAKkwC,kBAAkB,0BACjE,kBAACc,GAAA,EAAD,CACIpmC,MAAM,UACNtZ,UAAU,wBACVoiB,QAASriB,KAAK6/C,YAAYX,GAC1Bb,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CACI1iB,GAAG,UACH2iB,QAASzP,EAAE,kBACXmoC,UACIz6C,KAAK6/C,YAAYX,GAAwB5sC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKrS,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,wBAClB,yBAAKrS,UAAU,gBAAgB0O,QAAS,kBAAM,EAAK6vC,cAAc,wBAC7D,kBAACmB,GAAA,EAAD,CACIpmC,MAAM,UACNtZ,UAAU,wBACVoiB,QAASriB,KAAK4/C,UAAUT,GACxBd,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CACI1iB,GAAG,UACH2iB,QAASzP,EAAE,0BACXmoC,UACIz6C,KAAK4/C,UAAUT,GACT7sC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKrS,UAAU,gBAAgB0O,QAAS,kBAAM,EAAKkwC,kBAAkB,wBACjE,kBAACc,GAAA,EAAD,CACIpmC,MAAM,UACNtZ,UAAU,wBACVoiB,QAASriB,KAAK6/C,YAAYV,GAC1Bd,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CACI1iB,GAAG,UACH2iB,QAASzP,EAAE,kBACXmoC,UACIz6C,KAAK6/C,YAAYV,GAAsB7sC,EAAE,kBAAoBA,EAAE,uBAK/E,yBAAKrS,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,0BAClB,yBAAKrS,UAAU,gBAAgB0O,QAAS,kBAAM,EAAK6vC,cAAc,0BAC7D,kBAACmB,GAAA,EAAD,CACIpmC,MAAM,UACNtZ,UAAU,wBACVoiB,QAASriB,KAAK4/C,UAAUR,GACxBf,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CACI1iB,GAAG,UACH2iB,QAASzP,EAAE,4BACXmoC,UACIz6C,KAAK4/C,UAAUR,GACT9sC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKrS,UAAU,gBAAgB0O,QAAS,kBAAM,EAAKkwC,kBAAkB,0BACjE,kBAACc,GAAA,EAAD,CACIpmC,MAAM,UACNtZ,UAAU,wBACVoiB,QAASriB,KAAK6/C,YAAYT,GAC1Bf,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CACI1iB,GAAG,UACH2iB,QAASzP,EAAE,kBACXmoC,UACIz6C,KAAK6/C,YAAYT,GAAwB9sC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKrS,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,uBAClB,yBAAKrS,UAAU,gBAAgB0O,QAAS3O,KAAK++C,qBACzC,kBAACY,GAAA,EAAD,CACIpmC,MAAM,UACNtZ,UAAU,wBACVoiB,QAAS28B,EACTX,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACx8B,GAAA,EAAD,CACI1iB,GAAG,UACH2iB,QAASzP,EAAE,iBACXmoC,UAA2BnoC,EAAhB0sC,EAAkB,uBAA4B,mC,GA9O7Dz+C,IAAMC,WAkQnB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQuC,IC9QRte,eACX,uBAAG61B,UAAU,kCAAkC3B,SAAS,WACpD,0BAAMj0B,EAAE,ygBAEZ,QCOEs9C,I,kNACF/gD,MAAQ,CACJmpB,aAAa,EACb5hB,KAAM,EACNE,IAAK,G,EAGTozB,kBAAoB,SAAA12B,GACZA,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAHe,IAMjBm7C,EAAY,EAAKtgD,MAAjBsgD,QACR,GAAKA,IACDA,EAAQC,WAIZ,GAFwB,EAAKjhD,MAArBmpB,YAGJ,EAAKxoB,SAAS,CAAEwoB,aAAa,QAC1B,CACH,IAAM5hB,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QAElB,EAAKrJ,SAAS,CACVwoB,aAAa,EACb5hB,OACAE,U,EAKZ4hB,uBAAyB,SAAAllB,GACrB,EAAKxD,SAAS,CACVwoB,aAAa,EACb5hB,KAAM,EACNE,IAAK,K,EAIby5C,gBAAkB,SAAA/8C,GACd,EAAKklB,uBAAuBllB,GADL,MAGU,EAAKzD,OAEtCygD,EALuB,EAGfA,aAHe,EAGFH,U,wEAKf,IAAD,EACkB//C,KAAKP,MAApBsgD,EADH,EACGA,QAASztC,EADZ,EACYA,EACjB,IAAKytC,EAAS,OAAO,KAFhB,MAI8B//C,KAAKjB,MAAhCuH,EAJH,EAIGA,KAAME,EAJT,EAISA,IAAK0hB,EAJd,EAIcA,YAEf83B,EAUAD,EAVAC,WACAG,EASAJ,EATAI,iBACAC,EAQAL,EARAK,oBACAC,EAOAN,EAPAM,aACAC,EAMAP,EANAO,SACAC,EAKAR,EALAQ,eACAC,EAIAT,EAJAS,GACAC,EAGAV,EAHAU,OACAC,EAEAX,EAFAW,QACAC,EACAZ,EADAY,iBAEEC,GAAYZ,EAElB,OACI,oCACI,kBAACr+B,GAAA,EAAD,CAAU1hB,UAAU,qBAAqB2hB,QAAM,EAACyG,cAAeroB,KAAK45B,mBAChE,yBAAK35B,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eAAf,UAAiCkgD,EAAjC,YAAqDC,IACpDQ,GACG,yBAAK3gD,UAAU,gBAAgBiqC,YAAe,CAAEhZ,KAAMyvB,MAG9D,yBAAK1gD,UAAU,qBAAf,UAAuCogD,EAAvC,aAAwDC,EAAxD,YAAoEC,IACpE,yBAAKtgD,UAAU,qBAAf,UACQugD,EADR,OAEKC,GAAM,UAAOA,EAAP,MACNC,GAAO,UAAOA,MAI3B,kBAACj5B,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACtB,kBAACojB,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKigD,iBACpB,kBAACp+B,GAAA,EAAD,KACI,kBAACg/B,GAAD,OAEJ,kBAAC/+B,GAAA,EAAD,CAAcC,QAASzP,EAAE,uB,GAzG/B/R,IAAMC,YAuHbyT,iBAAkB6rC,IClH3BgB,I,kNACF/hD,MAAQ,CACJwe,MAAM,EACNwjC,SAAS,EACThB,QAAS,M,EAGbE,gBAAkB,SAAAF,GACd,EAAKrgD,SAAS,CACV6d,MAAM,EACNwiC,a,EAIRiB,wBAA0B,WACtB,EAAKthD,SAAS,CACVqhD,SAAS,K,EAIjBE,wBAA0B,WACtB,EAAKvhD,SAAS,CACV6d,MAAM,EACNwiC,QAAS,Q,EAIjBmB,uB,qBAAyB,8BAAA3sC,EAAA,wDACb4sC,EAAa,EAAK1hD,MAAlB0hD,SACApB,EAAY,EAAKhhD,MAAjBghD,QAFa,wDAKrB,EAAKrgD,SAAS,CACV6d,MAAM,EACNwiC,QAAS,OAPQ,SAUf1gD,IAAgBC,KAAK,CACvB,QAAS,mBACT8hD,WAAYrB,EAAQ3gD,KAZH,OAerB+hD,EAASA,SAAWA,EAASA,SAAS/kC,OAAO,SAAA9a,GAAC,OAAIA,EAAElC,KAAO2gD,EAAQ3gD,KACnE,EAAKmS,cAhBgB,yC,EAmBzB8vC,2BAA6B,WACzB,EAAK3hD,SAAS,CACVqhD,SAAS,K,EAIjBO,0B,qBAA4B,4BAAA/sC,EAAA,4DAChB4sC,EAAa,EAAK1hD,MAAlB0hD,SAER,EAAKzhD,SAAS,CACVqhD,SAAS,IAJW,SAOlB1hD,IAAgBC,KAAK,CACvB,QAAS,8BARW,OAWxB6hD,EAASA,SAAWA,EAASA,SAAS/kC,OAAO,SAAA9a,GAAC,OAAKA,EAAE0+C,aACrD,EAAKzuC,cAZmB,yC,wEAelB,IAAD,SAC4BvR,KAAKP,MAA9B6S,EADH,EACGA,EAAG6uC,EADN,EACMA,SAAUxjC,EADhB,EACgBA,QADhB,EAEqB3d,KAAKjB,MAAvBwe,EAFH,EAEGA,KAAMwjC,EAFT,EAESA,QAER7mC,EAAUinC,EAASA,SAAS9hC,KAAK,SAAA/d,GAAC,OAAIA,EAAE0+C,aACxCuB,EAAQJ,EAASA,SAAS/kC,OAAO,SAAA9a,GAAC,OAAKA,EAAE0+C,aAE/C,OACI,oCACI,yBAAK//C,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,oBAGnD,yBAAKrS,UAAU,wBACVipB,QAAQhP,IACL,yBAAKja,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,mBAClB,kBAAC,GAAD,CAASytC,QAAS7lC,EAASgmC,YAAalgD,KAAKigD,kBAC5CsB,EAAMlrC,OAAS,GACZ,kBAACsL,GAAA,EAAD,CACI1hB,UAAU,qBACV2hB,QAAM,EACN4/B,eAAa,EACb7yC,QAAS3O,KAAKghD,yBACd,kBAACn/B,GAAA,EAAD,KACI,kBAACg/B,GAAD,CAAUtnC,MAAM,eAEpB,kBAACuI,GAAA,EAAD,CACI2/B,uBAAwB,CAAEloC,MAAO,aACjCwI,QAASzP,EAAE,4BAM9BivC,EAAMlrC,OAAS,GACZ,oCACI,yBAAKpW,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,kBACjBivC,EAAM3pC,IAAI,SAAAtW,GAAC,OACR,kBAAC,GAAD,CAAS6B,IAAK7B,EAAElC,GAAI2gD,QAASz+C,EAAG4+C,YAAa,EAAKD,uBAMtE,kBAAC,IAAD,CACIziC,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS3d,KAAKihD,wBACdrjC,kBAAgB,qBAChB,kBAAC,IAAD,CAAaxe,GAAG,qBAAqBkT,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,CAAmB9oC,MAAO,CAAEgP,WAAY,aACnC/C,EAAE,0BAGX,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAKihD,wBAAyB1nC,MAAM,WAChDjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAKkhD,uBAAwB3nC,MAAM,WAC/CjH,EAAE,SAIf,kBAAC,IAAD,CACIkL,QAASC,KACTC,mBAAoB,EACpBH,KAAMwjC,EACNpjC,QAAS3d,KAAKqhD,2BACdzjC,kBAAgB,qBAChB,kBAAC,IAAD,CAAaxe,GAAG,qBAAqBkT,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,CAAmB9oC,MAAO,CAAEgP,WAAY,aACnC/C,EAAE,wBAGX,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAKqhD,2BAA4B9nC,MAAM,WACnDjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAKshD,0BAA2B/nC,MAAM,WAClDjH,EAAE,c,GA5JF/R,IAAMC,YAgLpB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQwiC,IChMRv+C,eACX,0BAAMC,EAAE,81BACR,WCgBEk/C,I,OAAcnhD,IAAMohD,KAAK,YAAqC,IAAlCrxC,EAAiC,EAAjCA,OAAQ3B,EAAyB,EAAzBA,QAASizC,EAAgB,EAAhBA,UAAgB,EACzBrhD,IAAMshD,UAAS,GADU,mBACxD35B,EADwD,KAC3C45B,EAD2C,OAEzCvhD,IAAMshD,SAAS,GAF0B,mBAExDr7C,EAFwD,KAEnDu7C,EAFmD,OAGvCxhD,IAAMshD,SAAS,GAHwB,mBAGxDv7C,EAHwD,KAGlD07C,EAHkD,KAIvD1vC,EAAM2vC,cAAN3vC,EAmBF8V,EAAyB,WAC3B05B,GAAe,GACfE,EAAQ,GACRD,EAAO,IAYX,OACI,oCACI,kBAACpgC,GAAA,EAAD,CAAU1hB,UAAU,qBAAqB2hB,QAAM,EAACjT,QAXpC,WAChBA,EAAQ2B,IAUkE+X,cAlCpD,SAAAnlB,GAMtB,GALIA,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAGNsjB,EACA45B,GAAe,OACZ,CAAC,IACIh5C,EAAqB5F,EAArB4F,QAASC,EAAY7F,EAAZ6F,QAEjB+4C,GAAe,GACfE,EAAQl5C,GACRi5C,EAAOh5C,MAsBH,kBAAC,KAAD,CAAMuH,OAAQA,KAElB,kBAACmX,GAAA,EAAD,CACIlK,KAAM2K,EACNvK,QAASyK,EACTV,gBAAgB,iBAChBL,eAAgB,CAAE7gB,MAAKF,QACvBqhB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBACtB,kBAACojB,GAAA,EAAD,CAAUrZ,QAzBJ,WAClByZ,IACAw5B,EAAUtxC,KAwBM,kBAACuR,GAAA,EAAD,KACI,kBAACqgC,GAAD,OAEJ,kBAACpgC,GAAA,EAAD,CAAcC,QAASzP,EAAE,oBAc3C6vC,G,2MAcFC,c,sCAAgB,WAAM9xC,GAAN,SAAAiE,EAAA,qEACNlV,IAAgBC,KAAK,CACxB,QAAS,cACRiR,QAASD,IAHD,yC,yIAXZtQ,KAAKgX,gB,oCAGM,IACHyO,EAAUzlB,KAAKP,MAAfgmB,MAEFvT,EAAQxH,IAAUyH,WAExBuQ,YAAiBxQ,EAAOuT,EAAM+Z,Y,+BAUxB,IAAD,SACyBx/B,KAAKP,MAA3Bke,EADH,EACGA,QAAS8H,EADZ,EACYA,MAAOnT,EADnB,EACmBA,EAExB,OACI,oCACI,yBAAKrS,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,mBAGnD,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,wBACTwlB,EAAM+Z,SAASnpB,OAAS,EACtB,oCACI,kBAAC,GAAD,CAAes0B,WAAS,GAAEr4B,EAAE,qBAExBmT,EAAM+Z,SAAS5nB,IAAI,SAAAtW,GAAC,OAAI,kBAACogD,GAAD,CAAav+C,IAAK7B,EAAGgP,OAAQhP,EAAGqN,QAASgV,KAAUi+B,UAAW,EAAKQ,mBAInG,kBAAC,GAAD,KAAgB9vC,EAAE,qB,GA5CnB/R,IAAMC,WAyDlByT,iBAAkBkuC,ICvJlB5/C,eACX,uBAAG61B,UAAU,iCAAiC3B,SAAS,WACnD,0BAAMj0B,EAAE,q3BAEZ,UCJWD,eACX,uBAAG61B,UAAU,kCAAkC3B,SAAS,WACpD,0BAAMj0B,EAAE,2mCAEZ,gB,kkBCaE6/C,G,2MACFtjD,MAAQ,CACJoiD,SAAU,KACV17B,MAAO,KACP68B,kBAAkB,EAClBC,oBAAoB,G,EAaxB7iC,qBAAuB,SAAArP,GAAW,IACtBE,EAA4BF,EAA5BE,QAASiyC,EAAmBnyC,EAAnBmyC,eACT/8B,EAAU,EAAK1mB,MAAf0mB,MACR,GAAKA,EAAL,CAH6B,IAKrB8F,EAA0B9F,EAA1B8F,YAAaiU,EAAa/Z,EAAb+Z,SACbijB,EAAeD,EAAfC,WAEJA,MADiD,IAA/BjjB,EAASxiB,QAAQzM,MAGnCkyC,EACA,EAAK/iD,SAAS,CACV+lB,MAAM,MACCA,EADF,CAED8F,YAAaA,EAAc,EAC3BiU,SAAS,CAAEjvB,GAAH,oBAAeivB,QAI/B,EAAK9/B,SAAS,CACV+lB,MAAM,MACCA,EADF,CAED8F,YAAaA,EAAc,EAC3BiU,SAAUA,EAASpjB,OAAO,SAAA9a,GAAC,OAAIA,IAAMiP,W,EAkBrDgyC,mBAAqB,WACZ,EAAKxjD,MAAMoiD,UAEhB,EAAKzhD,SAAS,CACV6iD,oBAAoB,K,EAI5BG,oBAAsB,WAClB,EAAKhjD,SAAS,CACV6iD,oBAAoB,K,EAI5BD,iBAAmB,WACV,EAAKvjD,MAAM0mB,OAEhB,EAAK/lB,SAAS,CACV4iD,kBAAkB,K,EAI1BK,kBAAoB,WAChB,EAAKjjD,SAAS,CACV4iD,kBAAkB,K,mFA1EtBtiD,KAAKgX,cAELvG,IAAUK,GAAG,qBAAsB9Q,KAAK0f,wB,6CAIxCjP,IAAUM,IAAI,qBAAsB/Q,KAAK0f,wB,uJAiCzCrgB,IAAgBC,KAAK,CACjB,QAAS,sBACVC,KAAK,SAAA4hD,GAAQ,OAAI,EAAKzhD,SAAS,CAAEyhD,eAEpC9hD,IAAgBC,KAAK,CACjB,QAAS,kBACT8rB,OAAQ,EACR9T,MAAO,MACR/X,KAAK,SAAAkmB,GAAK,OAAI,EAAK/lB,SAAS,CAAE+lB,Y,8HA+B3B,IAAD,EACkBzlB,KAAKP,MAApB6S,EADH,EACGA,EAAGqL,EADN,EACMA,QADN,EAE6D3d,KAAKjB,MAA/DujD,EAFH,EAEGA,iBAAkB78B,EAFrB,EAEqBA,MAAO88B,EAF5B,EAE4BA,mBAAoBpB,EAFhD,EAEgDA,SAE/CyB,EACFzB,GAAYA,EAASA,SAAS9qC,OAAS,EACJ,IAA7B8qC,EAASA,SAAS9qC,OACd,YADJ,UAEO8qC,EAASA,SAAS9qC,OAFzB,aAGA,YAEJwsC,EACFp9B,GAASA,EAAM8F,YAAc,EACD,IAAtB9F,EAAM8F,YACF,SADJ,UAEO9F,EAAM8F,YAFb,UAGA,WAEV,OACI,oCACI,yBAAKtrB,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAK1d,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,sBAGnD,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC0hB,GAAA,EAAD,CACI1hB,UAAU,sBACVozC,UAAMC,EACN1xB,QAAM,EACNjT,QAAS3O,KAAKsiD,kBACd,kBAACzgC,GAAA,EAAD,CAAc5hB,UAAU,2BACpB,kBAAC6iD,GAAD,OAEJ,kBAAChhC,GAAA,EAAD,CACI1iB,GAAG,UACHa,UAAU,0BACV8hB,QAASzP,EAAE,gBACXmoC,UAAWoI,KAGnB,kBAAClhC,GAAA,EAAD,CACI1hB,UAAU,sBACVozC,UAAMC,EACN1xB,QAAM,EACNjT,QAAS3O,KAAKuiD,oBACd,kBAAC1gC,GAAA,EAAD,CAAc5hB,UAAU,2BACpB,kBAAC8iD,GAAD,OAEJ,kBAACjhC,GAAA,EAAD,CACI1iB,GAAG,UACHa,UAAU,0BACV8hB,QAASzP,EAAE,iBACXmoC,UAAWmI,MAIvB,yBAAK3iD,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBqS,EAAE,iBAClB,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,sBAAsBozC,UAAMC,EAAW1xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACI7hB,UAAU,2BACV8hB,QAASzP,EAAE,qBACXmoC,UAAWnoC,EAAE,uBAGrB,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,sBAAsBozC,UAAMC,EAAW1xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACI7hB,UAAU,2BACV8hB,QAASzP,EAAE,iBACXmoC,UAAWnoC,EAAE,wBAGrB,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,sBAAsBozC,UAAMC,EAAW1xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACI7hB,UAAU,2BACV8hB,QAASzP,EAAE,4BACXmoC,UAAWnoC,EAAE,wBAGrB,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,sBAAsBozC,UAAMC,EAAW1xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACI7hB,UAAU,2BACV8hB,QAASzP,EAAE,wBACXmoC,UAAWnoC,EAAE,wBAGrB,kBAACqP,GAAA,EAAD,CAAU1hB,UAAU,sBAAsBozC,UAAMC,EAAW1xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACI7hB,UAAU,2BACV8hB,QAASzP,EAAE,eACXmoC,UAAWnoC,EAAE,0BAK7B,kBAAC,GAAD,CAAaiL,KAAM+kC,EAAkB3kC,QAAS3d,KAAK2iD,mBAC/C,kBAAC,GAAD,CAAcl9B,MAAOA,KAEzB,kBAAC,GAAD,CAAalI,KAAMglC,EAAoB5kC,QAAS3d,KAAK0iD,qBACjD,kBAAC,GAAD,CAAgBvB,SAAUA,U,GAhMhB5gD,IAAMC,WAiNrB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQ+jC,ICjNjBW,I,mBACF,WAAYvjD,GAAQ,IAAD,8BACf,4CAAMA,KAsBVuS,kBAAoB,SAAA3B,GAAW,IACnBQ,EAAW,EAAKpR,MAAhBoR,OACAoB,EAAmB5B,EAAnB4B,QAASL,EAAUvB,EAAVuB,MAEjB,GAAIK,IAAYpB,GACXe,EAAL,CAEA,IAAMM,EAAQxH,IAAUC,MACxByH,YAAgBF,EAAOrB,GAAQ,KA/BhB,EAiDnBoyC,gBAAkB,WACd,EAAKvjD,SAAS,CACVujD,iBAAiB,KAnDN,EAuDnBC,iBAAmB,WACf,EAAKxjD,SAAS,CACVujD,iBAAiB,KAzDN,EA6DnBE,YAAc,WACV,EAAKzjD,SAAS,CACVyjD,aAAa,KA/DF,EAmEnBC,aAAe,WACX,EAAK1jD,SAAS,CACVyjD,aAAa,KArEF,EAyEnBE,kBAAoB,WAChB,EAAK3jD,SAAS,CACV2jD,mBAAmB,KA3ER,EA+EnBC,mBAAqB,WACjB,EAAK5jD,SAAS,CACV2jD,mBAAmB,KAjFR,EAqFnBE,oBAAsB,WAClB,EAAK7jD,SAAS,CACV6jD,qBAAqB,KAvFV,EA2FnBC,qBAAuB,WACnB,EAAK9jD,SAAS,CACV6jD,qBAAqB,KA7FV,EAiGnBE,aAAe,WACX,EAAK/jD,SAAS,CACV+jD,cAAc,KAnGH,EAuGnBC,cAAgB,WACZ,EAAKhkD,SAAS,CACV+jD,cAAc,KAzGH,EA6GnBE,YAAc,WACV,EAAKjkD,SAAS,CACVikD,aAAa,KA/GF,EAmHnBC,aAAe,WACX,EAAKlkD,SAAS,CACVikD,aAAa,KArHF,EAyHnBE,oBAAsB,WAClBxkD,IAAgBgI,aAAa,CACzB,QAAS,uBACTkW,MAAM,KAzHV,EAAKxe,MAAQ,CACTkkD,iBAAiB,EACjBE,aAAa,EACbE,mBAAmB,EACnBE,qBAAqB,EACrBE,cAAc,EACdE,aAAa,GATF,E,iFAcf3jD,KAAKgX,cAELrF,IAAUb,GAAG,kBAAmB9Q,KAAKgS,qB,6CAIrCL,IAAUZ,IAAI,kBAAmB/Q,KAAKgS,qB,6JAe9BnB,EAAW7Q,KAAKP,MAAhBoR,OAEFqB,EAAQxH,IAAUyH,WAExBC,YAAgBF,EAAOrB,GAAQ,G,SAEVxR,IAAgBC,KAAK,CACtC,QAAS,kBACTiR,QAASE,IAAUgH,Y,OAFjBjY,E,OAKNiR,IAAUqzC,YAAYrzC,IAAUgH,UAAWjY,G,mIAkFrC,IAAD,EACqBQ,KAAKP,MAAvBoR,EADH,EACGA,OAAQ2R,EADX,EACWA,MADX,EAEuGxiB,KAAKjB,MAAzGkkD,EAFH,EAEGA,gBAAiBE,EAFpB,EAEoBA,YAAaE,EAFjC,EAEiCA,kBAAmBE,EAFpD,EAEoDA,oBAAqBE,EAFzE,EAEyEA,aAAcE,EAFvF,EAEuFA,YAE5F,OACI,oCACI,kBAAC,GAAD,CACI9yC,OAAQA,EACR2R,MAAOA,EACP7E,QAAS3d,KAAK6jD,oBACdxU,cAAervC,KAAKijD,gBACpB3T,UAAWtvC,KAAKmjD,YAChB5T,gBAAiBvvC,KAAKqjD,kBACtB7T,kBAAmBxvC,KAAKujD,oBACxB9T,WAAYzvC,KAAKyjD,aACjB/T,UAAW1vC,KAAK2jD,cAEpB,kBAAC,GAAD,CAAapmC,KAAM0lC,EAAiBtlC,QAAS3d,KAAKkjD,kBAC9C,kBAAC,GAAD,CAAaryC,OAAQA,KAEzB,kBAAC,GAAD,CAAa0M,KAAM4lC,EAAaxlC,QAAS3d,KAAKojD,cAC1C,kBAAC,GAAD,CAASvyC,OAAQA,KAErB,kBAAC,GAAD,CAAa0M,KAAM8lC,EAAmB1lC,QAAS3d,KAAKsjD,oBAChD,kBAAC,GAAD,CAAezyC,OAAQA,KAE3B,kBAAC,GAAD,CAAa0M,KAAMgmC,EAAqB5lC,QAAS3d,KAAKwjD,sBAClD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAajmC,KAAMomC,EAAahmC,QAAS3d,KAAK4jD,cAC1C,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAarmC,KAAMkmC,EAAc9lC,QAAS3d,KAAK0jD,eAC3C,kBAAC,GAAD,Y,GAlKGnjD,IAAMC,YAoLd8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQ0kC,ICrLjBe,I,qMACoBnxC,EAAWC,EAAWsqB,GAAc,IAAD,EAC3Bn9B,KAAKP,MAAvB6Q,EAD6C,EAC7CA,OAAQjK,EADqC,EACrCA,MAChB,OAAIuM,EAAUtC,SAAWA,GAIrBsC,EAAUvM,MAAMG,MAAQH,EAAMG,M,+BAO5B,IAAD,EAC8BxG,KAAKP,MAAhC6Q,EADH,EACGA,OAAQ3B,EADX,EACWA,QAAStI,EADpB,EACoBA,MAEzB,OACI,kBAACsb,GAAA,EAAD,CAAU1hB,UAAU,iBAAiB0O,QAAS,kBAAMA,EAAQ2B,IAASsR,QAAM,EAACvb,MAAOA,GAC/E,kBAAC,KAAD,CAAMiK,OAAQA,S,GAnBH/P,IAAMC,YA+LlBwjD,G,YArKX,WAAYvkD,GAAQ,IAAD,8BACf,4CAAMA,KAwBVksB,aAAe,SAAAzoB,GACX,EAAK+gD,uBACL,EAAKC,wBA3BU,EAsCnBC,qBAAuB,WAAO,IAAD,EACM,EAAKplD,MAA5B4mB,EADiB,EACjBA,MAAOwG,EADU,EACVA,YAETi4B,EAAej4B,GAAexG,EAE5BzL,GAAYkqC,IAAiBj4B,EAAc,EAAKJ,cAAgB,EAAKH,SAArE1R,QACR,GAAKA,EAAL,CAEA,IAAM0iB,EAAY1iB,EAAQmqC,mBAC1B,GAAIznB,EAAU5rB,KAAO,EAAG,CACpB,IAAMszC,EAAU,GAChB,aAAI1nB,EAAU8P,QAAQ3qC,QAAQ,SAAAoB,GAC1BmhD,EAAQ/sC,KAAK6sC,EAAa5kB,SAASr8B,MAGvC,IAAM+O,EAAQxH,IAAUyH,WACxBuQ,YAAiBxQ,EAAOoyC,MAtDb,EA4EnB5gC,eAAiB,SAAApT,GACbqT,aAASrT,GAAQ,GACjB,EAAKxG,eA9EU,EAiFnBuzB,WAAa,WAAmB1X,GAAW,IAA3BmE,EAA0B,EAA1BA,MAAOzjB,EAAmB,EAAnBA,MACbiK,EAASqV,EAAM6Z,SAAS1V,GAE9B,OAAO,kBAAC,GAAD,CAAc3mB,IAAKmN,EAAQA,OAAQA,EAAQ3B,QAAS,kBAAM,EAAK+U,eAAepT,IAASjK,MAAOA,KApFtF,EAuFnBoiB,aAvFmB,sCAuFJ,WAAMhd,GAAN,mBAAA8I,EAAA,wDACLgI,EAAQ9Q,EAAKmQ,OADR,uBAGP,EAAKlc,SAAS,CACVysB,YAAa,OAJV,0CASe9sB,IAAgBC,KAAK,CAC3C,QAAS,iBACTid,QACAjF,MAAO,MAZA,QASL6U,EATK,QAcCqT,SAAWrT,EAAYqT,SAAS5Z,KAAK,SAACtkB,EAAGukB,GAAJ,OAC7C0+B,YAAgBjjD,GAAGkjD,cAAcD,YAAgB1+B,MAG/C3T,EAAQxH,IAAUyH,WACxBuQ,YAAiBxQ,EAAOia,EAAYqT,SAASrV,MAAM,EAAG,KAEtD,EAAKzqB,SAAS,CAAEysB,gBArBL,0CAvFI,wDA+GnBriB,YAAc,WACVzK,IAAgBgI,aAAa,CACzB,QAAS,uBACTkW,MAAM,KA/GV,EAAKmL,eAAiBnoB,IAAM4c,YAC5B,EAAKyO,QAAUrrB,IAAM4c,YACrB,EAAK4O,cAAgBxrB,IAAM4c,YAE3B,EAAKpe,MAAQ,CACT4mB,MAAO,KACPwG,YAAa,MAGjB,EAAK83B,qBAAuB1iC,YAAS,EAAK0iC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuBje,YAAS,EAAKie,qBAAsB,KAAK,GAbtD,E,iFAgBE,IACThqC,EAAYla,KAAK0oB,eAAjBxO,QACJA,GACArQ,WAAW,kBAAMqQ,EAAQvE,SAAS,IAGtC3V,KAAKgX,gB,6CASLhX,KAAKmkD,yB,6CAILnkD,KAAKmkD,yB,uJAwBDjlB,EAAWkD,GAAWlD,S,gCAEL7/B,IAAgBC,KAAK,CAClC,QAAS,gB,QADb4/B,E,QAGSM,SAAWN,EAASM,SAAS5Z,KAAK,SAACtkB,EAAGukB,GAAJ,OAAU0+B,YAAgBjjD,GAAGkjD,cAAcD,YAAgB1+B,MACtGuc,GAAWlD,SAAWA,E,OAGpBhtB,EAAQxH,IAAUyH,WACxBuQ,YAAiBxQ,EAAOgtB,EAASM,SAASrV,MAAM,EAAG,KAEnDnqB,KAAKN,SAAS,CACVimB,MAAOuZ,I,oIA8CL,IAAD,OACG1c,EAAUxiB,KAAKP,MAAf+iB,MADH,EAE0BxiB,KAAKjB,MAA5B4mB,EAFH,EAEGA,MAAOwG,EAFV,EAEUA,YAET9lB,EAAQmc,EAAQ,CAAEqE,UAAW,KAAQ,KAE3C,OACI,oCACI,yBAAK5mB,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAAS3O,KAAK8J,aACnD0Y,EAAQ,kBAACzT,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,kBAAC,GAAD,CAAa40B,SAAU3jC,KAAK0oB,eAAgB/Y,SAAU3P,KAAKyoB,gBAE/D,yBAAKxoB,UAAU,mBAAmBoG,MAAOA,GACpCsf,GACG,kBAAC,GAAD,CACI7H,IAAK9d,KAAK4rB,QACV3rB,UAAU,gBACVG,OAAQulB,EAAM6Z,SACdzC,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA/7B,GAAC,OAAI,EAAK+7B,WAAW/7B,EAAGqkB,IACpCgH,SAAU3sB,KAAK2rB,eAGtBQ,GACG,kBAAC,GAAD,CACIrO,IAAK9d,KAAK+rB,cACV9rB,UAAU,qCACVG,OAAQ+rB,EAAYqT,SACpBzC,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA/7B,GAAC,OAAI,EAAK+7B,WAAW/7B,EAAG6qB,IACpCQ,SAAU3sB,KAAK2rB,qB,GAzJpBprB,IAAMC,W,SCpCvBikD,I,mBACF,WAAYhlD,GAAQ,IAAD,uBACf,4CAAMA,KAoBV4yB,wBAA0B,SAAAhiB,GAAW,IACzBiiB,EAAiBjiB,EAAjBiiB,aAER,EAAK5yB,SAAS,CAAE4yB,kBAxBD,EA2BnBoyB,kCAAoC,WAChC,EAAKhlD,SAAS,CAAEilD,qBAAqB,KA5BtB,EA+BnBC,aAAe,WACP,EAAKlhD,UAET,EAAKA,SAAU,EACfmG,WAAW,WACPwB,OAAOw5C,SAASC,UACjB,OArCY,IAGPxyB,EAAiB8C,KAAjB9C,aAHO,OAKf,EAAKvzB,MAAQ,CACT4lD,qBAAqB,EACrBryB,gBAPW,E,iFAYf8C,KAAStkB,GAAG,kCAAmC9Q,KAAK0kD,mCACpDtvB,KAAStkB,GAAG,wBAAyB9Q,KAAKqyB,2B,6CAI1C+C,KAASrkB,IAAI,kCAAmC/Q,KAAK0kD,mCACrDtvB,KAASrkB,IAAI,wBAAyB/Q,KAAKqyB,2B,+BAsBrC,IAAD,EACyCryB,KAAKjB,MAA3C4lD,EADH,EACGA,oBAAqBryB,EADxB,EACwBA,aACrBhgB,EAAMtS,KAAKP,MAAX6S,EAER,OAAKqyC,EAKD,kBAACvmC,EAAA,EAAD,CAAQne,UAAU,gBAAgBgiB,QAAQ,YAAY1I,MAAM,UAAU5K,QAAS3O,KAAK4kD,cAC/EtyB,EAAe,kBAACyyB,GAAA,EAAD,MAAkBzyC,EAAE,WALjC,S,GA9CO/R,IAAMC,YAyDjByT,iBAAkBwwC,IClD3BO,I,0BACF,WAAYvlD,GAAQ,IAAD,8BACf,4CAAMA,KAaVqK,YAAc,WACVzK,IAAgBgI,aAAa,CACzB,QAAS,yBACTkW,MAAM,KAjBK,EAqBnBwxB,WArBmB,qBAqBN,wCAAAx6B,EAAA,wDACDK,EAAU,EAAK7V,MAAf6V,MADC,EAEkC,EAAK7V,MAAxCkmD,EAFC,EAEDA,aAAcC,EAFb,EAEaA,iBAEhBtmC,EAAQ,EAAK24B,SAASr9B,QAAQ9Q,MAAMwS,OAJjC,uBAML,EAAKlc,SAAS,CACVkV,OAAO,IAPN,iCAYLA,GACA,EAAKlV,SAAS,CACVkV,OAAO,IAIf,EAAK9K,cAECkkB,EAAc,EAAKm3B,eAAejrC,QAAQ9Q,MApBvC,UAsBU/J,IAAgBC,KAAK,CACpC,QAAS,0BACTsf,QACAoP,cACA8M,YAAY,EACZ+pB,SAAU,OA3BL,QAsBHnzC,EAtBG,OA8BLwzC,EACA7lD,IAAgBC,KAAK,CACjB,QAAS,eACT2S,QAASP,EAAKtS,GACdwS,MAAO,CAAE,QAAS,cAAexS,GAAI8lD,EAAiB9lD,MAEnD6lD,GACP5lD,IAAgBC,KAAK,CACjB,QAAS,eACT2S,QAASP,EAAKtS,GACdwS,MAAO,CAAE,QAAS,gBAAiBmgC,KAAM,YAAa7hB,KAAM+0B,KAIpExhC,aAAS/R,EAAKtS,IA5CL,0CArBM,EAoEnB0yC,kBApEmB,sCAoEC,WAAOzR,EAAM8P,GAAb,eAAA57B,EAAA,4DAChB,EAAK7U,SAAS,CACVulD,aAAc5kB,EACd+kB,gBAAiBjV,IAHL,SAMK9wC,IAAgBC,KAAK,CACtC,QAAS,aACTmL,KAAM,CACF,QAAS,gBACTsnC,KAAM,YACN7hB,KAAMmQ,GAEVglB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMV/lD,EANU,OAiBhB,EAAKE,SAAS,CACVwlD,iBAAkB1lD,IAlBN,yCApED,wDAGf,EAAK+3C,SAAWh3C,IAAM4c,YACtB,EAAKgoC,eAAiB5kD,IAAM4c,YAE5B,EAAKpe,MAAQ,CACT6V,OAAO,EACPqwC,aAAc,KACdG,gBAAiB,KACjBF,iBAAkB,MAVP,E,sEA0FT,IAAD,EACgBllD,KAAKP,MAAlB+iB,EADH,EACGA,MAAOlQ,EADV,EACUA,EACPsC,EAAU5U,KAAKjB,MAAf6V,MAER,OACI,oCACI,yBAAK3U,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAAS3O,KAAK8J,aACnD0Y,EAAQ,kBAACzT,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK9O,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,iBAGnD,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcowC,SAAUrwC,KAAK8xC,oBAC7B,yBAAK7xC,UAAU,kBACX,kBAACizC,GAAA,EAAD,CACIvP,SAAU3jC,KAAKu3C,SACf3iC,MAAOA,EACP3U,UAAU,iBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOld,EAAE,oBACT6gC,aAAc,KAElB,kBAACD,GAAA,EAAD,CACIvP,SAAU3jC,KAAKmlD,eACfllD,UAAU,iBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOld,EAAE,kCACT6gC,aAAc,KAElB,yBAAKlzC,UAAU,qBAAqBqS,EAAE,uBAKlD,yBAAKrS,UAAU,yBAAyB0O,QAAS3O,KAAK+uC,YAClD,kBAAC,GAAD,Y,GApIKxuC,IAAMC,YAgJhByT,iBAAkB+wC,ICxGlBQ,I,mBA7CX,WAAY/lD,GAAQ,IAAD,8BACf,4CAAMA,KAEDk0C,OAASpzC,IAAM4c,YAHL,E,yEAMN,IAAD,EAMJnd,KAAK2zC,OAAOz5B,QAEhB,MAAO,CAAE5T,KARD,EAEJstC,WAMWptC,IARP,EAGJqtC,UAKgB3kC,MARZ,EAIJu2B,YAIuBv0B,OARnB,EAKJ6S,gB,sCAMQtY,GACZ,IAAMqoC,EAAM9zC,KAAK2zC,OAAOz5B,QACnB45B,IAELA,EAAIztC,MAAMi/B,QAAU75B,K,+BAGd,IAAD,EACiCzL,KAAKP,MAAnC6Q,EADH,EACGA,OAAQ6D,EADX,EACWA,SAAUxF,EADrB,EACqBA,QAE1B,OACI,yBAAKmP,IAAK9d,KAAK2zC,OAAQ1zC,UAAWuO,IAAW,OAAQ,CAAE,gBAAiB2F,IAAaxF,QAASA,GAC1F,kBAAC67B,GAAA,EAAD,CAAUl6B,OAAQA,EAAQyB,OAAO,IACjC,yBAAK9R,UAAU,eACX,kBAAC8O,EAAA,EAAD,CAAW9O,UAAU,sBAEzB,yBAAKA,UAAU,aAAawlD,YAAiBn1C,S,GAlCtC/P,IAAMC,YCcvBujD,G,8LACoBnxC,EAAWC,EAAWsqB,GAAc,IAAD,EACjBn9B,KAAKP,MAAjC6Q,EAD6C,EAC7CA,OAAQ6D,EADqC,EACrCA,SAAU9N,EAD2B,EAC3BA,MAC1B,OAAIuM,EAAUtC,SAAWA,IAIrBsC,EAAUuB,WAAaA,GAIvBvB,EAAUvM,MAAMG,MAAQH,EAAMG,O,+BAO5B,IAAD,EACwCxG,KAAKP,MAA1C6Q,EADH,EACGA,OAAQ6D,EADX,EACWA,SAAUxF,EADrB,EACqBA,QAAStI,EAD9B,EAC8BA,MAEnC,OACI,kBAACsb,GAAA,EAAD,CAAU1hB,UAAU,iBAAiB0O,QAAS,kBAAMA,EAAQ2B,IAASsR,QAAM,EAACvb,MAAOA,GAC/E,kBAACs5C,GAAA,EAAD,CAAU1/C,UAAU,0BAA0BoiB,QAASlO,EAAUoF,MAAM,YACvE,kBAAC,KAAD,CAAMjJ,OAAQA,S,GAxBH/P,IAAMC,WA8B3BklD,G,YACF,WAAYjmD,GAAQ,IAAD,8BACf,4CAAMA,KAoCVksB,aAAe,SAAAzoB,GACX,EAAK+gD,uBACL,EAAKC,wBAvCU,EAkDnBC,qBAAuB,WAAO,IAAD,EACM,EAAKplD,MAA5B4mB,EADiB,EACjBA,MAAOwG,EADU,EACVA,YAETi4B,EAAej4B,GAAexG,EAE5BzL,GAAYkqC,IAAiBj4B,EAAc,EAAKJ,cAAgB,EAAKH,SAArE1R,QACR,GAAKA,EAAL,CAEA,IAAM0iB,EAAY1iB,EAAQmqC,mBAC1B,GAAIznB,EAAU5rB,KAAO,EAAG,CACpB,IAAMszC,EAAU,GAChB,aAAI1nB,EAAU8P,QAAQ3qC,QAAQ,SAAAoB,GAC1BmhD,EAAQ/sC,KAAK6sC,EAAa5kB,SAASr8B,MAGvC,IAAM+O,EAAQxH,IAAUyH,WACxBuQ,YAAiBxQ,EAAOoyC,MAlEb,EAwFnB5gC,eAAiB,SAAApT,GAAW,IAKpBq1C,EALmB,EACgB,EAAK5mD,MAApC6mD,EADe,EACfA,cAAevR,EADA,EACAA,YACfz8B,EAAeguC,EAAfhuC,IAAKiuC,EAAUD,EAAVC,MAEPC,EAAS,IAAIrvC,IAAImB,GAEnBmuC,EAAiB,KACjBzQ,GAAa,EACb19B,EAAIhB,IAAItG,IACRw1C,EAAOzqC,OAAO/K,GACdq1C,EAAWE,EAAMzpC,OAAO,SAAA9a,GAAC,OAAIA,IAAMgP,IACnCy1C,EAAiB1R,IAAgB/jC,EAAS,KAAO+jC,EACjDiB,GAAa,IAEbwQ,EAAOxqC,IAAIhL,EAAQA,GACnBq1C,EAAWE,EAAM1pC,OAAO,CAAC7L,IACzBy1C,EAAiB,MAGrB,IAAM3vC,EAAQ,EAAKsS,eAAexO,QAClC9D,EAAMT,QACD2/B,IACDl/B,EAAMmF,UAAY,GAClB,EAAKkN,aAAa,KAGtB,IAAM8sB,EAAY,EAAKN,aAAa/6B,QAC9Bs7B,EAAaD,EAAUzxB,aACvB2xB,EAAmBF,EAAUxxB,aAE7B6xB,EAAU,IAAIn/B,IA9BG,uBA+BvB,YAAgB,EAAKy+B,SAASxI,OAA9B,+CAAsC,CAAC,IAA9BvpC,EAA6B,QAC5BwhB,EAAK,EAAKuwB,SAASvqC,IAAIxH,GAC7B,GAAIwhB,EAAI,CACJ,IAAMyG,EAASzG,EAAGyoB,YAClBwI,EAAQt6B,IAAInY,EAAKioB,KAnCF,kFAuCvB,IAAMsqB,EAAcH,EAAUlvC,MAAMi/B,QAC9BqQ,EAAgBJ,EAAUlyB,UAC5BiyB,IACAC,EAAUlvC,MAAMi/B,QAAU,MAG9B,EAAK5lC,SAAS,CACV20C,YAAa0R,EACbH,cAAe,CACXC,MAAOF,EACP/tC,IAAKkuC,IAEV,WACC,EAAKhQ,aAAaR,EAAYE,EAAYC,EAAkBE,EAAeD,GAC3E,EAAKsQ,aAAapQ,MA7IP,EAoPnBvY,WAAa,WAAmB1X,EAAOsgC,GAAsB,IAA7Cn8B,EAA4C,EAA5CA,MAAOzjB,EAAqC,EAArCA,MACbiK,EAASqV,EAAMmE,GACf2R,EAAawqB,EAAiBrvC,IAAItG,GAExC,OAAO,kBAAC,GAAD,CAAcnN,IAAKmN,EAAQA,OAAQA,EAAQ6D,SAAUsnB,EAAY9sB,QAAS,kBAAM,EAAK+U,eAAepT,IAASjK,MAAOA,KAxP5G,EA2PnBoiB,aA3PmB,sCA2PJ,WAAMhd,GAAN,6BAAA8I,EAAA,wDACLgI,EAAQ9Q,EAAKmQ,OADR,uBAGP,EAAKlc,SAAS,CACVysB,YAAa,KACb+5B,YAAa,KACb7R,YAAa,OANV,iCAWLn9B,EAAW,IACRK,KACLlY,IAAgBC,KAAK,CACjB,QAAS,iBACTid,QACAjF,MAAO,MAGfJ,EAASK,KACLlY,IAAgBC,KAAK,CACjB,QAAS,oBACTid,WAtBG,SAyB8B5E,QAAQzC,IAAIgC,GAzB1C,mCAyBJiV,EAzBI,KAyBSg6B,EAzBT,KA2BXh6B,EAAYqT,SAAWrT,EAAYqT,SAAS5Z,KAAK,SAACtkB,EAAGukB,GAAJ,OAC7C0+B,YAAgBjjD,GAAGkjD,cAAcD,YAAgB1+B,MAG/CqgC,EAAc,CAAE,QAAS,QAAS1mB,SAAU,IAClD2mB,EAAYluC,SAASuiB,OAAO,SAACqrB,EAAOh1C,GAChC,IAAMa,EAAOC,IAAUhH,IAAIkG,GAI3B,OAHIa,GAA+B,oBAAvBA,EAAKoN,KAAK,UAClB+mC,EAAMtuC,KAAK7F,EAAKoN,KAAKvO,SAElBs1C,GACRK,EAAY1mB,UAETttB,EAAQxH,IAAUyH,WACxBuQ,YAAiBxQ,EAAOia,EAAYqT,UACpC9c,YAAiBxQ,EAAOg0C,EAAY1mB,UAEpC,EAAK9/B,SAAS,CAAEysB,cAAa+5B,cAAa7R,YAAa,OA5C5C,0CA3PI,wDA0SnBvqC,YAAc,WACVzK,IAAgBgI,aAAa,CACzB,QAAS,uBACTkW,MAAM,KA7SK,EAiTnBk5B,kBAAoB,SAAAvzC,GAAU,IAAD,EACc,EAAKnE,MAApC6mD,EADiB,EACjBA,cAAevR,EADE,EACFA,YAClBuR,IAEWA,EAARhuC,IACChB,IAAIy9B,KAEbnxC,EAAM0B,kBACN1B,EAAMmF,YAAYm7B,2BAElB,EAAK9jC,SAAS,CACV20C,YAAa,UA5TF,EAgUnBD,gBAAkB,WAAO,IAAD,EACmB,EAAKr1C,MAApC6mD,EADY,EACZA,cAAevR,EADH,EACGA,YACvB,GAAKuR,EAAL,CAFoB,IAIZC,EAAeD,EAAfC,MAAOjuC,EAAQguC,EAARhuC,IACf,GAAKiuC,GACAA,EAAMxvC,OAEX,GAAIuB,EAAIhB,IAAIy9B,GACR,EAAK3wB,eAAe2wB,OADxB,CAKA,IAAMO,EAAWiR,EAAMA,EAAMxvC,OAAS,GACjCu+B,GAEL,EAAKl1C,SAAS,CACV20C,YAAaO,OA9UjB,EAAK2C,SAAWh3C,IAAM4c,YACtB,EAAKuL,eAAiBnoB,IAAM4c,YAC5B,EAAKyO,QAAUrrB,IAAM4c,YACrB,EAAK4O,cAAgBxrB,IAAM4c,YAC3B,EAAK83B,aAAe10C,IAAM4c,YAC1B,EAAK+3B,SAAW,IAAIz+B,IAEpB,EAAK1X,MAAQ,CACT4mB,MAAO,KACPwG,YAAa,KACby5B,cAAe,CACXC,MAAO,GACPjuC,IAAK,IAAInB,KAEb49B,YAAa,MAGjB,EAAK4P,qBAAuB1iC,YAAS,EAAK0iC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuBje,YAAS,EAAKie,qBAAsB,KAAK,GArBtD,E,0EAyBf,OAAOlkD,KAAKjB,MAAM6mD,cAAcC,Q,0CAGf,IACT3rC,EAAYla,KAAK0oB,eAAjBxO,QACJA,GACArQ,WAAW,kBAAMqQ,EAAQvE,SAAS,IAGtC3V,KAAKgX,gB,6CASLhX,KAAKmkD,yB,6CAILnkD,KAAKmkD,yB,uJAwBDjlB,EAAWkD,GAAWlD,S,gCAEL7/B,IAAgBC,KAAK,CAClC,QAAS,gB,QADb4/B,E,QAGSM,SAAWN,EAASM,SAAS5Z,KAAK,SAACtkB,EAAGukB,GAAJ,OAAU0+B,YAAgBjjD,GAAGkjD,cAAcD,YAAgB1+B,MACtGuc,GAAWlD,SAAWA,E,OAGpBhtB,EAAQxH,IAAUyH,WACxBuQ,YAAiBxQ,EAAOgtB,EAASM,SAASrV,MAAM,EAAG,KAEnDnqB,KAAKN,SAAS,CACVimB,MAAOuZ,I,wIA6DFoW,EAAYE,EAAYC,EAAkBE,EAAeD,GAAc,IAAD,OACzEH,EAAYv1C,KAAKi1C,aAAa/6B,QAE9B67B,EAAgBR,EAAUzxB,aAI1BkyB,GAHsBT,EAAUxxB,aAGpBgyB,EAAgBP,GADjBO,EAAgBP,EAKzBA,EAFU,KAGVD,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAI6zC,EAHxC,KAGV,OACA10C,sBAAsB,WAClBy0C,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAIo0C,EAL5C,KAKN,OACAlsC,WAAW,WACP,EAAK6e,eAAexO,QAAQ+7B,eAAe,CAAE5X,SAAU,UACxD,SAGPkX,EAAUlvC,MAAMi/B,QAAhB,sBAXU,IAWV,OACAtlC,KAAK0oB,eAAexO,QAAQ+7B,eAAe,CAAE5X,SAAU,YAEpD2X,EACHD,EAfU,KAgBVR,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAI8zC,EAhBxC,KAgBV,OACA30C,sBAAsB,WAClBy0C,EAAUlvC,MAAMi/B,QAAhB,sBAAyC5jC,KAAKC,IAAIo0C,EAlB5C,KAkBN,WAGJR,EAAUlvC,MAAMi/B,QAAhB,sBArBU,IAqBV,OACAiQ,EAAUlyB,UAAYsyB,GAGtBL,GACAC,EAAUlvC,MAAMi/B,QAAUoQ,EAC1BH,EAAUlyB,UAAYsyB,GAEtB31C,KAAK0oB,eAAexO,QAAQ+7B,eAAe,CAAE5X,SAAU,a,mCAKtD6X,GAAc,IAAD,OAChBC,EAAkB,IAAI1/B,IADN,uBAEtB,YAAgBzW,KAAKk1C,SAASxI,OAA9B,+CAAsC,CAAC,IAA9BvpC,EAA6B,QAC5BwhB,EAAK3kB,KAAKk1C,SAASvqC,IAAIxH,GAC7B,GAAIwhB,EAAI,CACJ,IAAMyxB,EAAgBzxB,EAAGyoB,YACnBiJ,EAAaH,EAAYt/B,IAAIzT,GAAO+yC,EAAYvrC,IAAIxH,GAAO,KACjE,GAAIkzC,EAAY,CACRA,EAAW/vC,KAAO8vC,EAAc9vC,MAChC6vC,EAAgB76B,IAAIqJ,EAAI,CAAE0xB,aAAYD,kBAG1C,IAAMhe,EAAS,+BAA2Bie,EAAW/vC,KAAO8vC,EAAc9vC,KAA3D,eAAsE+vC,EAAW7vC,IAAM4vC,EAAc5vC,IAArG,OACfme,EAAG2xB,gBAAgBle,MAbT,kFAkBtBt3B,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKo0C,SAASxI,OAA9B,+CAAsC,CAAC,IAA9BvpC,EAA6B,QAC5BwhB,EAAK,EAAKuwB,SAASvqC,IAAIxH,GAC7B,GAAIwhB,EAAI,CACJ,IAAIigB,EAAU,mCACd,GAAIuR,EAAgBv/B,IAAI+N,GAAK,CAAC,IAAD,EACawxB,EAAgBxrC,IAAIga,GAAlD0xB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpBxR,EAAa,+BAAwByR,EAAW/vC,KAAO8vC,EAAc9vC,KAAO+vC,EAAWnnC,MAA1E,eAAsFmnC,EAAW7vC,IAAM4vC,EAAc5vC,IAArH,QACA,mCAGjBme,EAAG2xB,gBAAgB1R,KAXH,kFAenBuR,EAAgBnlC,MAErBnH,WAAW,WAAO,IAAD,uBACb,YAAessC,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B/nB,EAA8B,QAC3ByxB,EAAkBD,EAAgBxrC,IAAIga,GAAtCyxB,cACFxR,EAAa,+BAAwBwR,EAAclnC,MAAtC,WACA,iCAEnByV,EAAG2xB,gBAAgB1R,IANV,kFASb9jC,sBAAsB,WAAO,IAAD,uBACxB,YAAeq1C,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B/nB,EAA8B,QAGnCA,EAAG2xB,gBAFgB,qCAFC,sFAQ7B,S,+BAqGD,IAAD,SACgBt2C,KAAKP,MAAlB+iB,EADH,EACGA,MAAOlQ,EADV,EACUA,EADV,EAEmEtS,KAAKjB,MAArE4mB,EAFH,EAEGA,MAAOwG,EAFV,EAEUA,YAAa+5B,EAFvB,EAEuBA,YAAaN,EAFpC,EAEoCA,cAAevR,EAFnD,EAEmDA,YAElDhuC,EAAQmc,EAAQ,CAAEqE,UAAW,KAAQ,KAI3C,OAFA7mB,KAAKk1C,SAASpW,QAGV,oCACI,yBAAK7+B,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAAS3O,KAAK8J,aACnD0Y,EAAQ,kBAACzT,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK9O,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,sBAGnD,yBAAKwL,IAAK9d,KAAKi1C,aAAch1C,UAAU,uBAClC2lD,EAAcC,MAAMjuC,IAAI,SAAAtW,GAAC,OAAI,kBAAC,GAAD,CAAU6S,SAAUkgC,IAAgB/yC,EAAGwc,IAAK,SAAA6G,GAAQ,EAAKuwB,SAAS55B,IAAIha,EAAGqjB,IAAQxhB,IAAK7B,EAAGgP,OAAQhP,EAAGqN,QAAS,kBAAM,EAAK+U,eAAepiB,QACrK,kBAAC,GAAD,CAAaqiC,SAAU3jC,KAAK0oB,eAAgBmb,KAAMvxB,EAAE,iBAAkBqL,QAAS3d,KAAKy2C,kBAAmB9mC,SAAU3P,KAAKyoB,aAAcgb,YAAazjC,KAAKo0C,mBAE1J,yBAAKn0C,UAAU,oBACf,yBAAKA,UAAU,mBAAmBoG,MAAOA,GACpCsf,GACG,kBAAC,GAAD,CACI7H,IAAK9d,KAAK4rB,QACV3rB,UAAU,gBACVG,OAAQulB,EAAM6Z,SACdzC,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA/7B,GAAC,OAAI,EAAK+7B,WAAW/7B,EAAGqkB,EAAM6Z,SAAUomB,EAAchuC,MAClE+U,SAAU3sB,KAAK2rB,eAGtBQ,GAAe+5B,GACZ,kBAAC,GAAD,CACIpoC,IAAK9d,KAAK+rB,cACV9rB,UAAU,qCACVG,OAAQ+rB,EAAYqT,SAASrjB,OAAO+pC,EAAY1mB,UAChDzC,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA/7B,GAAC,OAAI,EAAK+7B,WAAW/7B,EAAG6qB,EAAYqT,SAASrjB,OAAO+pC,EAAY1mB,UAAWomB,EAAchuC,MACrG+U,SAAU3sB,KAAK2rB,qB,GAjYbprB,IAAMC,WAqZrB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQonC,IC1bjB3B,I,qMACoBnxC,EAAWC,EAAWsqB,GAAc,IAC9C7sB,EAAWtQ,KAAKP,MAAhB6Q,OACR,OAAIsC,EAAUtC,SAAWA,I,+BAOnB,IAAD,EACqBtQ,KAAKP,MAAvB6Q,EADH,EACGA,OAAQjK,EADX,EACWA,MAEhB,OACI,kBAACsb,GAAA,EAAD,CAAU1hB,UAAU,iBAAiB2hB,QAAM,EAACvb,MAAOA,GAC/C,kBAAC,KAAD,CAAMiK,OAAQA,S,GAfH/P,IAAMC,YAqB3B4lD,G,YAEF,WAAY3mD,GAAQ,IAAD,8BACf,4CAAMA,KAoCVqK,YAAc,WAAO,IACT6T,EAAY,EAAKle,MAAjBke,QACHA,GAELA,KAtCA,EAAK45B,SAAWh3C,IAAM4c,YAEtB,EAAKpe,MAAQ,CACT6V,OAAO,GANI,E,iFAUE,IACT0vC,EAAYtkD,KAAKP,MAAjB6kD,QAEFpyC,EAAQxH,IAAUyH,WACxBuQ,YAAiBxQ,EAAOoyC,K,iCAGhB,IACA1vC,EAAU5U,KAAKjB,MAAf6V,MAEFgK,EAAQ5e,KAAKu3C,SAASr9B,QAAQ9Q,MAAMwS,OAC1C,OAAKgD,GAODhK,GACA5U,KAAKN,SAAS,CACVkV,OAAO,IAIRgK,IAZH5e,KAAKN,SAAS,CACVkV,OAAO,IAEJgK,K,+BAmBL,IAAD,EACkD5e,KAAKP,MAApD6S,EADH,EACGA,EAAGgyC,EADN,EACMA,QAASc,EADf,EACeA,gBAAiBiB,EADhC,EACgCA,cAC7BzxC,EAAU5U,KAAKjB,MAAf6V,MAEF+Q,EAAQ2+B,EAAQ1sC,IAAI,SAAAtH,GAAM,OAAK,kBAAC,GAAD,CAAcnN,IAAKmN,EAAQA,OAAQA,MAElEg2C,EAAkC,IAAnBhC,EAAQjuC,OAAR,UAA0BiuC,EAAQjuC,OAAlC,sBAAwDiuC,EAAQjuC,OAAhE,WAErB,OACI,oCACI,yBAAKpW,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,qBAAqB0O,QAAS3O,KAAK8J,aACrD,kBAAC,GAAD,OAEJ,yBAAK7J,UAAU,qCACX,0BAAMA,UAAU,yBAAyBqS,EAAE,eAGnD,yBAAKrS,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAc2wC,WAAYwU,EAAiB/U,SAAUgW,IACrD,yBAAKpmD,UAAU,kBACX,kBAACizC,GAAA,EAAD,CACIvP,SAAU3jC,KAAKu3C,SACf3iC,MAAOA,EACP3U,UAAU,iBACVgiB,QAAQ,WACRqN,WAAS,EACTE,MAAOld,EAAE,aACT6gC,aAAc,MAGtB,kBAAC,GAAD,KAAgBmT,GACf3gC,S,GA/EIplB,IAAMC,WAoGpB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQ8nC,IC5HjBG,G,YACF,WAAY9mD,GAAQ,IAAD,8BACf,4CAAMA,KAcVsvC,WAfmB,qBAeN,wCAAAx6B,EAAA,wDACc,EAAKxV,MAApBynD,WADC,oBAGClC,EAAU,EAAKmC,mBAAmBvsC,QAAQwsC,cACnCrwC,OAJR,iDAML,EAAK3W,SAAS,CACV8mD,YAAY,EACZlC,YARC,4BAW+C,EAAKvlD,MAAjDulD,EAXH,EAWGA,QAASW,EAXZ,EAWYA,aAAcC,EAX1B,EAW0BA,iBAEzBtmC,EAAQ,EAAK+nC,kBAAkBzsC,QAAQ0sC,WAbxC,0DAkBL,EAAK98C,cAlBA,UAoBczK,IAAgBC,KAAK,CACpC,QAAS,0BACTsf,QACAkc,YAAY,EACZ9M,YAAa,GACb62B,SAAU,OAzBT,QAoBCnzC,EApBD,OA4BDwzC,EACA7lD,IAAgBC,KAAK,CACjB,QAAS,eACT2S,QAASP,EAAKtS,GACdwS,MAAO,CAAE,QAAS,cAAexS,GAAI8lD,EAAiB9lD,MAEnD6lD,GACP5lD,IAAgBC,KAAK,CACjB,QAAS,eACT2S,QAASP,EAAKtS,GACdwS,MAAO,CAAE,QAAS,gBAAiBmgC,KAAM,YAAa7hB,KAAM+0B,KAIhEX,EAAQjuC,OAAS,GACjBhX,IAAgBC,KAAK,CACjB,QAAS,iBACT2S,QAASP,EAAKtS,GACdogC,SAAU8kB,IAIlB7gC,aAAS/R,EAAKtS,IAlDT,0CAfM,EAqEnB0K,YAAc,WACVzK,IAAgBgI,aAAa,CACzB,QAAS,uBACTkW,MAAM,KAxEK,EA4EnBspC,kBAAoB,WAChB,EAAKnnD,SAAS,CACV8mD,YAAY,EACZlC,QAAS,MA/EE,EAmFnBxS,kBAnFmB,sCAmFC,WAAOzR,EAAM8P,GAAb,eAAA57B,EAAA,4DAChB,EAAK7U,SAAS,CACVulD,aAAc5kB,EACd+kB,gBAAiBjV,IAHL,SAMK9wC,IAAgBC,KAAK,CACtC,QAAS,aACTmL,KAAM,CACF,QAAS,gBACTsnC,KAAM,YACN7hB,KAAMmQ,GAEVglB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMV/lD,EANU,OAiBhB,EAAKE,SAAS,CACVwlD,iBAAkB1lD,IAlBN,yCAnFD,wDAGf,EAAKinD,mBAAqBlmD,IAAM4c,YAChC,EAAKwpC,kBAAoBpmD,IAAM4c,YAE/B,EAAKpe,MAAQ,CACTynD,YAAY,EACZlC,QAAS,GACTW,aAAc,KACdG,gBAAiB,KACjBF,iBAAkB,MAXP,E,sEAyGT,IACE1iC,EAAUxiB,KAAKP,MAAf+iB,MADH,EAE4CxiB,KAAKjB,MAA9CynD,EAFH,EAEGA,WAAYlC,EAFf,EAEeA,QAASc,EAFxB,EAEwBA,gBAE7B,OACI,oCACI,kBAAC,GAAD,CAAiBtnC,IAAK9d,KAAKymD,mBAAoBjkC,MAAOA,EAAO7E,QAAS3d,KAAK8J,cAE3E,kBAAC,GAAD,CAAayT,KAAMipC,GACf,kBAAC,GAAD,CACI1oC,IAAK9d,KAAK2mD,kBACVvB,gBAAiBA,EACjBd,QAASA,EACT+B,cAAermD,KAAK8xC,kBACpBn0B,QAAS3d,KAAK6mD,qBAItB,yBAAK5mD,UAAU,yBAAyB0O,QAAS3O,KAAK+uC,YAClD,kBAAC,GAAD,Y,GA7HGxuC,IAAMC,WAyIdyT,iBAAkBsyC,ICkFlBO,G,YAzNX,WAAYrnD,GAAQ,IAAD,8BACf,4CAAMA,KA2DVsnD,yBAA2B,SAAA12C,GAEvB,GADyB+kB,KAAjB9C,aACR,CAFiC,IAIzBzhB,EAAkBR,EAAlBQ,OAAQ0L,EAAUlM,EAAVkM,MAJiB,EAKgB,EAAKxd,MAA9C8pB,EALyB,EAKzBA,WAAYm+B,EALa,EAKbA,aAAcnrC,EALD,EAKCA,WAE9BgN,GAAchY,IAAWm2C,GAAgBzqC,IAAUV,IAIvD,EAAKU,MAAQA,EACb,EAAK7c,SACD,CACImpB,YAAY,EACZm+B,aAAcn2C,EACdgL,WAAY,UA5EL,EAiFnBorC,kBAAoB,WAChB,GAAK,EAAK1qC,MAAV,CAEA,IAAM2qC,EAAS,EAAKC,UAAUjtC,QAC1BgtC,GACAA,EAAOE,aAAa,EAAK7qC,OAG7B,EAAKA,MAAQ,OAzFE,EA4FnB8qC,uBAAyB,SAAAh3C,GAErB,GADyB+kB,KAAjB9C,aACR,CAF+B,IAIvB/U,EAAiBlN,EAAjBkN,KAAM1M,EAAWR,EAAXQ,OAEd,EAAKnR,SAAS,CAAE4nD,aAAc/pC,EAAMgqC,SAAU12C,MAlG/B,EAqGnB22C,uBArGmB,sCAqGM,WAAMn3C,GAAN,eAAAkE,EAAA,wDACI6gB,KAAjB9C,aADa,iDAIb/U,EAASlN,EAATkN,KAER,EAAK7d,SAAS,CAAE+nD,aAAclqC,IANT,yCArGN,wDA8GnBmqC,uBA9GmB,sCA8GM,WAAMr3C,GAAN,eAAAkE,EAAA,wDACI6gB,KAAjB9C,aADa,iDAIb/U,EAASlN,EAATkN,KAER,EAAK7d,SAAS,CAAEioD,aAAcpqC,IANT,yCA9GN,wDAuHnBqqC,yBAvHmB,sCAuHQ,WAAMv3C,GAAN,eAAAkE,EAAA,wDACE6gB,KAAjB9C,aADe,iDAIf/U,EAASlN,EAATkN,KAER,EAAK7d,SAAS,CAAEmoD,eAAgBtqC,IANT,yCAvHR,wDAgInBzT,YAAc,WACV,EAAKpK,SAAS,CACV4nD,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,EAChBh/B,YAAY,KAtID,EA0InBJ,aAAe,SAAAq/B,GACX,EAAKpoD,SAAS,CACVmpB,WAAYi/B,EACZd,aAAc,EACdnrC,WAAY,QA9ID,EAkJnBooB,uBAAyB,SAAAx4B,GACrB,EAAK/L,SAAS,CACVmc,WAAYpQ,EACZ8Q,MAAO,QArJI,EAyJnBwwB,oBAAsB,SAACl8B,EAAQmW,EAAW6B,GACtCpF,aAAS5S,EAAQmW,GAEjB,EAAKqF,qBA5JU,EA+JnBA,kBAAoB,WAChB,EAAK3sB,SAAS,CACVmpB,YAAY,EACZm+B,aAAc,EACdnrC,WAAY,QAhKhB,EAAKsrC,UAAY5mD,IAAM4c,YAEvB,EAAKpe,MAAQ,CACT8pB,YAAY,EACZy+B,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,GAVL,E,mFAcGj1C,EAAWC,EAAWsqB,GAAc,IAAD,EACwCn9B,KAAKjB,MAA1F8pB,EAD6C,EAC7CA,WAAYhN,EADiC,EACjCA,WAAYyrC,EADqB,EACrBA,aAAcG,EADO,EACPA,aAAcE,EADP,EACOA,aAAcE,EADrB,EACqBA,eAE1E,OAAIh1C,EAAUgW,aAAeA,IAIzBhW,EAAUgJ,aAAeA,IAIzBhJ,EAAUy0C,eAAiBA,IAI3Bz0C,EAAU40C,eAAiBA,IAI3B50C,EAAU80C,eAAiBA,GAI3B90C,EAAUg1C,iBAAmBA,Q,0CAQjCzyB,KAAStkB,GAAG,yBAA0B9Q,KAAK+mD,0BAC3Cp1C,IAAUb,GAAG,uBAAwB9Q,KAAKqnD,wBAC1C11C,IAAUb,GAAG,uBAAwB9Q,KAAKwnD,wBAC1C71C,IAAUb,GAAG,uBAAwB9Q,KAAK0nD,wBAC1C/1C,IAAUb,GAAG,yBAA0B9Q,KAAK4nD,4B,6CAI5CxyB,KAASrkB,IAAI,yBAA0B/Q,KAAK+mD,0BAC5Cp1C,IAAUZ,IAAI,uBAAwB/Q,KAAKqnD,wBAC3C11C,IAAUZ,IAAI,uBAAwB/Q,KAAKwnD,wBAC3C71C,IAAUZ,IAAI,uBAAwB/Q,KAAK0nD,wBAC3C/1C,IAAUZ,IAAI,yBAA0B/Q,KAAK4nD,4B,+BA8GvC,IAAD,EACgH5nD,KAAKjB,MAAlHwoD,EADH,EACGA,SAAUP,EADb,EACaA,aAAcnrC,EAD3B,EAC2BA,WAAYgN,EADvC,EACuCA,WAAY4+B,EADnD,EACmDA,aAAcH,EADjE,EACiEA,aAAcK,EAD/E,EAC+EA,aAAcE,EAD7F,EAC6FA,eAClG,OAAKh/B,GAAe4+B,GAAiBH,GAAiBK,GAAiBE,EAKnE,kBAAC,IAAD,CACItqC,MAAI,EACJG,mBAAoB,EACpBC,QAAS3d,KAAK8J,YACdwF,QAAS,CACLjF,KAAM,wBACNuB,UAAW,6BACXm8C,MAAO,0BAEXC,QAAShoD,KAAKinD,mBAEbK,GAAgB,kBAAC,GAAD,CAAUz2C,OAAQ02C,EAAU/kC,OAAK,IACjDilC,GAAgB,kBAAC,GAAD,CAAUjlC,OAAK,IAC/BmlC,GAAgB,kBAAC,GAAD,CAAUnlC,OAAK,IAC/BqlC,GAAkB,kBAAC,GAAD,CAAYrlC,OAAK,IACnCqG,GACG,oCACI,kBAAC,GAAD,CACI/K,IAAK9d,KAAKmnD,UACVt+B,YAAY,EACZ6Z,SAAS,EACT/zB,QAAS3O,KAAKmjB,kBACdwF,SAAU3oB,KAAKyoB,aACfyb,mBAAoBlkC,KAAKikC,uBACzBzhB,OAAK,IAET,yBAAKviB,UAAU,kBACX,kBAAC,GAAD,CACI4Q,OAAQm2C,EACRv7C,KAAMoQ,EACNqxB,gBAAiBltC,KAAK+sC,oBACtBpvB,QAAS3d,KAAKqsB,uBAnC3B,S,GA3KS9rB,IAAMC,WCV3B,SAASynD,KACZ,IAAMC,EAAUv2C,IAAUslB,SAAStsB,IAAI,mBACjCmN,EAAQ,GACRqwC,EAAa,GACnB,GAAID,EAAS,CAAC,IAAD,uBACT,YAAqBA,EAAQxb,OAA7B,+CAAqC,CAAC,IAA3B77B,EAA0B,QAC3Ba,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAIa,EAAM,CACN,IAAM61B,EAAQC,YAAa32B,EAAQ,CAAE,QAAS,oBAChC,MAAV02B,GAAezvB,EAAMP,KAAK7F,GAC9By2C,EAAW5wC,KAAK,CAAEgwB,QAAOnoC,GAAIyR,EAAQ+N,MAAOlN,EAAKkN,UANhD,mFAab,OAFqB9G,EAAM8N,KAAK,SAACrR,EAAG+zB,GAAJ,OAAUC,YAAaf,YAAac,EAAG,CAAE,QAAS,oBAAsBd,YAAajzB,EAAG,CAAE,QAAS,uBAE/GqD,IAAI,SAAAtW,GAAC,OAAIA,EAAEsd,QAAOhf,KAAK,M,cCOzCwoD,I,OAAiB,CACnBC,MAAO3nD,YAAS4nD,eAChBC,KAAM7nD,YAAS8nD,gBAgeJC,G,YA5dX,WAAYhpD,GAAQ,IAAD,8BACf,4CAAMA,KAqIVimC,oBAAsB,SAAAr1B,GAClB,EAAK42B,aAvIU,EA0InB5U,wBAA0B,SAAAhiB,GAGtB,GAFyBA,EAAjBiiB,aAER,CAHgC,MAKiD,EAAKvzB,MAA9EuoD,EALwB,EAKxBA,aAAcG,EALU,EAKVA,aAAc5+B,EALJ,EAKIA,WAAY8+B,EALhB,EAKgBA,aAAcE,EAL9B,EAK8BA,gBAC1DP,GAAgBG,GAAgB5+B,GAAc8+B,GAAgBE,IAC9D,EAAKnoD,SAAS,CACN+nD,cAAc,EACdH,cAAc,EACdz+B,YAAY,EACZ8+B,cAAc,EACdE,gBAAgB,EAChBnlB,QAAS,GACV,WACC,EAAKhjC,SAAS,CACVgjC,QAAS0lB,SA1JV,EAiMnB/gB,kBAAoB,SAAAh3B,GAAW,IACNq4C,EAAoB,EAAK3pD,MAAtCmpC,YAESygB,EAAgB,EAAKC,cAA9B1uC,QACR,IAAIyuC,IAAeA,EAAY/9B,QAA/B,CAJ0B,IAQTi+B,EAAmB,EAAKC,eAAjC5uC,QACR,IAAI2uC,IAAkBA,EAAej+B,QAArC,CAIA,IAAMm+B,EAAcp3C,IAAUslB,SAAStsB,IAAI,mBACrCu9B,EAAc6gB,GAAeA,EAAY/3C,KAAO,EAEtD,EAAKtR,SAAS,CAAEwoC,cAAaC,aAAc8f,MAAqB,WAC5D,IAAKS,GAAmBxgB,EAAa,CAAC,IAC1BhuB,EAAY,EAAK0uC,cAAjB1uC,QACR,GAAIA,EAAQ0R,QAAS,CAAC,IACDo9B,EAAgB9uC,EAAQ0R,QAAjC1R,QACJ8uC,GAAeA,EAAY3lC,UAAY,IACvCnJ,EAAQmJ,WAAa,QAMjCqlC,IAAoBxgB,GACpB7oC,IAAgBgI,aAAa,CACzB,QAAS,gCA/NF,EAoOnBmgD,uBApOmB,sCAoOM,WAAMn3C,GAAN,eAAAkE,EAAA,yDACI6gB,KAAjB9C,aADa,iDAIb/U,EAASlN,EAATkN,KAER,EAAK7d,SAAS,CAAE+nD,aAAclqC,IANT,yCApON,wDA6OnB8pC,uBAAyB,SAAAh3C,GAErB,IADyB+kB,KAAjB9C,aACR,CAF+B,IAIvB/U,EAAiBlN,EAAjBkN,KAAM1M,EAAWR,EAAXQ,OAEd,EAAKnR,SAAS,CAAE4nD,aAAc/pC,EAAMgqC,SAAU12C,MAnP/B,EAsPnB62C,uBAtPmB,sCAsPM,WAAMr3C,GAAN,eAAAkE,EAAA,yDACI6gB,KAAjB9C,aADa,iDAIb/U,EAASlN,EAATkN,KAER,EAAK7d,SAAS,CAAEioD,aAAcpqC,IANT,yCAtPN,wDA+PnBqqC,yBA/PmB,sCA+PQ,WAAMv3C,GAAN,eAAAkE,EAAA,yDACE6gB,KAAjB9C,aADe,iDAIf/U,EAASlN,EAATkN,KAER,EAAK7d,SAAS,CAAEmoD,eAAgBtqC,IANT,yCA/PR,wDAwQnB0rC,sBAAwB,SAAA54C,GAAW,IACvBkN,EAASlN,EAATkN,KAER,EAAK7d,SAAS,CAAEwiC,YAAa3kB,KA3Qd,EA8QnB2rC,0BAA4B,SAAA74C,GACxB,EAAKkB,eA/QU,EAkRnBw1C,yBAA2B,SAAA12C,GAEvB,IADyB+kB,KAAjB9C,aACR,CAFiC,IAIzBzhB,EAAkBR,EAAlBQ,OAAQ0L,EAAUlM,EAAVkM,MAJiB,EAKgB,EAAKxd,MAA9C8pB,EALyB,EAKzBA,WAAYm+B,EALa,EAKbA,aAAcnrC,EALD,EAKCA,WAElC,IAAIgN,GAAchY,IAAWm2C,GAAgBzqC,IAAUV,EAAvD,CAIA,IAAMqrC,EAAS,EAAKiC,iBAAiBjvC,QACrC,EAAKxa,SACD,CACImpB,YAAY,EACZm+B,aAAcn2C,EACdgL,WAAY,KACZyrC,cAAc,EACd/E,oBAAoB,EACpBkF,cAAc,GAElB,WACQP,GACAA,EAAOE,aAAa7qC,QAzSjB,EA+SnB4G,kBAAoB,WACQ,EAAKpkB,MAArBmjC,YAEJ7iC,IAAgBgI,aAAa,CACzB,QAAS,6BAGb,EAAKuhD,cAAc1uC,QAAQkvC,eAtThB,EA0TnB3gC,aAAe,SAAAq/B,GACX,EAAKpoD,SAAS,CACVmpB,WAAYi/B,EACZd,aAAc,EACdnrC,WAAY,QA9TD,EAkUnBkxB,oBAAsB,SAACl8B,EAAQmW,EAAW6B,GACtCpF,aAAS5S,EAAQmW,GAEjB,IAAMggC,EAAen+B,EAAa,EAAK9pB,MAAMioD,aAAe,EACtDnrC,EAAagN,EAAa,EAAK9pB,MAAM8c,WAAa,KAExD,EAAKnc,SAAS,CACVmpB,aACAm+B,eACAnrC,gBA3UW,EA+UnBwQ,kBAAoB,WAChB,EAAK3sB,SAAS,CACVmpB,YAAY,EACZm+B,aAAc,EACdnrC,WAAY,QAnVD,EAuVnBooB,uBAAyB,SAAAx4B,GACrB,EAAK/L,SAAS,CACVmc,WAAYpQ,EACZ8Q,MAAO,QA1VI,EA8VnB8sC,gBAAkB,WACd,EAAKpiB,aA/VU,EAuWnBqiB,mBAAqB,WACjB,EAAK5pD,SAAS,CAAEwiC,aAAa,KAxWd,EA2WnBqnB,oBAAsB,WAClB,EAAK7pD,SAAS,CAAE+nD,cAAc,KA5Wf,EA+WnB5D,oBAAsB,WAClB,EAAKnkD,SAAS,CAAE4nD,cAAc,KAhXf,EAmXnBkC,oBAAsB,WAClB,EAAK9pD,SAAS,CAAEioD,cAAc,KApXf,EAuXnB8B,sBAAwB,WACpB,EAAK/pD,SAAS,CAAEmoD,gBAAgB,KArXhC,EAAKe,cAAgBroD,IAAM4c,YAC3B,EAAK2rC,eAAiBvoD,IAAM4c,YAC5B,EAAKgsC,iBAAmB5oD,IAAM4c,YAE9B,EAAKpe,MAAQ,CACTogC,MAAO,KAEP+I,aAAa,EACbC,aAAc,KAEduhB,UAAW,GACXC,aAAc,GAEdjnB,QAAS0lB,GACTv/B,YAAY,EACZqZ,aAAa,EACbulB,cAAc,EACdH,cAAc,EACdK,cAAc,EACdE,gBAAgB,EAEhBb,aAAc,EACdnrC,WAAY,KACZU,MAAO,MA1BI,E,mFA8BG3J,EAAWC,GAAY,IAAD,EAepC7S,KAAKjB,MAbLogC,EAFoC,EAEpCA,MACA+I,EAHoC,EAGpCA,YACAC,EAJoC,EAIpCA,aACAuhB,EALoC,EAKpCA,UACAC,EANoC,EAMpCA,aACA9gC,EAPoC,EAOpCA,WACAqZ,EARoC,EAQpCA,YACAolB,EAToC,EASpCA,aACAG,EAVoC,EAUpCA,aACAE,EAXoC,EAWpCA,aACAE,EAZoC,EAYpCA,eACAb,EAboC,EAapCA,aACAnrC,EAdoC,EAcpCA,WAGJ,OAAIhJ,EAAUssB,QAAUA,IAIpBtsB,EAAUq1B,cAAgBA,IAI1Br1B,EAAUs1B,eAAiBA,IAI3Bt1B,EAAU82C,eAAiBA,IAI3B92C,EAAU62C,YAAcA,IAIxB72C,EAAUgW,aAAeA,IAIzBhW,EAAUqvB,cAAgBA,IAI1BrvB,EAAUy0C,eAAiBA,IAI3Bz0C,EAAU40C,eAAiBA,IAI3B50C,EAAU80C,eAAiBA,IAI3B90C,EAAUg1C,iBAAmBA,IAI7Bh1C,EAAUm0C,eAAiBA,GAI3Bn0C,EAAUgJ,aAAeA,e,0CAQ7B7b,KAAK4pD,YAELx0B,KAAStkB,GAAG,yBAA0B9Q,KAAK+mD,0BAC3C3xB,KAAStkB,GAAG,0BAA2B9Q,KAAKkpD,2BAC5C9zB,KAAStkB,GAAG,wBAAyB9Q,KAAKqyB,yBAC1C1gB,IAAUb,GAAG,yBAA0B9Q,KAAKqnC,mBAC5C11B,IAAUb,GAAG,wBAAyB9Q,KAAKqnC,mBAC3C11B,IAAUb,GAAG,qBAAsB9Q,KAAKqnC,mBACxC11B,IAAUb,GAAG,uBAAwB9Q,KAAKqnD,wBAC1C11C,IAAUb,GAAG,sBAAuB9Q,KAAKipD,uBACzCt3C,IAAUb,GAAG,uBAAwB9Q,KAAKwnD,wBAC1C71C,IAAUb,GAAG,uBAAwB9Q,KAAK0nD,wBAC1C/1C,IAAUb,GAAG,yBAA0B9Q,KAAK4nD,0BAC5CjiB,GAAY70B,GAAG,oBAAqB9Q,KAAK0lC,uB,6CAIzCtQ,KAASrkB,IAAI,yBAA0B/Q,KAAK+mD,0BAC5C3xB,KAASrkB,IAAI,0BAA2B/Q,KAAKkpD,2BAC7C9zB,KAASrkB,IAAI,wBAAyB/Q,KAAKqyB,yBAC3C1gB,IAAUZ,IAAI,yBAA0B/Q,KAAKqnC,mBAC7C11B,IAAUZ,IAAI,wBAAyB/Q,KAAKqnC,mBAC5C11B,IAAUZ,IAAI,qBAAsB/Q,KAAKqnC,mBACzC11B,IAAUZ,IAAI,uBAAwB/Q,KAAKqnD,wBAC3C11C,IAAUZ,IAAI,sBAAuB/Q,KAAKipD,uBAC1Ct3C,IAAUZ,IAAI,uBAAwB/Q,KAAKwnD,wBAC3C71C,IAAUZ,IAAI,uBAAwB/Q,KAAK0nD,wBAC3C/1C,IAAUZ,IAAI,yBAA0B/Q,KAAK4nD,0BAC7CjiB,GAAY50B,IAAI,oBAAqB/Q,KAAK0lC,uB,oKA8BrBtD,GAAW9C,O,gDAAW,G,OAArCH,E,KAEErnB,EAAwBqnB,EAAxBrnB,MAAO4nB,EAAiBP,EAAjBO,aAEfiG,GAAYzO,QAAUyO,GAAYzO,SAAWkL,GAAWlL,QACxDl3B,KAAKN,SAAS,CACVy/B,QAEA+I,YAAaxI,GAAgBA,EAAarpB,OAAS,EACnD8xB,aAAc8f,OAGlBjoD,KAAKuiB,kBAAkBzK,GAAS,IAAIF,IAAI,SAAAtW,GAAC,OAAIA,EAAElC,MAE/CC,IAAgBgI,aAAa,CACzB,QAAS,4B,uIAIJ,IACQwhD,EAAmB7oD,KAAK8oD,eAAjC5uC,QACF6kB,EACF8pB,GAAkBA,EAAe9pD,MAAM+Y,MAAQ+wC,EAAe9pD,MAAM+Y,MAAMqS,MAAM,EAAG,IAAM,GAE5Ew+B,EAAgB3oD,KAAK4oD,cAA9B1uC,QACF2vC,EAAclB,GAAeA,EAAY5pD,MAAM+Y,MAAQ6wC,EAAY5pD,MAAM+Y,MAAMqS,MAAM,EAAG,IAAM,GAE5F+M,EAAYyO,GAAZzO,QAERkL,GAAWzB,KAAKzJ,EAAS2yB,EAAa9qB,K,uCAoKzB/mB,GACb,IAAM9F,EAAQxH,IAAUyH,WACxB+F,YAAiBhG,EAAO8F,K,+BAuBlB,IAAD,EAiBDhY,KAAKjB,MAfLogC,EAFC,EAEDA,MACA+I,EAHC,EAGDA,YACAC,EAJC,EAIDA,aACAuhB,EALC,EAKDA,UACAC,EANC,EAMDA,aACApC,EAPC,EAODA,SACAD,EARC,EAQDA,aACAG,EATC,EASDA,aACAvlB,EAVC,EAUDA,YACArZ,EAXC,EAWDA,WACA8+B,EAZC,EAYDA,aACAE,EAbC,EAaDA,eACAnlB,EAdC,EAcDA,QACAskB,EAfC,EAeDA,aACAnrC,EAhBC,EAgBDA,WAGEiuC,EAAiB3qB,EAAQA,EAAMrnB,OAAS,GAAK,KAC7CiyC,EAAoB5qB,EAAQA,EAAMO,cAAgB,GAAK,KAE7D,OACI,oCACI,yBAAKz/B,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CACI6d,IAAK9d,KAAKmpD,iBACVtgC,WAAYA,EACZ6Z,QAAqB,IAAZA,EACT/zB,QAAS3O,KAAKmjB,kBACdwF,SAAU3oB,KAAKyoB,aACfyb,mBAAoBlkC,KAAKikC,yBAE7B,yBAAKhkC,UAAU,mBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,2BAA2BoG,MAAO,CAAEqwC,OAAQ,KAC3D,kBAAC,GAAD,CACI53B,KAAK,eACLhB,IAAK9d,KAAK4oD,cACVxgB,WAAY0hB,EACZnkC,MAAO+jC,EACPxhB,YAAaA,EACbC,aAAcA,EACd5qB,MAAM,EACN2pB,YAAalnC,KAAKqpD,mBAG1B,kBAACW,GAAA,EAAD,CACIx7C,WAAW,SACXk0B,QAASA,EACT+L,GAAI5lB,EACJ6lB,cAAc,EACdC,eAAe,GACf,kBAAC,GAAD,CACI99B,OAAQm2C,EACRv7C,KAAMoQ,EACNqxB,gBAAiBltC,KAAK+sC,oBACtBpvB,QAAS3d,KAAKqsB,sBAI1B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa9O,KAAM2kB,EAAaQ,QAASA,EAAS/kB,QAAS3d,KAAKspD,oBAC5D,kBAAC,GAAD,CACIlgB,aAAcppC,KAAK8oD,eACnBnjC,MAAOgkC,EACPvhB,WAAY2hB,KAIpB,kBAAC,GAAD,CAAaxsC,KAAMkqC,EAAc/kB,QAASA,EAAS/kB,QAAS3d,KAAKupD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAahsC,KAAM+pC,EAAc5kB,QAASA,EAAS/kB,QAAS3d,KAAK6jD,qBAC7D,kBAAC,GAAD,CAAUhzC,OAAQ02C,KAGtB,kBAAC,GAAD,CAAahqC,KAAMoqC,EAAcjlB,QAASA,EAAS/kB,QAAS3d,KAAKwpD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAajsC,KAAMsqC,EAAgBnlB,QAASA,EAAS/kB,QAAS3d,KAAKypD,uBAC/D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,Y,GAtdEjpD,aCuCPypD,G,2MA9DXlrD,MAAQ,CACJ8R,OAAQ2qB,KAAiBnG,c,EAmB7B60B,iCAAmC,SAAA75C,GAC3BmrB,KAAiB2uB,oBACjB,EAAKrgD,e,EAIbsgD,2BAA6B,SAAA/5C,GAAW,IAC5BQ,EAAWR,EAAXQ,OAER,EAAKnR,SAAS,CAAEmR,Y,EAGpB/G,YAAc,WACVzK,IAAgBgI,aAAa,CACzB,QAAS,2BACTwJ,OAAQ,K,qFA/BM+B,EAAWC,EAAWsqB,GAAc,IAC9CtsB,EAAW7Q,KAAKjB,MAAhB8R,OAER,OAAOgC,EAAUhC,SAAWA,I,0CAI5B2qB,KAAiB1qB,GAAG,2BAA4B9Q,KAAKoqD,4BACrD5uB,KAAiB1qB,GAAG,iCAAkC9Q,KAAKkqD,oC,6CAI3D1uB,KAAiBzqB,IAAI,2BAA4B/Q,KAAKoqD,4BACtD5uB,KAAiBzqB,IAAI,iCAAkC/Q,KAAKkqD,oC,+BAsBtD,IACEr5C,EAAW7Q,KAAKjB,MAAhB8R,OACR,OAAKA,EAGD,kBAAC,IAAD,CACI0M,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAAS3d,KAAK8J,YACdwF,QAAS,CACLjF,KAAM,wBACNuB,UAAW,6BACXm8C,MAAO,2BAEX,kBAAC,GAAD,CAAU9nD,UAAU,2BAA2B4Q,OAAQA,EAAQ2R,OAAK,KAbxD,S,GA1CCjiB,IAAMC,W,oDCNpB+B,eACX,0BAAMC,EAAE,6zBACR,QCFWD,eACX,0BAAMC,EAAE,uuBACR,cCFWD,eACX,0BAAMC,EAAE,uzCACR,U,qBCWE6nD,G,2MACFtrD,MAAQ,CACJ2iC,SAAU,M,EAGd4oB,gBAAkB,SAAApnD,GACd,EAAKxD,SAAS,CAAEgiC,SAAUx+B,EAAMy+B,iB,EAGpCC,gBAAkB,WACd,EAAKliC,SAAS,CAAEgiC,SAAU,Q,EAG9B6oB,kBAAoB,WAChB,EAAK3oB,kBADiB,IAGd4oB,EAAkB,EAAK/qD,MAAvB+qD,cACHA,GAEL3gD,WAAW,kBAAM2gD,KAAiBC,M,EAGtCC,qBAAuB,WACnB,EAAK9oB,kBADoB,IAGjB+oB,EAAqB,EAAKlrD,MAA1BkrD,iBACHA,GAEL9gD,WAAW,kBAAM8gD,KAAoBF,M,EAGzCG,iBAAmB,WACf,EAAKhpB,kBADgB,IAGbipB,EAAiB,EAAKprD,MAAtBorD,aACHA,GAELA,K,wEAGM,IAAD,EAC0B7qD,KAAKP,MAAnB6S,GADZ,EACGhD,QADH,EACYgD,GAAGzB,EADf,EACeA,OACZ6wB,EAAa1hC,KAAKjB,MAAlB2iC,SAER,OACI,oCACI,kBAACroB,EAAA,EAAD,CACIpZ,UAAU,uBACVqZ,aAAW,SACXiE,KAAM2L,QAAQwY,GACd/yB,QAAS3O,KAAKsqD,iBACd,kBAACQ,GAAD,OAEJ,kBAACjoB,GAAA,EAAD,CACIzjC,GAAG,cACHsiC,SAAUA,EACVnkB,KAAM2L,QAAQwY,GACdoB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBlK,QAAS3d,KAAK4hC,iBACd,kBAAC5Z,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKuqD,kBAAmBx6C,UAAWg7C,YAAqBl6C,IACvE,kBAACgR,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,kBAE7B,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK0qD,qBAAsB36C,UAAWg7C,YAAqBl6C,IAC1E,kBAACgR,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,sBAE3ByB,aAAclD,IACZ,kBAACmX,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK4qD,iBAAkB76C,UAAWi7C,YAAan6C,IAC9D,kBAACgR,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,iB,GAtF1B/R,IAAMC,WAsGlByT,iBAAkBo2C,I,oBCtH1B,SAASY,GAAUC,GAAsB,IAAhBC,EAAe,wDAC3C,GAAKD,EAAL,CAEA,GAAIC,GAASD,EAAKxtB,YAAcwtB,EAAKxtB,WAAWrnB,OAAS,EAAG,CACxD,IAAM+0C,EAAWF,EAAKxtB,WAAWwtB,EAAKxtB,WAAWrnB,OAAS,GACpDwnB,EAAQr4B,SAASs4B,cACvBD,EAAME,SAASqtB,EAAUA,EAAS/0C,QAClCwnB,EAAMG,UAAS,GAEf,IAAMC,EAAY5yB,OAAO6yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBqtB,EAAK7nC,UAAY6nC,EAAKpnC,aAG1BonC,EAAKv1C,SCfT,IAAM+2B,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGF2e,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGP18C,GACN,MAA0C,qBAA5B9O,KAAKsrD,QAAQx8C,EAAE2M,UAEjCgwC,eANiB,SAMF38C,GACX,MAA+C,qBAAjC9O,KAAKurD,aAAaz8C,EAAE2M,WAI1C4vC,GAAMC,QAAQ5e,KAAqB,EACnC2e,GAAMC,QAAQ5e,KAAiB,EAC/B2e,GAAMC,QAAQ5e,KAAgB,EAC9B2e,GAAMC,QAAQ5e,KAAe,EAC7B2e,GAAMC,QAAQ5e,KAAkB,EAEhC2e,GAAME,aAAa7e,KAAmB,EACtC2e,GAAME,aAAa7e,KAAqB,EACxC2e,GAAME,aAAa7e,KAAqB,EACxC2e,GAAME,aAAa7e,KAAsB,E,WClBnCgf,G,YACF,WAAYjsD,GAAQ,IAAD,8BACf,4CAAMA,KASVksD,QAAU,WACN,OAAO,EAAKC,cAAc1xC,QAAQqB,WAXnB,EAcnB5F,MAAQ,WAAoB,IAAnBw1C,EAAkB,wDACjBD,EAAO,EAAKU,cAAc1xC,QAEhC+wC,GAAUC,EAAMC,IAjBD,EAoBnBhkC,aAAe,WAAO,IAAD,EACY,EAAK1nB,MAA1BugC,EADS,EACTA,OAAQsJ,EADC,EACDA,SACXtJ,GACAsJ,GAELA,EAAStJ,EAAO5gC,KAzBD,EA4BnBskC,YAAc,SAAAxgC,GAAU,IACZ88B,EAAW,EAAKvgC,MAAhBugC,OAER98B,EAAM2B,iBAEN,IAAMqmD,EAAO,EAAKU,cAAc1xC,QAC1B7D,EAAS60C,EAAKW,QAAQx1C,OAEtB5K,GADYy/C,EAAKW,QAAQC,UAClB,EAAKH,WAElB,EAAKjsD,SAAS,CACVqsD,aAAc11C,EAAS5K,EAAK4K,SAGhChX,IAAgBgI,aAAa,CACzB,QAAS,yBACTjI,GAAI4gC,EAAO5gC,GACXqM,UA7CW,EAiDnBqd,cAAgB,SAAA5lB,GACZ,IAAMgoD,EAAO,EAAKU,cAAc1xC,QAC1B4xC,EAAYZ,EAAKW,QAAQC,UAEzBz1C,EADY,EAAKs1C,UACEt1C,OAErB21C,GAAe,EACb/tB,EAAY5yB,OAAO6yB,eACnBstB,EAAYH,GAAMG,UAAUtoD,GAC5BuoD,EAAiBJ,GAAMI,eAAevoD,GAM5C,OAJI+6B,IACA+tB,IAAiB/tB,EAAUguB,YAGvB/oD,EAAMC,KACV,IAAK,YAED,IADa,EAAKwoD,UACP,CAAC,IAAD,EACsB,EAAKlsD,MAA1BugC,EADD,EACCA,OAAQsJ,EADT,EACSA,SAMhB,OALIA,GACAA,EAAStJ,EAAO5gC,IAAI,GAGxB8D,EAAM2B,kBACC,EAGX,MAEJ,IAAK,QAAU,IAAD,EACsB,EAAKpF,MAA7BugC,EADE,EACFA,OAAQksB,EADN,EACMA,YAMhB,OALIlsB,GAAUksB,GACVA,EAAYlsB,EAAO5gC,IAGvB8D,EAAM2B,kBACC,EAEX,IAAK,UACD,IAAMo5B,EAAY5yB,OAAO6yB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUkuB,YAAa,MAE5B,IAAMC,EAAalB,EAAKxtB,YAAcwtB,EAAKxtB,WAAWrnB,OAAS,EAAI60C,EAAKxtB,WAAW,GAAK,KAExF,IAAK0uB,GAAenuB,EAAUouB,aAAeD,IAAenuB,EAAUquB,aAAe,CAAC,IAAD,EACjD,EAAK7sD,MAA7BugC,EADyE,EACzEA,OAAQusB,EADiE,EACjEA,YAMhB,OALIA,GACAA,EAAYvsB,EAAO5gC,IAGvB8D,EAAM2B,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMo5B,EAAY5yB,OAAO6yB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUkuB,YAAa,MAE5B,IAAMK,EACFtB,EAAKxtB,YAAcwtB,EAAKxtB,WAAWrnB,OAAS,EAAI60C,EAAKxtB,WAAWwtB,EAAKxtB,WAAWrnB,OAAS,GAAK,KAElG,IAAKm2C,GAAcvuB,EAAUouB,aAAeG,GAAavuB,EAAUquB,eAAiBE,EAAUn2C,OAAS,CAAC,IAAD,EACnE,EAAK5W,MAA7BugC,EAD2F,EAC3FA,OAAQksB,EADmF,EACnFA,YAMhB,OALIA,GACAA,EAAYlsB,EAAO5gC,IAGvB8D,EAAM2B,kBACC,GAOnB,SAAI2mD,IAAaC,OAIbp1C,GAAUy1C,IAAcE,KACxB9oD,EAAM2B,kBACC,KAvII,EA6InBmkB,YAAc,SAAA9lB,GACVA,EAAM2B,iBAEN,IACMinD,EADO,EAAKF,cAAc1xC,QACT2xC,QAAQC,UAEzB7tB,EAAY5yB,OAAO6yB,eACnBuuB,EAAkBxuB,EAAYA,EAAUguB,WAAa,GAErD1wC,EAAY,EAAKowC,UACvB,KAAIpwC,EAAUlF,OAAS4nB,EAAU5nB,QAAUy1C,GAA3C,CAEA,IAAIY,EAAYxpD,EAAMwZ,cAAcC,QAAQ,cACvC+vC,IAELA,EAAYA,EAAUnoD,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDgX,EAAUlF,OAASo2C,EAAgBp2C,OAASq2C,EAAUr2C,OAASy1C,IAC/DY,EAAYA,EAAU5gB,OAAO,EAAGggB,EAAYvwC,EAAUlF,OAASo2C,EAAgBp2C,SAEnF7Q,SAASqQ,YAAY,cAAc,EAAO62C,MAjK3B,EAoKnBvjD,aAAe,WAAO,IACV62B,EAAW,EAAKvgC,MAAhBugC,OACHA,GAEL3gC,IAAgBgI,aAAa,CACzB,QAAS,+BACTjI,GAAI4gC,EAAO5gC,MAvKf,EAAKwsD,cAAgBrrD,IAAM4c,YAE3B,EAAKpe,MAAQ,CACTgtD,aAAcY,MANH,E,sEA8KT,IAAD,EACiB3sD,KAAKP,MAAnB6S,EADH,EACGA,EAAG0tB,EADN,EACMA,OACH+rB,EAAiB/rD,KAAKjB,MAAtBgtD,aAEAa,EAAc5sB,EAAd4sB,UAER,OACI,yBAAK3sD,UAAU,sBACX,yBAAKA,UAAU,8BACX,kBAACuzC,GAAA,EAAD,CACIrwC,IAAKiuB,KAAKhwB,MACVkO,QAAS,CAAEjF,KAAM,0BACjBkP,MAAM,UACN8I,QAASuqC,EACTj9C,SAAU3P,KAAKmJ,eAEnB,yBACI2U,IAAK9d,KAAK4rD,cACV3rD,UAAU,0BACV+U,iBAAe,EACf+I,gCAA8B,EAC9BC,YAAa1L,EAAE,UACfu6C,cAAaC,KACbC,kBAAiBJ,KACjB5oB,QAAS/jC,KAAK0jC,YACdzgC,UAAWjD,KAAK8oB,cAChB5K,QAASle,KAAKgpB,eAGtB,yBAAK/oB,UAAU,oCACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,4BAA4B0O,QAAS3O,KAAKmnB,cAC5D,kBAACpY,EAAA,EAAD,CAAWsE,SAAS,YAG5B,yBAAKpT,UAAU,qCACd8rD,GAAgBe,KAAqBE,MAClC,kBAAC,KAAD,CACIC,MAAM,SACNhtD,UAAU,8BACVsZ,MAAOwyC,GAAgB,EAAI,gBAAkB,QAC7C9pC,QAAQ,aACP8pC,Q,GAxNMxrD,IAAMC,WA6OtB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQotC,I,UCvNjBwB,I,mBACF,WAAYztD,GAAQ,IAAD,8BACf,4CAAMA,KAsCV0tD,0BAA4B,SAAA98C,GAAW,IAC3B+8C,EAASC,KAATD,KAER,EAAK1tD,SAAS,CACV4tD,SAAS,EACTvB,aAAcwB,KACdH,UA7CW,EAiDnBI,+BAAiC,SAAAn9C,GAAW,IAChC+8C,EAASC,KAATD,KAEFlC,EAAO,EAAKuC,YAAYvzC,QACxB7D,EAAS60C,EAAKW,QAAQx1C,OACtBkF,EAAY2vC,EAAK3vC,UAEvB,EAAK7b,SAAS,CACVqsD,aAAc11C,EAASkF,EAAUlF,OACjC+2C,UA1DW,EA8DnBM,uBAAyB,SAAAr9C,GAAW,IACxB+8C,EAASC,KAATD,KAER,EAAK1tD,SAAS,CAAE0tD,UAjED,EAoEnBO,gCAAkC,SAAAt9C,GAAW,IACjC+8C,EAASC,KAATD,KAER,EAAK1tD,SAAS,CAAE0tD,QAAQ,WACpBvjD,WAAW,WACM,EAAK+jD,cAAcjjD,IAAIyiD,EAAKzsD,QAAQ0V,OAAS,GAErDV,OAAM,QA3EJ,EA0FnBmT,cAAgB,SAAA5lB,GACZ,IAAMgoD,EAAO,EAAKuC,YAAYvzC,QACxB4xC,EAAYZ,EAAKW,QAAQC,UAEzBz1C,EADY60C,EAAK3vC,UACElF,OAErB21C,GAAe,EACb/tB,EAAY5yB,OAAO6yB,eACnBstB,EAAYH,GAAMG,UAAUtoD,GAC5BuoD,EAAiBJ,GAAMI,eAAevoD,GAM5C,OAJI+6B,IACA+tB,IAAiB/tB,EAAUguB,YAGvB/oD,EAAMC,KACV,IAAK,QACD,IAAKD,EAAMM,SAIP,OAHA,EAAKqqD,sBAAsB,GAE3B3qD,EAAM2B,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMo5B,EAAY5yB,OAAO6yB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUkuB,YAAa,MAE5B,IAAMK,EACFtB,EAAKxtB,YAAcwtB,EAAKxtB,WAAWrnB,OAAS,EAAI60C,EAAKxtB,WAAWwtB,EAAKxtB,WAAWrnB,OAAS,GAAK,KAElG,IAAKm2C,GAAcvuB,EAAUouB,aAAeG,GAAavuB,EAAUquB,eAAiBE,EAAUn2C,OAI1F,OAHA,EAAKw3C,sBAAsB,GAE3B3qD,EAAM2B,kBACC,EAOnB,SAAI2mD,IAAaC,OAIbp1C,GAAUy1C,IAAcE,KACxB9oD,EAAM2B,kBACC,KA7II,EAmJnBmkB,YAAc,SAAA9lB,GACVA,EAAM2B,iBAEN,IAAMqmD,EAAO,EAAKuC,YAAYvzC,QACxB4xC,EAAYZ,EAAKW,QAAQC,UAEzB7tB,EAAY5yB,OAAO6yB,eACnBuuB,EAAkBxuB,EAAYA,EAAUguB,WAAa,GAErD1wC,EAAY2vC,EAAK3vC,UACvB,KAAIA,EAAUlF,OAAS4nB,EAAU5nB,QAAUy1C,GAA3C,CAEA,IAAIY,EAAYxpD,EAAMwZ,cAAcC,QAAQ,cACvC+vC,IAEDnxC,EAAUlF,OAASo2C,EAAgBp2C,OAASq2C,EAAUr2C,OAASy1C,IAC/DY,EAAYA,EAAU5gB,OAAO,EAAGggB,EAAYvwC,EAAUlF,OAASo2C,EAAgBp2C,SAEnF7Q,SAASqQ,YAAY,cAAc,EAAO62C,MArK3B,EAwKnBhpB,YAAc,SAAAxgC,GACVA,EAAM2B,iBAEN,IAAMqmD,EAAO,EAAKuC,YAAYvzC,QAGxBqB,EAAY2vC,EAAK3vC,UAGL,SAFA2vC,EAAK3+C,YAGnB2+C,EAAK3vC,UAAY,IAOrBlc,IAAgBgI,aAAa,CACzB,QAAS,2BACTymD,SAAUvyC,KA3LC,EA+LnBwyC,gBAAkB,WAAO,IACbX,EAAS,EAAKruD,MAAdquD,KACR,GAAKA,KAEeA,EAAZzsD,QACI0V,QAAU23C,KAAtB,CAEA,IAAMhuB,EAAS,CACX5gC,GAAIgyB,KAAKhwB,MACTqK,KAAM,IAGVpM,IAAgBgI,aAAa,CACzB,QAAS,4BACT24B,aA7MW,EAiNnBiuB,mBAAqB,SAAC7uD,GAA2B,IAAvB8uD,EAAsB,wDACxCA,EACA,EAAKC,wBAAwB/uD,GAE7B,EAAK+nB,aAAa/nB,IArNP,EAyNnB+nB,aAAe,SAAA/nB,GACXC,IAAgBgI,aAAa,CACzB,QAAS,+BACTjI,QA5NW,EAgOnB+uD,wBAA0B,SAAA/uD,GAAO,IACrBguD,EAAS,EAAKruD,MAAdquD,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBzsD,EAAYysD,EAAZzsD,QAEFmpB,EAAQnpB,EAAQopB,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOA,IACxCgvD,EAAYtkC,EAAQ,EACtBukC,GAAe,EACV13C,EAAImT,EAAOnT,EAAIhW,EAAQ0V,OAAQM,IAAK,CAEzC,GADiBhW,EAAQgW,GAAjBlL,KACE,CACN4iD,GAAe,EACf,OAIJA,GACA,EAAKJ,mBAAmB7uD,GAG5B,IAAMkvD,EAAW,EAAKV,cAAcjjD,IAAIyjD,GACxC,GAAKE,EAOLA,EAAS34C,OAAM,QAJXs1C,GAFgB,EAAKwC,YAAYvzC,SAEd,KAzPR,EAgQnBq0C,sBAAwB,SAAAnvD,GAAO,IACnBguD,EAAS,EAAKruD,MAAdquD,KACR,GAAKA,EAAL,CAF0B,IAOpBgB,EAHchB,EAAZzsD,QAEcopB,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOA,IACpB,EAEpBkvD,EAAW,EAAKV,cAAcjjD,IAAIyjD,GACxC,GAAKE,EAOLA,EAAS34C,OAAM,QAJXs1C,GAFgB,EAAKwC,YAAYvzC,SAEd,KA7QR,EAoRnB2zC,sBAAwB,SAAAzuD,GAAO,IACnBguD,EAAS,EAAKruD,MAAdquD,KACR,GAAKA,EAAL,CAF0B,IAIlBzsD,EAAYysD,EAAZzsD,QAEFmpB,EAAQnpB,EAAQopB,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOA,IACxCovD,EAAY1kC,EAAQ,EAEpB2kC,EAAW,EAAKb,cAAcjjD,IAAI6jD,GACxC,GAAKC,EAULA,EAAS94C,MAAM84C,GAAU,OAVzB,CACI,IAAMhjD,EAAOqe,GAAS,GAAKA,EAAQnpB,EAAQ0V,OAAS1V,EAAQmpB,GAAOre,KAAO,GAC1E,GAAI9K,EAAQ0V,SAAW5K,EACnB,OAGJ,EAAKsiD,qBApSM,EA2SnBW,QAAU,WAAO,IACLtB,EAAS,EAAKruD,MAAdquD,KACR,GAAKA,EAAL,CAFY,IAIJzsD,EAAYysD,EAAZzsD,QAEFguD,EAAWX,IAAyBrtD,EAAQ0V,OAElD,OAAIs4C,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGL,eAAN,OAAsBX,IAAyBrtD,EAAQ0V,OAAvD,oBA1Te,EA6TnBvM,YAAc,WAAO,IACTsjD,EAAS,EAAKruD,MAAdquD,KAEJwB,aAAYxB,GACZ,EAAK1tD,SAAS,CAAE4tD,SAAS,IAEzB,EAAKuB,0BAnUM,EAuUnBh1C,WAAa,WAAO,IACRi1C,EAAW,EAAKrvD,MAAhBqvD,OAEFC,EAAmB1B,KAAU2B,sBAC9BD,IAELD,EAAOC,GAEP,EAAKF,2BA/UU,EAkVnBI,wBAA0B,WACtB,EAAKvvD,SAAS,CAAE4tD,SAAS,KAnVV,EAsVnBuB,uBAAyB,WACrB,EAAKI,0BAEL5vD,IAAgBgI,aAAa,CACzB,QAAS,4BA1VE,EA8VnB6nD,sBAAwB,WACpB7vD,IAAgBgI,aAAa,CACzB,QAAS,qCAhWE,EAoWnB8nD,iCAAmC,WAC/B9vD,IAAgBgI,aAAa,CACzB,QAAS,gDAtWE,EA0WnB+nD,iBAAmB,WACf/vD,IAAgBgI,aAAa,CACzB,QAAS,gCA5WE,EAgXnBuR,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAKpZ,MAAxCqZ,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,QACJmW,aAAW,QACXC,MAAM,UACNtZ,UAAU,4BACV0O,QAAS,kBAAMoK,EAAcC,KAC7B,kBAACjK,EAAA,EAAD,WA7XG,EAmYnBsgD,gCAAkC,SAAAnsD,GAAU,IAChCoP,EAAM,EAAK7S,MAAX6S,EACA86C,EAAS,EAAKruD,MAAdquD,KACHA,IAEmC,iBAAvBA,EAAKtuC,KAAK,WAEvB5b,EAAM0B,kBAEN,EAAKgU,sBAAsBtG,EAAE,8BAzYjC,EAAKm7C,YAAcltD,IAAM4c,YACzB,EAAKywC,cAAgB,IAAIn3C,IAEzB,EAAK1X,MAAQ,CACTquD,KAAM,KACNE,SAAS,EACTvB,aAAcwB,MATH,E,iFAcfF,KAAUv8C,GAAG,+BAAgC9Q,KAAK0tD,wBAClDL,KAAUv8C,GAAG,kCAAmC9Q,KAAK0tD,wBACrDL,KAAUv8C,GAAG,6CAA8C9Q,KAAK0tD,wBAChEL,KAAUv8C,GAAG,6BAA8B9Q,KAAK0tD,wBAChDL,KAAUv8C,GAAG,yBAA0B9Q,KAAK0tD,wBAC5CL,KAAUv8C,GAAG,+BAAgC9Q,KAAK0tD,wBAClDL,KAAUv8C,GAAG,sBAAuB9Q,KAAKmtD,2BACzCE,KAAUv8C,GAAG,4BAA6B9Q,KAAK2tD,iCAC/CN,KAAUv8C,GAAG,yBAA0B9Q,KAAK0tD,wBAC5CL,KAAUv8C,GAAG,2BAA4B9Q,KAAKwtD,kC,6CAI9CH,KAAUt8C,IAAI,+BAAgC/Q,KAAK0tD,wBACnDL,KAAUt8C,IAAI,kCAAmC/Q,KAAK0tD,wBACtDL,KAAUt8C,IAAI,6CAA8C/Q,KAAK0tD,wBACjEL,KAAUt8C,IAAI,6BAA8B/Q,KAAK0tD,wBACjDL,KAAUt8C,IAAI,yBAA0B/Q,KAAK0tD,wBAC7CL,KAAUt8C,IAAI,+BAAgC/Q,KAAK0tD,wBACnDL,KAAUt8C,IAAI,sBAAuB/Q,KAAKmtD,2BAC1CE,KAAUt8C,IAAI,4BAA6B/Q,KAAK2tD,iCAChDN,KAAUt8C,IAAI,yBAA0B/Q,KAAK0tD,wBAC7CL,KAAUt8C,IAAI,2BAA4B/Q,KAAKwtD,kC,yCA4ChC3tD,EAAWC,EAAWC,GAAW,IAAD,OAC9BC,KAAKjB,MAAdquD,OAEKttD,EAAUstD,MACnBvjD,WAAW,WACPohD,GAAU,EAAKwC,YAAYvzC,SAAS,IACrC,K,+BA0TD,IAAD,OACG5H,EAAMtS,KAAKP,MAAX6S,EADH,EAEmCtS,KAAKjB,MAArCgtD,EAFH,EAEGA,aAAcuB,EAFjB,EAEiBA,QAASF,EAF1B,EAE0BA,KAC/B,IAAKA,EAAM,OAAO,KAHb,IAKGkC,EAAiBlC,EAAjBkC,aAEF3uD,EAAUysD,EAAOA,EAAKzsD,QAAU,GAChC4uD,EAAuBnC,EAAKtuC,KAAK0wC,uBACjCC,EAAsD,oBAAvBrC,EAAKtuC,KAAK,SACzC4wC,EAAkC,iBAAvBtC,EAAKtuC,KAAK,SAE3B9e,KAAK4tD,cAAc9uB,QACnB,IAAMnZ,EAAQhlB,EAAQiX,IAAI,SAACtW,EAAGqV,GAAJ,OACtB,kBAAC,GAAD,CACImH,IAAK,SAAA6G,GAAE,OAAI,EAAKipC,cAActyC,IAAI3E,EAAGgO,IACrCxhB,IAAK7B,EAAElC,GACP4gC,OAAQ1+B,EACRgoC,SAAU,EAAK2kB,mBACf1B,YAAa,EAAKgC,sBAClBrC,YAAa,EAAK2B,0BAIpB8B,EAAe3B,IAAyBrtD,EAAQ0V,OAAS,EACzDwtB,EAAO7jC,KAAK0uD,UAElB,OACI,oCACI,kBAAC,IAAD,CACIzuD,UAAWuO,IAAW,qBAAsB,CAAE,qBAAsBkhD,IACpEnyC,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAAS3d,KAAK8J,YACd8T,kBAAgB,gBAChB,kBAAC,IAAD,CAAaxe,GAAG,gBAAgBkT,EAAE,YAClC,kBAAC,KAAD,CAAehD,QAAS,CAAEjF,KAAM,4BAC5B,yBAAKpK,UAAU,qCACX,kBAAC+hB,GAAA,EAAD,CAAYzI,MAAM,UAAU0I,QAAQ,YAAY5b,MAAO,CAAEupD,SAAU,IAC9Dt9C,EAAE,aAENy5C,GAAgB8D,KAAuBC,MACpC,kBAAC9tC,GAAA,EAAD,CAAYzI,MAAOwyC,GAAgB,EAAI,gBAAkB,QAAS9pC,QAAQ,aACrE8pC,IAIb,yBACIjuC,IAAK9d,KAAKytD,YACVruD,GAAG,8BACH4V,iBAAe,EACf+I,gCAA8B,EAC9BC,YAAa1L,EAAE,gBACfu6C,cAAagD,KACb9C,kBAAiBQ,KACjBrvC,QAASle,KAAKgpB,YACd/lB,UAAWjD,KAAK8oB,cAChBib,QAAS/jC,KAAK0jC,cAElB,kBAACpd,GAAA,EAAD,CAASrmB,UAAU,YACnB,kBAAC+hB,GAAA,EAAD,CAAYzI,MAAM,UAAU0I,QAAQ,aAC/B3P,EAAE,gBAEP,kBAAC6T,GAAA,EAAD,CAAM7W,QAAS,CAAEjF,KAAM,4BAClBsb,EACAgqC,GACG,kBAAChuC,GAAA,EAAD,CACIxN,UAAU,EACVlU,UAAU,yBACV2hB,QAAM,EACNjT,QAAS3O,KAAK+tD,iBACd,kBAACjsC,GAAA,EAAD,CAAciuC,mBAAiB,EAAChuC,QAASzP,EAAE,mBAIvD,kBAAC0P,GAAA,EAAD,KAAa6hB,GACb,kBAACvd,GAAA,EAAD,CAASrmB,UAAU,YACnB,kBAAC+hB,GAAA,EAAD,CAAYzI,MAAM,UAAU0I,QAAQ,aAC/B3P,EAAE,aAEP,kBAAC09C,GAAA,EAAD,KACI,kBAACxS,GAAA,EAAD,CACIC,QACI,kBAACkC,GAAA,EAAD,CACIpmC,MAAM,UACN8I,QAASitC,EACT3/C,SAAU3P,KAAKkvD,wBAGvB1/B,MAAOld,EAAE,mBAEb,yBAAK3D,QAAS3O,KAAKqvD,gCAAiChpD,MAAO,CAAE4pD,WAAY,gBACrE,kBAACzS,GAAA,EAAD,CACIC,QACI,kBAACkC,GAAA,EAAD,CACIpmC,MAAM,UACNxJ,SAAU0/C,EACVptC,QAASktC,EACT5/C,SAAU3P,KAAKmvD,mCAGvB3/B,MAAOld,EAAE,mBAGjB,kBAACkrC,GAAA,EAAD,CACIC,QACI,kBAACkC,GAAA,EAAD,CAAUpmC,MAAM,UAAU8I,QAASqtC,EAAU//C,SAAU3P,KAAKovD,mBAEhE5/B,MAAOld,EAAE,eAGjB,kBAAC0P,GAAA,EAAD,KAAa1P,EAAE,cAEnB,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ7E,MAAM,UAAU5K,QAAS3O,KAAK8J,aACjCwI,EAAE,WAEN49C,aAAY9C,IACT,kBAAChvC,EAAA,EAAD,CAAQ7E,MAAM,UAAU5K,QAAS3O,KAAK6Z,YACjCvH,EAAE,aAKnB,kBAAC,IAAD,CACIrS,UAAU,0BACVsd,KAAM+vC,EACN9vC,QAASC,KACTC,mBAAoB,EACpBC,QAAS3d,KAAKivD,wBACdrxC,kBAAgB,gBAChB,kBAAC,IAAD,CAAaxe,GAAG,gBAAgBkT,EAAE,yBAClC,kBAAC,KAAD,CAAehD,QAAS,CAAEjF,KAAM,4BAC3BiI,EAAE,wBAEP,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ7E,MAAM,UAAU5K,QAAS3O,KAAKivD,yBACjC38C,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQ7E,MAAM,UAAU5K,QAAS3O,KAAK6uD,wBACjCv8C,EAAE,c,GA9hBA/R,IAAMC,YAkjBtB8d,GAPCC,YACZkI,cACAxS,cACAuK,eACAkI,cAGWpI,CAAQ4uC,I,SC1kBjBiD,I,mBACF,WAAY1wD,GAAQ,IAAD,8BACf,4CAAMA,KAuGV2wD,kBAAoB,SAAAltD,GACE,UAAdA,EAAMC,MACN,EAAKktD,YAAYn2C,QAAQvE,QACzBzS,EAAM2B,iBACN3B,EAAM0B,oBA5GK,EAgHnB0rD,iBAAmB,SAAAptD,GACG,UAAdA,EAAMC,MACN,EAAK4rC,aACL7rC,EAAM2B,iBACN3B,EAAM0B,oBApHK,EAwHnB2rD,iBAAmB,SAAArtD,GACf,EAAKxD,SAAS,CACV+L,KAAMvI,EAAMyD,OAAOyC,SA1HR,EA8HnBonD,gBAAkB,SAAAttD,GACd,EAAKxD,SAAS,CACV2tB,IAAKnqB,EAAMyD,OAAOyC,SAhIP,EAoInB2lC,WAAa,WAAO,IAAD,EACqB,EAAKtvC,MAAjCgxD,EADO,EACPA,YAAaC,EADN,EACMA,WADN,EAEK,EAAK3xD,MAAnB0M,EAFS,EAETA,KAAM4hB,EAFG,EAEHA,IAKZ,GAFAA,EAAc,OAARA,EAAeA,EAAMqjC,GAD3BjlD,EAAgB,OAATA,EAAgBA,EAAOglD,IAGhBpjC,EAAd,CAKA,IAAK5hB,EAGD,OAFA,EAAK/L,SAAS,CAAEixD,WAAW,SAC3B,EAAKC,aAAa12C,QAAQvE,QAK9B,KADA0X,EAAMwjC,aAAYxjC,IAId,OAFA,EAAK3tB,SAAS,CAAEoxD,UAAU,SAC1B,EAAKT,YAAYn2C,QAAQvE,SAM7B0hC,EAFmB,EAAK53C,MAAhB43C,QAED5rC,EAAM4hB,QAnBT,EAAKujC,aAAa12C,QAAQvE,SA5If,EAkKnBm6B,aAAe,YAGXihB,EAFqB,EAAKtxD,MAAlBsxD,aAhKR,EAAKC,QAAUzwD,IAAM4c,YACrB,EAAKyzC,aAAerwD,IAAM4c,YAC1B,EAAK8zC,OAAS1wD,IAAM4c,YACpB,EAAKkzC,YAAc9vD,IAAM4c,YAEzB,EAAKpe,MAAQ,GARE,E,gFAWAc,EAAWC,EAAWC,GAAW,IAAD,SACLC,KAAKP,MAAvCgxD,EADuC,EACvCA,YAAaC,EAD0B,EAC1BA,WAAYnzC,EADc,EACdA,KAE7BA,GAAQ1d,EAAU0d,OAASA,GAC3B1T,WAAW,WACP,IAAM4B,EAAO,EAAKmlD,aAAa12C,QACzBmT,EAAM,EAAKgjC,YAAYn2C,QAExBzO,GACA4hB,IAEAojC,EAEOC,GAGRjlD,EAAKkK,QACLlK,EAAKmK,UAHLyX,EAAI1X,QAFJlK,EAAKkK,UAOV,K,yFAyBW/C,EAAWC,EAAWsqB,GAAc,IAAD,EACOn9B,KAAKP,MAAzDgxD,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,WAAYrZ,EADoB,EACpBA,OAAQ0Z,EADY,EACZA,SAAUxzC,EADE,EACFA,KADE,EAErBvd,KAAKjB,MAA7B4xD,EAF6C,EAE7CA,UAAWG,EAFkC,EAElCA,SAEnB,OAAIl+C,EAAU69C,cAAgBA,IAI1B79C,EAAU89C,aAAeA,IAIzB79C,EAAU89C,YAAcA,IAIxB99C,EAAUi+C,WAAaA,IAIvBl+C,EAAUykC,SAAWA,IAIrBzkC,EAAUm+C,WAAaA,GAIvBn+C,EAAU2K,OAASA,S,+BAqFjB,IAAD,EACwCvd,KAAKP,MAA1C8d,EADH,EACGA,KAAMmzC,EADT,EACSA,WAAYD,EADrB,EACqBA,YAAan+C,EADlC,EACkCA,EADlC,EAE2BtS,KAAKjB,MAA7B4xD,EAFH,EAEGA,UAAWG,EAFd,EAEcA,SACnB,OAAKvzC,EAGD,kBAAC,IAAD,CACIC,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS3d,KAAK8vC,aACdlyB,kBAAgB,yBAChB,kBAAC,IAAD,CAAaxe,GAAG,yBAAyBkT,EAAE,eAC3C,kBAAC,KAAD,KACI,yBAAKjM,MAAO,CAAE6qD,QAAS,OAAQC,cAAe,SAAUjiD,MAAO,MAC3D,kBAACgkC,GAAA,EAAD,CACIp1B,IAAK9d,KAAKgxD,QACVrtB,SAAU3jC,KAAK4wD,aACfphC,MAAOld,EAAE,QACT6+B,OAAO,SACPigB,aAAa,MACbje,aAAcsd,EACd77C,MAAO+7C,EACPhhD,SAAU3P,KAAKuwD,iBACfttD,UAAWjD,KAAKowD,oBAEpB,kBAACld,GAAA,EAAD,CACIp1B,IAAK9d,KAAKixD,OACVttB,SAAU3jC,KAAKqwD,YACf7gC,MAAOld,EAAE,OACT6+B,OAAO,SACPigB,aAAa,MACbje,aAAcud,EACd97C,MAAOk8C,EACPnhD,SAAU3P,KAAKwwD,gBACfvtD,UAAWjD,KAAKswD,qBAI5B,kBAACnyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK8vC,aAAcv2B,MAAM,WACrCjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAK+uC,WAAYx1B,MAAM,WACnCjH,EAAE,aAzCD,Q,gDAjFU7S,EAAOV,GACnC,OAAIA,EAAMsyD,WAAa5xD,EAAM8d,KAClB,CACH8zC,UAAU,EACVV,WAAW,EACXG,UAAU,EACVrlD,KAAM,KACN4hB,IAAK,MAIN,S,GAtGa9sB,IAAMC,YAqOnByT,iBAAkBk8C,IC/JlBmB,I,kNArDX3hC,wBAA0B,SAAAtf,GAAW,IAAD,EACS,EAAK5Q,MAAtCoR,EADwB,EACxBA,OAAQmW,EADgB,EAChBA,UAAW4I,EADK,EACLA,UAC3B,GAAKA,EAAL,CAFgC,IAIxBhe,EAAUge,EAAVhe,MACHA,GAEDvB,EAAOQ,SAAWA,GAAUR,EAAO2W,YAAcA,GAAa3W,EAAOzI,SAAWgK,EAAMxS,IACtF,EAAKmS,gB,mFA3BT7G,IAAUoG,GAAG,qCAAsC9Q,KAAK2vB,yBACxDjlB,IAAUoG,GAAG,iCAAkC9Q,KAAK2vB,yBACpDjlB,IAAUoG,GAAG,oCAAqC9Q,KAAK2vB,yBACvDjlB,IAAUoG,GAAG,wBAAyB9Q,KAAK2vB,yBAC3CjlB,IAAUoG,GAAG,mCAAoC9Q,KAAK2vB,yBACtDjlB,IAAUoG,GAAG,iCAAkC9Q,KAAK2vB,yBACpDjlB,IAAUoG,GAAG,qCAAsC9Q,KAAK2vB,2B,6CAIxDjlB,IAAUqG,IAAI,qCAAsC/Q,KAAK2vB,yBACzDjlB,IAAUqG,IAAI,iCAAkC/Q,KAAK2vB,yBACrDjlB,IAAUqG,IAAI,oCAAqC/Q,KAAK2vB,yBACxDjlB,IAAUqG,IAAI,wBAAyB/Q,KAAK2vB,yBAC5CjlB,IAAUqG,IAAI,mCAAoC/Q,KAAK2vB,yBACvDjlB,IAAUqG,IAAI,iCAAkC/Q,KAAK2vB,yBACrDjlB,IAAUqG,IAAI,qCAAsC/Q,KAAK2vB,2B,+BAenD,IAAD,EACmD3vB,KAAKP,MAArDoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAW4I,EADtB,EACsBA,UAAWI,EADjC,EACiCA,cACtC,IAAKJ,EAAW,OAAO,KAFlB,IAIGhe,EAAUge,EAAVhe,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAMqe,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5Ere,EAAMC,YAAOF,GACbgf,GAAc/e,GAAOoe,GAAYG,aAAmBR,GACpD2hC,EAAcC,aAAa3gD,EAAQmW,GACnCyqC,EAASvoC,QAAQrX,GAAOoe,GAE9B,OACI,yBAAKhwB,UAAU,cACVwxD,GACG,yBACIxxD,UAAWuO,IACP,mBACA,CAAE,yBAA0B+iD,GAC5B,CAAE,4BAA6B1/C,GAC/B,CAAE,gBAAiBA,GAAO+e,GAC1B,CAAE,sBAAuB/e,GAAOoe,GAAWW,IAE/C/c,WAAW,EACXhC,IAAKA,GAAOoe,EACZnc,IAAI,U,GA3DJvT,IAAMC,YCCxBkxD,I,kNASFC,mBAAqB,SAAAnyD,GAAW,IAAD,EACG,EAAKC,MAA3BoR,EADmB,EACnBA,OAAQmW,EADW,EACXA,UAEZnW,IAAWrR,EAAOyS,SAAW+U,IAAcxnB,EAAOJ,IAClD,EAAKmS,e,EAIbrN,YAAc,SAAAhB,GACVA,EAAM0B,mB,EAGVgtD,WAAa,SAAA1uD,GACT,GAAqB,IAAjBA,EAAM0e,OAAV,CAEA1e,EAAM0B,kBAHY,MAKqB,EAAKnF,MAApCoR,EALU,EAKVA,OAAQmW,EALE,EAKFA,UAAWrY,EALT,EAKSA,QAErBkK,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KACrB,GAAIg5C,aAAiBh5C,GAAU,OAAO,KAEtC4K,aAAS5S,EAAQmW,GAAW,GACxBrY,GAASA,M,mFA/Bb8K,KAAa3I,GAAG,mBAAoB9Q,KAAK2xD,sB,6CAIzCl4C,KAAa1I,IAAI,mBAAoB/Q,KAAK2xD,sB,+BA8BpC,IAAD,EAC4B3xD,KAAKP,MAA9B6S,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQmW,EADd,EACcA,UACbpI,EAAU5e,KAAKP,MAAfmf,MAEA/F,EAAUY,KAAa9O,IAAIkG,EAAQmW,GAEzCpI,EAAQA,GAASgoC,aAAS/tC,EAASvG,GACnC,IAAIqH,EAAWd,EAAyByxB,aAAWzxB,EAASvG,GAAnCA,EAAE,WACrBsd,EAAYkiC,aAAkBjhD,EAAQmW,GACtCgJ,EAAgB+hC,aAAsBlhD,EAAQmW,GAOpD,OALI6qC,aAAiBh5C,KACjB+F,EAAQ,KACRjF,EAAUrH,EAAE,mBAIZ,yBAAKrS,UAAU,QAAQwO,YAAazO,KAAK4xD,WAAYjjD,QAAS3O,KAAKkE,aAC/D,yBAAKjE,UAAU,iBACX,yBAAKA,UAAU,wBACd2vB,GACG,kBAAC,GAAD,CACI/e,OAAQA,EACRmW,UAAWA,EACX4I,UAAWA,EACXI,cAAeA,IAGvB,yBAAK/vB,UAAU,iBACV2e,GAAS,yBAAK3e,UAAU,uBAAuB2e,GAChD,yBAAK3e,UAAWuO,IAAW,2BAA4BmL,U,GAlE3DpZ,IAAMC,YAiFXyT,iBAAkBy9C,IChF3BM,I,kNASFxoC,uBAAyB,SAAAnZ,GAAW,IAAD,EACc,EAAK5Q,MAA1CoR,EADuB,EACvBA,OAAQmW,EADe,EACfA,UAAWirC,EADI,EACJA,cACnBhgD,EAAwB5B,EAAxB4B,QAASqG,EAAejI,EAAfiI,WAEbzH,IAAWoB,IACX+U,IAAc1O,GAAc25C,IAAkB35C,GAElD,EAAK/G,gB,EAGTzH,YAAc,WAAO,IAAD,EACkB,EAAKrK,MAA/BoR,EADQ,EACRA,OADQ,EACAohD,cAGZC,aAAYrhD,EAAQ,GAEpBshD,aAAathD,EAAQ,I,mFAvBzB4I,KAAa3I,GAAG,uBAAwB9Q,KAAKwpB,0B,6CAI7C/P,KAAa1I,IAAI,uBAAwB/Q,KAAKwpB,0B,+BAuBxC,IAAD,EACoDxpB,KAAKP,MAAtDoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAWirC,EADtB,EACsBA,cAAe3/C,EADrC,EACqCA,EAAG3D,EADxC,EACwCA,QAC7C,OAAKkC,IACAmW,GAAcirC,GAGf,yBAAKhyD,UAAU,mBACX,yBAAKA,UAAU,+BACX,kBAACoZ,EAAA,EAAD,CAAYpZ,UAAU,uBAAuBqZ,aAAW,QAAQ3K,QAAS3O,KAAK8J,aAC1E,kBAACiF,EAAA,EAAD,QAGR,yBAAK9O,UAAU,iCACX,kBAAC,GAAD,CACI4Q,OAAQA,EACRmW,UAAWirC,GAAiBjrC,EAC5BpI,MAAOqzC,EAAgB3/C,EAAE,eAAiB,KAC1C3D,QAASA,KAGjB,yBAAK1O,UAAU,kCAlBH,S,GA/BCM,IAAMC,YA8DpByT,iBAAkB+9C,IC5D3BI,I,kNACFrjB,WAAa,YAETsjB,EADsB,EAAK5yD,MAAnB4yD,c,EAIZviB,aAAe,YAEXihB,EADqB,EAAKtxD,MAAlBsxD,a,wEAIF,IAAD,EACgB/wD,KAAKP,MAAlB8/B,EADH,EACGA,MAAOjtB,EADV,EACUA,EACf,OAAKitB,EAGD,kBAAC,IAAD,CACI/hB,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS3d,KAAK8vC,aACdlyB,kBAAgB,uBAChB,kBAAC,IAAD,CAAaxe,GAAG,uBAAuBkT,EAAE,YACzC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,KACK5P,EAAMlpB,OAAS,EAAI/D,EAAE,yBAA2BA,EAAE,0BAG3D,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK8vC,aAAcv2B,MAAM,WACrCjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAK+uC,WAAYx1B,MAAM,WACnCjH,EAAE,SApBA,S,GAbI/R,IAAMC,YAiDtB8d,GAFCC,YAAQtK,cAETqK,CAAQ8zC,IC2CRE,I,kNAnGXvzD,MAAQ,G,EAcRwzD,0BAA4B,WACxB,EAAKC,MAAQC,YAAY,WACrB,IACMC,EADM,IAAIthC,KACG,EAAKnwB,UAGxB,EAAKvB,SAAS,CACV+B,KAAMixD,KAEX,IACH,EAAKzxD,UAAY,IAAImwB,M,EAGzBuhC,yBAA2B,WACnB,EAAKH,OACL7oD,aAAa,EAAK6oD,OAGtB,EAAK9yD,SAAS,CACV+B,KAAM,Q,EAIdmxD,0BAA4B,WACpB,EAAKJ,OACL7oD,aAAa,EAAK6oD,OAGtB,EAAK9yD,SAAS,CACV+B,KAAM,Q,mFAxCVgY,KAAa3I,GAAG,0BAA2B9Q,KAAKuyD,2BAChD94C,KAAa3I,GAAG,yBAA0B9Q,KAAK2yD,0BAC/Cl5C,KAAa3I,GAAG,0BAA2B9Q,KAAK4yD,6B,6CAIhDn5C,KAAa1I,IAAI,0BAA2B/Q,KAAKuyD,2BACjD94C,KAAa1I,IAAI,yBAA0B/Q,KAAK2yD,0BAChDl5C,KAAa1I,IAAI,0BAA2B/Q,KAAK4yD,6B,iCAoC1CxwD,GACP,IAAIywD,EAAQzwD,EAAE6pD,WAOd,OANqB,IAAjB4G,EAAMx8C,OACNw8C,GAAS,IACFA,EAAMx8C,OAAS,IACtBw8C,EAAQA,EAAM/mB,OAAO,EAAG,IAGrB+mB,I,iCAGAzwD,GACP,IAAIywD,EAAQzwD,EAAE6pD,WAKd,OAJqB,IAAjB4G,EAAMx8C,SACNw8C,EAAQ,IAAMA,GAGXA,I,+BAGFC,GACL,IAAIC,EAAMD,EAAI,IAEVE,GADJF,GAAKA,EAAIC,GAAM,KACA,GAEXE,GADJH,GAAKA,EAAIE,GAAQ,IACF,GACXE,GAAOJ,EAAIG,GAAQ,GAEnBzzD,EAASyzD,EAAO,IAAMjzD,KAAKmzD,WAAWH,GAAQ,IAAMhzD,KAAKozD,WAAWL,GAKxE,OAJIG,EAAM,IACN1zD,EAAS0zD,EAAM,IAAM1zD,GAGlBA,I,+BAGD,IACEiC,EAASzB,KAAKjB,MAAd0C,KACR,OAAKA,EAGD,yBAAKxB,UAAU,gBACVD,KAAKqzD,SAAS5xD,GACf,yBAAKxB,UAAU,uBALL,S,GAtFAM,IAAMC,Y,qBCe1B8yD,I,mBACF,WAAY7zD,GAAQ,IAAD,8BACf,4CAAMA,KAqDV8zD,sBAAwB,WAChB/tD,SAAS0E,gBAAkB,EAAKspD,WAAWt5C,SAC3C,EAAKu5C,iBAxDM,EA4DnBC,YAAc,WAAO,IAAD,EAC6B,EAAKj0D,MAA1CoR,EADQ,EACRA,OAAQmW,EADA,EACAA,UAAWzJ,EADX,EACWA,KAAMo2C,EADjB,EACiBA,QACjC,GAAKp2C,EAAL,CAEA,IAAI9R,EAAO,KACP4O,EAAU,KACRxB,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,GAAInO,EAAS,CAAC,IACFc,EAAYd,EAAZc,QACJA,IACAlO,EAAOkO,EAAQlO,KACf4O,EAAUV,EAAQU,SAI1B,IAAM/M,EAAU,EAAKkmD,WAAWt5C,QAC3B5M,IAED7B,EACA,EAAKmoD,iBAAiBnoD,GACf4O,EACP,EAAKu5C,iBAAiBv5C,GACfs5C,GAAWA,EAAQt5C,QAC1B/M,EAAQf,UAAYonD,EAAQt5C,QAE5B/M,EAAQiO,UAAY,KAGxBqiB,GAAWtwB,MAxFI,EAgHnByhC,WAAa,WAAO,IAAD,EAC6B,EAAKtvC,MAAzCoR,EADO,EACPA,OAAQ8iD,EADD,EACCA,QAAS7E,EADV,EACUA,OAAQvU,EADlB,EACkBA,OADlB,EAE2C,EAAKx7C,MAAvDmzD,EAFO,EAEPA,YAAa2B,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,YAEpCzmD,EAAU,EAAKkmD,WAAWt5C,QAChC,GAAK5M,EAAL,CALe,IAOPf,EAAce,EAAdf,UAERe,EAAQiO,UAAY,KATL,MAWYy4C,aAAYznD,GAEjC8N,EAAU,CACZ,QAAS,gBACT5O,KAfW,EAWPA,KAKJ6O,SAhBW,EAWDA,UASd,GADkB4O,QAAQgpC,GACX,CACX,GAAI4B,EAAW,CAAC,IACJliD,EAAUkiD,EAAVliD,MACR,IAAKA,EAAO,OAFD,IAIHgI,EAAUhI,EAAVgI,MACR,IAAKA,EAAO,OAEZ,IAAM5I,EAAO4I,EAAMA,EAAMvD,OAAS,GAE1BnH,EAAkB8B,EAAlB9B,MAAOgC,EAAWF,EAAXE,OAUfqpC,EAAO,KARS,CACZ,QAAS,oBACT3oC,MAAO,CAAE,QAAS,gBAAiBmgC,KAAM8hB,EAAS9hB,KAAM7hB,KAAM2jC,GAC9D3kD,QACAgC,SACAmJ,iBAKJkgC,EAAOlgC,EAAS,MAGpB45C,aAAkBpjD,EAAQ,OACvB,CAAC,IACIqjD,EAAgBP,EAAhBO,MAAOzpD,EAASkpD,EAATlpD,KACP0pD,EAA2BD,EAA3BC,MAAOviD,EAAoBsiD,EAApBtiD,MAAOpM,EAAa0uD,EAAb1uD,SAElBmU,EAAU,KACd,GAAI/H,EAAO,CAAC,IACAgI,EAAUhI,EAAVgI,MACR,IAAKA,EAAO,OAEZ,IAAM5I,EAAO4I,EAAMA,EAAMvD,OAAS,GAE1BnH,EAAkB8B,EAAlB9B,MAAOgC,EAAWF,EAAXE,OAEfyI,EAAUo6C,EACJ,CACE,QAAS,oBACTniD,MAAO,CAAE,QAAS,gBAAiBmgC,KAAMtnC,EAAKsnC,KAAM7hB,KAAMzlB,GAC1DyE,QACAgC,SACAmJ,WAEF,CACE,QAAS,uBACT7U,SAAU,CAAE,QAAS,gBAAiBusC,KAAMtnC,EAAKsnC,KAAM7hB,KAAMzlB,GAC7DqQ,UAAW,KACXT,gBAEL,GAAI7U,EACPmU,EAAU,CACN,QAAS,uBACTnU,SAAU,CAAE,QAAS,gBAAiBusC,KAAMtnC,EAAKsnC,KAAM7hB,KAAMzlB,GAC7DqQ,UAAW,KACXT,gBAED,GAAI85C,EAAO,CAAC,IACPzzD,EAA+ByzD,EAA/BzzD,SAAUke,EAAqBu1C,EAArBv1C,MAAOw1C,EAAcD,EAAdC,UAEzBz6C,EAAU,CACN,QAAS,oBACTw6C,MAAO,CAAE,QAAS,gBAAiBpiB,KAAMtnC,EAAKsnC,KAAM7hB,KAAMzlB,GAC1DqQ,UAAW,KACXpa,WACAke,QACAw1C,YACA/5C,WAGR,IAAKV,EAAS,OAEdm1C,EAAOn1C,EAASlP,MA/ML,EAmNnBqlC,aAAe,WAAO,IAAD,EACuB,EAAKrwC,MAArCoR,EADS,EACTA,OAAQmW,EADC,EACDA,UAAW+pC,EADV,EACUA,SAErBl4C,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACvBkC,QAAQrQ,IAGtBo7C,aAAkBpjD,EAAQ,GAG9BkgD,KA7Ne,EAgOnBjoC,cAAgB,SAAA5lB,GAAU,IACdG,EAAgFH,EAAhFG,OAAQC,EAAwEJ,EAAxEI,QAA6BC,GAA2CL,EAA/DC,IAA+DD,EAA1DuY,QAA0DvY,EAAjDE,KAAiDF,EAA3CK,SAASC,EAAkCN,EAAlCM,SAAU6wD,EAAwBnxD,EAAxBmxD,OAAQhsD,EAAgBnF,EAAhBmF,YAIxE,GADwBA,EAAhB0iC,YAEJ7nC,EAAM0B,uBAIV,OAAQyD,EAAYjF,MAChB,IAAK,QACL,IAAK,cAEIC,KAAWC,GAAWC,GAAWC,IAAc6wD,EAO1ChxD,GAAWC,GAAYC,GAAYC,GAAa6wD,IACtD,EAAKtlB,aAEL7rC,EAAM2B,iBACN3B,EAAM0B,oBAVNY,SAASqQ,YAAY,mBAErB3S,EAAM2B,iBACN3B,EAAM0B,mBASV,MAGJ,IAAK,OACIvB,IAAWC,IAAWC,GAAaC,GAAa6wD,IACjD,EAAKC,aAELpxD,EAAM2B,iBACN3B,EAAM0B,mBAEV,MAGJ,IAAK,OACIvB,IAAWC,IAAWC,GAAaC,GAAa6wD,IACjD,EAAKE,eAELrxD,EAAM2B,iBACN3B,EAAM0B,mBAEV,MAEJ,IAAK,OAEIvB,IAAWC,IAAWC,GAAaC,GAAa6wD,GAO5ChxD,IAAWC,IAAWC,GAAaC,GAAa6wD,IACrD,EAAKG,aAELtxD,EAAM2B,iBACN3B,EAAM0B,oBAVN,EAAK6vD,YAELvxD,EAAM2B,iBACN3B,EAAM0B,mBASV,MAGJ,IAAK,QACGvB,IAAWC,IAAWC,GAAaC,GAAa6wD,IAChD,EAAKK,cAELxxD,EAAM2B,iBACN3B,EAAM0B,qBAxSH,EA+SnB8vD,YAAc,WACVlvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,OAjTvB,EAoTnBy+C,WAAa,WACT9uD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,QAAQ,EAAO,OAxTrB,EA2TnB0+C,aAAe,WACX/uD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,UAAU,EAAO,OA/TvB,EAkUnB2+C,WAAa,WACThvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtC,IAAIpK,EAAO,GACHwyB,EALO,eAKPA,UACJA,IAAcA,EAAUkuB,cACxB1gD,EAAOwyB,EAAUguB,YAGhBxgD,IACLA,EAAI,gBAAYA,EAAZ,WACJjG,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,cAAc,EAAOpK,KA/U3B,EAkVnBkpD,gBAAkB,WACdnvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,aAAa,EAAO,OAtV1B,EAyVnB++C,oBAAsB,WAClBpvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,iBAAiB,EAAO,OA7V9B,EAgWnB4+C,UAAY,WACR,EAAKI,qBAjWU,EAoWnBA,kBAAoB,WAChB,IAAIpE,EAAc,GACdC,EAAa,GAFK,iBAIdzyB,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACFi3B,EAAiCj3B,EAAjCi3B,eACN,GAAIA,IADmCj3B,EAAjBk3B,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BxE,EAAcuE,EAAcz5C,UAC5Bm1C,EAAasE,EAAcE,OAKlCzE,IAAexyB,GAAcA,EAAUkuB,cACxCsE,EAAcxyB,EAAUguB,YAG5B,EAAKvsD,SAAS,CACVy1D,aAAa,EACbzE,aACAD,iBA3XW,EA+XnB2E,mBAAqB,WACjB,EAAK11D,SACD,CACIy1D,aAAa,GAEjB,WACI,EAAKE,sBArYE,EAianBrsC,YAAc,SAAA9lB,GACV,IAAMuZ,EAAYvZ,EAAMwZ,cAAcC,QAAQ,cAC1CF,IACAvZ,EAAM2B,iBACNW,SAASqQ,YAAY,cAAc,EAAO4G,KAra/B,EAyanBinB,YAAc,WACV,EAAK4xB,kBA1aU,EAubnBC,oBAAsB,WAClB,EAAKH,sBAxbU,EA2bnBI,kBAAoB,SAAC/pD,EAAM4hB,GACvB,EAAK+nC,qBACLvrD,WAAW,WAAM,IAELg0B,EAFK,eAELA,MACR,GAAIA,EAAO,CAAC,IACAi3B,EAAiCj3B,EAAjCi3B,eAAgBC,EAAiBl3B,EAAjBk3B,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAO7nC,EAClBooC,EAAW72C,MAAQyO,EACnBooC,EAAWl6C,UAAY9P,EAHoB,IAMnC+gD,EAAciJ,EAAdjJ,UACR,GAAIA,EAAW,CACX,IAAM3uB,EAAQr4B,SAASs4B,cACvBD,EAAME,SAASyuB,EAAWA,EAAUkJ,YAAYr/C,QAChDwnB,EAAM83B,OAAOnJ,EAAWA,EAAUkJ,YAAYr/C,QAE9C,IAAM4nB,EAAYz4B,SAAS04B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAMllB,EAAI,kBAAc0U,EAAd,kBAA2BA,EAA3B,sDAA4E5hB,EAA5E,QACVjG,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,cAAc,EAAO8C,IAC3C,IA7dY,EAgenBi9C,gBAAkB,SAAA1yD,GACd,IAAMoK,EAAU,EAAKuoD,aAAa37C,QAC7B5M,GAELA,EAAQkjC,SApeO,EAuenBslB,wBAvemB,qBAueO,sCAAAvhD,EAAA,wDAChBjH,EAAU,EAAKuoD,aAAa37C,QADZ,oDAKD,KADbqlB,EAAUjyB,EAAViyB,OACElpB,OALY,sDAOE4yB,MAAMjnC,KAAKu9B,GAPb,kBAOf90B,EAPe,gBAQjBA,EARiB,kEAUEsrD,aAAsBtrD,GAVxB,QAUhBqpD,EAVgB,OAYtB,EAAKp0D,SAAS,CACVm0D,SAAUppD,EACVqpD,cAGJxmD,EAAQlE,MAAQ,GAjBM,0CAveP,EA2fnB4sD,kBAAoB,WAAO,IACfjC,EAAgB,EAAKh1D,MAArBg1D,YAER,EAAKr0D,SAAS,CACVq0D,aAAcA,KA5flB,EAAKP,WAAajzD,IAAM4c,YACxB,EAAK04C,aAAet1D,IAAM4c,YAE1B,EAAKpe,MAAQ,GANE,E,iFA+CfyG,SAAS8F,iBAAiB,kBAAmBtL,KAAKuzD,uBAAuB,K,6CAIzE/tD,SAASgG,oBAAoB,kBAAmBxL,KAAKuzD,uBAAuB,K,uCAwC/DtgB,GAAgB,IACrB3gC,EAAMtS,KAAKP,MAAX6S,EACFhF,EAAUtN,KAAKwzD,WAAWt5C,QAEhC,GAAK+4B,EAAL,CAJ4B,IASpBxnC,EAAmBwnC,EAAnBxnC,KAAM6O,EAAa24B,EAAb34B,SACd,IACI,IAAM27C,EAAQC,aAASzqD,EAAM6O,EAAUhI,GACvChF,EAAQf,UAAY,KACpB0pD,EAAMl0D,QAAQ,SAAAT,GACVgM,EAAQd,YAAYlL,KAE1B,MAAOwN,GACLxB,EAAQiO,UAAY9P,QAZpB6B,EAAQiO,UAAY,O,sCA2SxBvb,KAAKi+B,UAAYz4B,SAAS04B,eACrBl+B,KAAKi+B,WACLj+B,KAAKi+B,UAAUk4B,aAEpBn2D,KAAK69B,MAAQ79B,KAAKi+B,UAAUm4B,WAAW,M,yCAGvB,IACRv4B,EAAU79B,KAAV69B,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAYz4B,SAAS04B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnB79B,KAAKwzD,WAAWt5C,QAAQvE,aARpBioB,O,uCAwBJ,IAAMtwB,EAAUtN,KAAKwzD,WAAWt5C,QAChC,GAAK5M,EAAL,CAFa,IAILf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,S,+BAgFlB,IAAD,EAC2CvM,KAAKP,MAA7CoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAW2sC,EADtB,EACsBA,QAASp2C,EAD/B,EAC+BA,KAAMjL,EADrC,EACqCA,EADrC,EAEiFtS,KAAKjB,MAAnF0xD,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAAYyE,EAF5B,EAE4BA,YAAajD,EAFzC,EAEyCA,YAAa4B,EAFtD,EAEsDA,UAAWC,EAFjE,EAEiEA,YACtE,IAAKx2C,EAAM,OAAO,KAElB,IAAM1E,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACnCqvC,EAAYntC,QAAQrQ,GACtBy9C,GAAU,EACV3C,GAAWA,EAAQO,OAAoC,iBAA3BP,EAAQO,MAAM,SAC1CoC,GAAU,EACHxC,GAAoC,iBAAvBA,EAAU,SAC9BwC,GAAU,EACHpE,GAAgD,iBAAjCA,EAAYv4C,QAAQ,WAC1C28C,GAAU,GAGd,IAAIpC,EAAQ,KACRmC,EACAnC,EACAJ,EACMxrC,aAAS,CAAE3O,QAASm6C,IACpBxrC,aAASzP,EAAS,MACjB86C,IACPO,EAAQ5rC,aAAS,CAAE3O,QAASg6C,EAAQO,SAExC,IAAMqC,EAAwBjkD,EAAZ+jD,EAAc,OAAY,QAE5C,OACI,kBAAC,IAAD,CACI74C,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS3d,KAAK8vC,aACdlyB,kBAAgB,0BAChBoqC,QAAShoD,KAAK0zD,aACd,yBAAKzzD,UAAU,6BACX,yBAAKoG,MAAO,CAAE8qC,OAAQ,KAAO+iB,GAC3BmC,GACE,oCACI,kBAACh9C,EAAA,EAAD,CACImoC,eAAe,EACfloC,aAAYhH,EAAE,QACdrS,UAAU,gCACV+Q,KAAK,QACLrC,QAAS3O,KAAK41D,iBACd,kBAAC,KAAD,CAAUviD,SAAS,aAEvB,2BACIyK,IAAK9d,KAAK61D,aACV51D,UAAU,yBACV6e,KAAK,OACLoyB,OAAO,UACPvhC,SAAU3P,KAAK81D,4BAIxBO,GAAaC,GACZ,kBAAC/Y,GAAA,EAAD,CAAYn0C,MAAO2qD,EAAapkD,SAAU3P,KAAKg2D,kBAAmB3vD,MAAO,CAAE8qC,OAAQ,gBAC/E,kBAACqM,GAAA,EAAD,CAAkBp0C,OAAO,EAAMq0C,QAAS,kBAACjK,GAAA,EAAD,CAAOj6B,MAAM,YAAaiW,MAAOld,EAAE,iBAC3E,kBAACkrC,GAAA,EAAD,CAAkBp0C,OAAO,EAAOq0C,QAAS,kBAACjK,GAAA,EAAD,CAAOj6B,MAAM,YAAaiW,MAAOld,EAAE,kBAIxF,yBACIwL,IAAK9d,KAAKwzD,WACVp0D,GAAG,4BACH4V,iBAAe,EACf+I,gCAA8B,EAC9BC,YAAa1L,EAAE,WACfrP,UAAWjD,KAAK8oB,cAChB5K,QAASle,KAAKgpB,YACd+a,QAAS/jC,KAAK0jC,cAElB,kBAACvlB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK8vC,aAAcv2B,MAAM,WACrCjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAK+uC,WAAYx1B,MAAM,WACnCg9C,IAGT,kBAAC,GAAD,CACIh5C,KAAM43C,EACN1E,YAAaA,EACbC,WAAYA,EACZrZ,OAAQr3C,KAAKw1D,kBACbzE,SAAU/wD,KAAKu1D,0B,gDA9kBC91D,EAAOV,GAAQ,IACnCsyD,EAAatyD,EAAbsyD,SACA9zC,EAAqC9d,EAArC8d,KAAM1M,EAA+BpR,EAA/BoR,OAAQmW,EAAuBvnB,EAAvBunB,UAAW2sC,EAAYl0D,EAAZk0D,QAEjC,GAAItC,IAAa9zC,EAAM,CACnB,GAAIA,EAAM,CACN,IAAM20C,EAAcz4C,KAAa9O,IAAIkG,EAAQmW,GACzC+sC,GAAc,EAOlB,OANI7B,GAAgD,iBAAjCA,EAAYv4C,QAAQ,SACnCo6C,GAAc,EACPJ,GAAWA,EAAQO,OAAoC,iBAA3BP,EAAQO,MAAM,WACjDH,GAAc,GAGX,CACH1C,UAAU,EACV0C,cACA7B,cACA4B,UAAW,KACXD,SAAU,MAGd,MAAO,CACHxC,UAAU,EACV0C,aAAa,EACb7B,YAAa,KACb4B,UAAW,KACXD,SAAU,MAKtB,OAAO,S,GA5CetzD,IAAMC,YA6mBrByT,iBAAkBq/C,IClmBlBxzB,G,WA3BX,WAAYjvB,GAAS,oBACjB7Q,KAAK6Q,OAASA,EACd7Q,KAAKw2D,WAAa,K,sDAGZp9C,GACN,GAAKpZ,KAAK6Q,OAAV,CAEA,GAAI7Q,KAAKw2D,YAAcx2D,KAAKw2D,WAAW,WAAap9C,EAAO,SAAU,CACjE,IAAIhY,EAAM,IAAIgwB,KAEd,GADAhwB,EAAIq1D,WAAWr1D,EAAIs1D,aAAeC,MAC9B32D,KAAK42D,gBAAkB52D,KAAK42D,eAAiBx1D,EAC7C,OAIRpB,KAAKw2D,WAAap9C,EAClBpZ,KAAK42D,eAAiB,IAAIxlC,KAE1B/xB,IAAgBC,KAAK,CACjB,QAAS,iBACT2S,QAASjS,KAAK6Q,OACduI,OAAQA,S,wBCgBdy9C,I,OAAoBt2D,IAAMu2C,KAAK,kBAAM,uDAErCggB,G,YACF,WAAYr3D,GAAQ,IAAD,uBACf,4CAAMA,KAoHVs3D,wBAA0B,WAElBvxD,SAAS0E,gBAAkB,EAAK8sD,cAAc98C,SAC9C,EAAKu5C,iBAxHM,EAgKnBwD,yBAA2B,SAAA5mD,GAAW,IAAD,EACH,EAAK5Q,MADF,EACzBoR,OADyB,EACjBmW,UACE,EAAKjoB,MAAfo6C,MAGJ,EAAKz5C,SAAS,CAAEy5C,OAAO,GAAS,WAC5BtvC,WAAW,WACP,EAAKnK,SAAS,CAAEy5C,OAAO,KACxB,KAGP,EAAKz5C,SAAS,CAAEy5C,OAAO,KA3KZ,EA+KnB+d,wBAA0B,SAAA7mD,GAAW,IACzBkvB,EAAUlvB,EAAVkvB,MACHA,GAEL,EAAK43B,gBAAgBluB,MAAMjnC,KAAKu9B,KAnLjB,EAsLnBhV,uBAAyB,SAAAla,GAAW,IAAD,EACG,EAAKtR,MAA/B8R,EADuB,EACvBA,OAAQohD,EADe,EACfA,cACRhgD,EAAuC5B,EAAvC4B,QAASiJ,EAA8B7K,EAA9B6K,YAAak8C,EAAiB/mD,EAAjB+mD,aAEzBnF,GACAmF,GACDvmD,IAAWoB,IAC6B,IAAxCiJ,EAAY8B,QAAQi1C,IAExB,EAAKniB,gBA/LU,EAkMnBunB,0BAA4B,SAAAhnD,GAAW,IAC3BQ,EAAsBR,EAAtBQ,OAAQmW,EAAc3W,EAAd2W,UAEhB,IAD0B,EAAKjoB,MAAvBu4D,eAEJ,EAAKv4D,MAAM8R,SAAWA,EAA1B,CAEKmW,EAGD,EAAKuwC,wBAFL,EAAKC,2BAKT,IAAMC,EAA8B,IAAdzwC,GAAmB0wC,aAAc7mD,EAAQmW,GAC/D,EAAKtnB,SACD,CACIuyD,cAAejrC,EACfywC,iBAEJ,WACS,EAAK14D,MAAM04D,gBACZ,EAAKE,iBACL,EAAKj0B,cACL75B,WAAW,WACP,EAAK+zB,cACN,QA1NA,EAqQnBg6B,0BAA4B,SAAAvnD,GACJA,EAAZitC,SAGR,EAAKua,aAzQU,EA4QnBC,yBAA2B,SAAAznD,GAAW,IAC1B4B,EAAY5B,EAAZ4B,QADyB,EAEC,EAAKlT,MAA/B8R,EAFyB,EAEzBA,OAFyB,EAEjBymD,eAGZzmD,IAAWoB,GAEf,EAAK8lD,aAnRU,EAsRnBC,4BAA8B,SAAA3nD,GAAW,IAClB+sB,EAAS/sB,EAApB4nD,UACR,GAAK76B,EAAL,CAFoC,IAI5B66B,EAAkD76B,EAAlD66B,UAAWn9C,EAAuCsiB,EAAvCtiB,UAAW5L,EAA4BkuB,EAA5BluB,MAAOgC,EAAqBksB,EAArBlsB,OAAQxQ,EAAa08B,EAAb18B,SAC7C,GAAKu3D,EAAL,CAEA,IAAM3qD,EAAU,EAAK0pD,cAAc98C,QACnC,GAAK5M,EAAL,CAEAA,EAAQiO,UAAY,KAEpB,EAAK85C,mBAEL,IAAM17C,EAAU,CACZ,QAAS,wBACTs+C,UAAW,CACP,QAAS,cACT74D,GAAI64D,EAAU74D,IAElB8P,QACAgC,SACAxQ,YAGJ,GAAIoa,EAAW,CAAC,IACGo9C,EAAkDp9C,EAAzD5L,MAA+BipD,EAA0Br9C,EAAlC5J,OAAyBzG,EAASqQ,EAATrQ,KAExDkP,EAAQmB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACT1b,GAAIqL,EAAKrL,IAEb8P,MAAOgpD,EACPhnD,OAAQinD,GAIhB,EAAKC,YAAYz+C,GAAS,EAAO,SAAAna,UA7TlB,EAgUnB64D,0BAA4B,SAAAhoD,GAAW,IAClB+sB,EAAS/sB,EAAlBlR,QACR,GAAKi+B,EAAL,CAFkC,IAI1Bj+B,EAAsCi+B,EAAtCj+B,QAAS2b,EAA6BsiB,EAA7BtiB,UAAW5L,EAAkBkuB,EAAlBluB,MAAOgC,EAAWksB,EAAXlsB,OACnC,GAAK/R,EAAL,CAEA,IAAMmO,EAAU,EAAK0pD,cAAc98C,QACnC,GAAK5M,EAAL,CAEAA,EAAQiO,UAAY,KAEpB,EAAK85C,mBAEL,IAAM17C,EAAU,CACZ,QAAS,sBACTxa,QAAS,CACL,QAAS,cACTC,GAAID,EAAQC,IAEhB8P,QACAgC,UAGJ,GAAI4J,EAAW,CAAC,IACGo9C,EAAkDp9C,EAAzD5L,MAA+BipD,EAA0Br9C,EAAlC5J,OAAyBzG,EAASqQ,EAATrQ,KAExDkP,EAAQmB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACT1b,GAAIqL,EAAKrL,IAEb8P,MAAOgpD,EACPhnD,OAAQinD,GAIhB,EAAKC,YAAYz+C,GAAS,EAAO,SAAAna,MAEjCH,IAAgBgI,aAAa,CACzB,QAAS,gCACTw8B,KAAM,WA1WK,EA8WnBy0B,oBAAsB,SAAAjoD,GAAW,IAAD,EACqB,EAAKtR,MAAtCu2B,EADY,EACpBzkB,OAAuBymD,EADH,EACGA,cACvBzmD,EAAsBR,EAAtBQ,OAAQmW,EAAc3W,EAAd2W,UAEZsO,IAAkBzkB,IAItB,EAAKnR,SAAS,CAAE64D,iBAAkBvxC,IAE9BA,IAAcswC,GACd,EAAKkB,kBAzXM,EA6XnBhmC,qBAAuB,SAAAniB,GACA,EAAKtR,MAAhB8R,SACOR,EAAOoiB,aAEtB,EAAKolC,YACL,EAAKY,eAAiB,KACtB,EAAK/4D,SACD,CACImR,OAAQR,EAAOoiB,WACf8lC,iBAAkBG,YAA6BroD,EAAOoiB,YACtDw/B,cAAe,EACfkD,aAAa,GAEjB,WACI,EAAK4C,cAIb,EAAKY,uBA/YU,EAkZnBC,SAAW,WAAO,IACN/nD,EAAW,EAAK9R,MAAhB8R,OAEFvD,EAAU,EAAK0pD,cAAc98C,QAE7B+4B,EAAgB/c,YAAarlB,GAC/BoiC,GACA,EAAK2gB,iBAAiB3gB,GACtB,EAAKvzC,SAAS,CACV64D,iBAAkBG,YAA6B7nD,MAGnDvD,EAAQiO,UAAY,MA9ZT,EA8cnBi9C,cAAgB,WACc,EAAKz5D,MAAvBu4D,eAGRztD,WAAW,WAGP+zB,GAFgB,EAAKo5B,cAAc98C,UAGpC,MAtdY,EAydnB2+C,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9BjoD,EAAyBioD,EAAzBjoD,OAAQkoD,EAAiBD,EAAjBC,aACXloD,GAELxR,IAAgBC,KAAK,CACjB,QAAS,sBACT2S,QAASpB,EACTmoD,cAAeD,MAleJ,EAsenBE,gBAAkB,SAACpoD,EAAQ0nD,EAAkBhsD,GACzC,IAAMmF,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAFuD,IAI/CsnD,EAAkBtnD,EAAlBsnD,cAJ+C,EAK5BhF,aAAYznD,GAA/Bd,EAL+C,EAK/CA,KAAM6O,EALyC,EAKzCA,SACRy+C,EACDttD,GAAQA,EAAK4K,OAAS,GAAMiE,EAASjE,OAAS,EACzC,CACI,QAAS,eACTkE,oBAAqBg+C,EACrBW,mBAAoB,CAChB,QAAS,mBACTztD,KAAM,CACF,QAAS,gBACTA,OACA6O,YAEJM,0BAA0B,EAC1BC,aAAa,IAGrB,KAEV,OAAIs+C,YAAYH,EAAeD,GACpB,KAGJ,CAAEloD,SAAQkoD,kBAlgBF,EAqgBnBK,aAAe,WAAyB,IAAxBC,IAAuB,2DACgD,EAAKt6D,MAAhF8R,EAD2B,EAC3BA,OAAQohD,EADmB,EACnBA,cAAiCqH,GADd,EACJf,iBADI,EACce,gBAAgBhC,EAD9B,EAC8BA,cAEjE,GAAIA,EAAJ,CACI,GAAK,IAAIlmC,KAASkmC,EAAiBiC,KAC/B,OAGJ,EAAKC,wBAEF,GAAIF,EACHD,GAAa,EAAKI,mBADnB,CAKP,IAAMnsD,EAAU,EAAK0pD,cAAc98C,QACnC,GAAK5M,EAAL,CAhBmC,IAkB7Bf,EAAce,EAAdf,UAKN,GAHAe,EAAQiO,UAAY,KACpB,EAAKmoB,cAEAn3B,GACAA,EAAUqP,OAAf,CAxBmC,MA0BRo4C,aAAYznD,GAA/Bd,EA1B2B,EA0B3BA,KAAM6O,EA1BqB,EA0BrBA,SAER24B,EAAgB,CAClB,QAAS,gBACTxnC,OACA6O,YAEEo/C,EAAe,CACjB,QAAS,mBACTjuD,KAAMwnC,EACNr4B,0BAA0B,EAC1BC,aAAa,GAGjB,GAAIo3C,EAAe,CACf,IAAM0H,EAAgBlgD,KAAa9O,IAAIkG,EAAQohD,GAC/C,IAAK0H,EAAe,OAFL,IAIPhgD,EAAYggD,EAAZhgD,QACR,IAAKA,EAAS,OALC,IAOPlO,EAAkBkO,EAAlBlO,KAAM4O,EAAYV,EAAZU,QACV5O,EACA,EAAKmuD,gBAAgBF,EAAc,SAAAl6D,MAC5B6a,GACP,EAAKw/C,mBAAmB5mB,GAE5Bif,aAAYrhD,EAAQ,QAEpB,EAAKunD,YAAYsB,GAAc,EAAO,SAAAl6D,UA5jB3B,EAgkBnBorD,iBAAmB,WACfvrD,IAAgBgI,aAAa,CACzB,QAAS,yBAlkBE,EAskBnBkjD,kBAAoB,WACX,EAAKha,gBAEV,EAAKA,eAAer2B,QAAQs2B,SAzkBb,EAgmBnBspB,0BAhmBmB,qBAgmBS,oCAAAvlD,EAAA,wDAEH,KADbgrB,EAAU,EAAKgR,eAAer2B,QAA9BqlB,OACElpB,OAFc,oDAIH,IAAjBkpB,EAAMlpB,OAJc,sBAKS4yB,MAAMjnC,KAAKu9B,GALpB,kBAKZw6B,EALY,gBAMfA,EANe,iEAQE,EAAKC,WAAWD,GAAS,GAR3B,OAQdpG,EARc,OAUpB,EAAKj0D,SAAS,CACV+3D,eAAe,EACf9D,YAZgB,wBAepB1qB,MAAMjnC,KAAKu9B,GAAOx9B,QAAlB,sCAA0B,WAAM0I,GAAN,uBAAA8J,EAAA,qEACQm8B,YAAcjmC,GADtB,mCACfyE,EADe,KACRgC,EADQ,KAGhByI,EAAU,CACZ,QAAS,oBACT/H,MAAO,CAAE,QAAS,gBAAiBmgC,KAAMtnC,EAAKsnC,KAAM/gC,KAAMvG,EAAKuG,KAAMkf,KAAMzlB,GAC3EyE,QACAgC,UAGJ,EAAK+oD,gBAAgBtgD,EAASlP,GAVR,yCAA1B,uDAfoB,QA6BxB,EAAK8lC,eAAer2B,QAAQ9Q,MAAQ,GA7BZ,0CAhmBT,EAgoBnBshD,qBAAuB,WACd,EAAKwP,mBAEV,EAAKA,kBAAkBhgD,QAAQs2B,SAnoBhB,EAsoBnB2pB,6BAtoBmB,qBAsoBY,oCAAA5lD,EAAA,wDAEN,KADbgrB,EAAU,EAAK26B,kBAAkBhgD,QAAjCqlB,OACElpB,OAFiB,oDAIN,IAAjBkpB,EAAMlpB,OAJiB,sBAKM4yB,MAAMjnC,KAAKu9B,GALjB,kBAKfw6B,EALe,gBAMlBA,EANkB,iEAQD,EAAKC,WAAWD,GAAS,GARxB,OAQjBpG,EARiB,OAUvB,EAAKj0D,SAAS,CACV+3D,eAAe,EACf9D,YAZmB,wBAevB1qB,MAAMjnC,KAAKu9B,GAAOx9B,QAAQ,SAAA0I,GACtB,IAAMkP,EAAU,CACZ,QAAS,uBACTnU,SAAU,CAAE,QAAS,gBAAiBusC,KAAMtnC,EAAKsnC,KAAM/gC,KAAMvG,EAAKuG,KAAMkf,KAAMzlB,IAGlF,EAAK2vD,mBAAmBzgD,EAASlP,KArBd,QAyB3B,EAAKyvD,kBAAkBhgD,QAAQ9Q,MAAQ,GAzBZ,0CAtoBZ,EAwvBnBsrD,YAAc,WACVlvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,OA1vBvB,EA6vBnBy+C,WAAa,WACT9uD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,QAAQ,EAAO,OAjwBrB,EAowBnB0+C,aAAe,WACX/uD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,UAAU,EAAO,OAxwBvB,EA2wBnB2+C,WAAa,WACThvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtC,IAAIpK,EAAO,GACHwyB,EALO,eAKPA,UACJA,IAAcA,EAAUkuB,cACxB1gD,EAAOwyB,EAAUguB,YAGhBxgD,IACLA,EAAI,gBAAYA,EAAZ,WACJjG,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,cAAc,EAAOpK,KAxxB3B,EA2xBnBkpD,gBAAkB,WACdnvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,aAAa,EAAO,OA/xB1B,EAkyBnB++C,oBAAsB,WAClBpvD,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,UAAU,EAAO,MAEtCrQ,SAASqQ,YAAY,iBAAiB,EAAO,OAtyB9B,EAyyBnB4+C,UAAY,WACR,EAAKI,qBA1yBU,EA6yBnB/kB,aAAe,WAAO,IAAD,EACmC,EAAK/wC,MAAjD8R,EADS,EACTA,OAAQohD,EADC,EACDA,cAAesG,EADd,EACcA,iBAC/B,OAAItG,GACAC,aAAYrhD,EAAQ,IACb,KACA0nD,IACPpG,aAAathD,EAAQ,IACd,IApzBI,EA0zBnBiY,cAAgB,SAAA5lB,GAAU,IACdG,EAAoFH,EAApFG,OAAQC,EAA4EJ,EAA5EI,QAAiCC,GAA2CL,EAAnEC,IAAmED,EAA9DuY,QAA8DvY,EAArDm3D,SAAqDn3D,EAA3CK,SAASC,EAAkCN,EAAlCM,SAAU6wD,EAAwBnxD,EAAxBmxD,OAAQhsD,EAAgBnF,EAAhBmF,YADvD,EAEuB,EAAKtJ,MAAzCkzD,EAFa,EAEbA,cAAesG,EAFF,EAEEA,iBAWvB,IADwBlwD,EAAhB0iC,YAKR,OAAQ1iC,EAAYjF,MAEhB,IAAK,SACD,GAAIC,GAAUC,IAAYC,IAAYC,EAAU,CAC5C,GAAIyuD,EAAe,OACnB,GAAIsG,EAAkB,OAEtBr1D,EAAM2B,iBAEV,MAEJ,IAAK,QACL,IAAK,cAEIxB,KAAWC,GAAWC,GAAWC,IAAc6wD,EAO1ChxD,GAAWC,GAAYC,GAAYC,GAAa6wD,IACtD,EAAK+E,cAAa,GAElBl2D,EAAM2B,iBACN3B,EAAM0B,oBAVNY,SAASqQ,YAAY,mBAErB3S,EAAM2B,iBACN3B,EAAM0B,mBASV,MAGJ,IAAK,SACIvB,GAAWC,GAAYC,GAAYC,IAC/B6wD,GAAU,EAAKvkB,iBAChB5sC,EAAM2B,iBACN3B,EAAM0B,mBAGd,MAGJ,IAAK,UACD,IAAKyvD,IAAWhxD,IAAWC,IAAYC,IAAYC,EAAU,CACzD,IAAM8J,EAAU,EAAK0pD,cAAc98C,QACnC,GAAI5M,IAAYA,EAAQiO,UAAW,CAE/B,GAD0B,EAAKxc,MAAvBkzD,cACW,OAEnB5yD,IAAgBgI,aAAa,CACzB,QAAS,+BAGbnE,EAAM2B,iBACN3B,EAAM0B,mBAGd,MAGJ,IAAK,OACIvB,IAAWC,IAAWC,GAAaC,GAAa6wD,IACjD,EAAKC,aAELpxD,EAAM2B,iBACN3B,EAAM0B,mBAEV,MAGJ,IAAK,OACIvB,IAAWC,IAAWC,GAAaC,GAAa6wD,IACjD,EAAKE,eAELrxD,EAAM2B,iBACN3B,EAAM0B,mBAEV,MAEJ,IAAK,OAEIvB,IAAWC,IAAWC,GAAaC,GAAa6wD,GAO5ChxD,IAAWC,IAAWC,GAAaC,GAAa6wD,IACrD,EAAKG,aAELtxD,EAAM2B,iBACN3B,EAAM0B,oBAVN,EAAK6vD,YAELvxD,EAAM2B,iBACN3B,EAAM0B,mBASV,MAGJ,IAAK,QACGvB,IAAWC,IAAWC,GAAaC,GAAa6wD,IAChD,EAAKK,cAELxxD,EAAM2B,iBACN3B,EAAM0B,qBA/6BH,EAs7BnBq1D,gBAAkB,SAACtgD,EAASlP,GACnBkP,GAEL,EAAKy+C,YAAYz+C,GAAS,EAAM,SAAAna,GAC5B,IAAM86D,EAAgB7gD,KAAa9O,IAAInL,EAAOyS,QAASzS,EAAOJ,IACzC,MAAjBk7D,GACA,EAAKC,qBAAqBD,EAAe7vD,GAG7CC,IAAU8vD,WAAWh7D,EAAOma,QAAQ/H,MAAMgI,MAAM,GAAGhI,MAAMxS,GAAII,MA/7BlD,EAm8BnBi7D,eAAiB,SAAArN,GACb,EAAKgL,YAAYhL,GAAM,EAAM,eAp8Bd,EAu8BnBgN,mBAAqB,SAACzgD,EAASlP,GACtBkP,GAEL,EAAKy+C,YAAYz+C,GAAS,EAAM,SAAAna,GAAM,OAAIkL,IAAU8vD,WAAWh7D,EAAOma,QAAQnU,SAASA,SAASpG,GAAII,MA18BrF,EA68BnBk7D,gBAAkB,SAAC/gD,EAASlP,GACnBkP,GAEL,EAAKy+C,YAAYz+C,GAAS,EAAM,SAAAna,GAAM,OAAIkL,IAAU8vD,WAAWh7D,EAAOma,QAAQw6C,MAAMA,MAAM/0D,GAAII,MAh9B/E,EAm9BnBm7D,oBAAsB,SAAChhD,EAASlP,GACvBkP,GAEL,EAAKy+C,YAAYz+C,GAAS,EAAM,SAAAna,GAAM,OAAIkL,IAAU8vD,WAAWh7D,EAAOma,QAAQwY,WAAWN,MAAMzyB,GAAII,MAt9BpF,EA0+BnBwpB,YA1+BmB,sCA0+BL,WAAM9lB,GAAN,qBAAAqR,EAAA,0DACQrR,EAAMwZ,eAAiBxZ,EAAM03D,cAAcl+C,cAArDiJ,EADE,EACFA,MADE,oDAIJ4Z,EAAQ,GACd0J,MAAMjnC,KAAK2jB,GAAO5jB,QAAQ,SAAAq7B,GACtB,GAAkC,IAA9BA,EAAKy9B,KAAK79C,QAAQ,QAAe,CACjC,IAAMvS,EAAO2yB,EAAK09B,YACdrwD,GACA80B,EAAMhoB,KAAK9M,QAKnB80B,EAAMlpB,OAAS,GAdT,uBAeNnT,EAAM2B,iBAEN,EAAKsyD,gBAAgB53B,GAjBf,+BAqBJ9iB,EAAYvZ,EAAMwZ,cAAcC,QAAQ,eArBpC,wBAuBNzZ,EAAM2B,iBACNW,SAASqQ,YAAY,cAAc,EAAO4G,GAxBpC,6DA1+BK,wDAugCnBs+C,mBAAqB,WAAO,IAChBx7B,EAAU,EAAKxgC,MAAfwgC,MACHA,GACAA,EAAMlpB,SAEXkpB,EAAMx9B,QAAQ,SAAA0I,GACV,IAAMkP,EAAU,CACZ,QAAS,uBACTnU,SAAU,CAAE,QAAS,gBAAiBusC,KAAMtnC,EAAKsnC,KAAM7hB,KAAMzlB,IAGjE,EAAK2vD,mBAAmBzgD,EAASlP,KAGrC,EAAKuwD,sBArhCU,EAwhCnBA,kBAAoB,WAChB,EAAKt7D,SAAS,CAAE6/B,MAAO,QAzhCR,EA4hCnB07B,yBAA2B,WACF,EAAKl8D,MAAlBm8D,WAGR,EAAKnD,YACL,EAAKoD,4BAjiCU,EAoiCnBA,wBAA0B,WACtB,EAAKz7D,SAAS,CAAEw7D,SAAU,QAriCX,EAwiCnBX,qBAAuB,SAAC1hD,EAASwnB,GAC7B,GAAKxnB,EAAL,CADsC,IAG9B8f,EAAwC9f,EAAxC8f,cAAehf,EAAyBd,EAAzBc,QAAS1H,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GACzC,GAAKu5B,GAC0B,+BAA3BA,EAAc,UACO,iBAArBhf,EAAQ,SAAZ,CANsC,IAQ9B/H,EAAU+H,EAAV/H,MACR,GAAKA,EAAL,CAEA,IAAMZ,EAAO+e,YAAQne,EAAMgI,MAAO2W,KAClC,GAAKvf,EAAL,CAZsC,IAcvBvG,EAASuG,EAAhBY,MACHnH,IACDA,EAAK41B,OAET51B,EAAK41B,KAAOA,EACZ31B,IAAU0wD,gBAAgBnpD,EAAS7S,EAAIqL,EAAKrL,WA3jC7B,EAinCnBg5D,YAjnCmB,sCAinCL,WAAOz+C,EAAS0hD,EAAY7wC,GAA5B,qBAAAjW,EAAA,0DAC2B,EAAKxV,MAAlC8R,EADE,EACFA,OAAQ0nD,EADN,EACMA,iBAEX1nD,EAHK,oDAIL8I,EAJK,0EAOAyb,KAASkmC,sBAAT,0CAAkEzqD,IAPlE,wBASexR,IAAgBC,KAAK,CACtC,QAAS,cACT2S,QAASpB,EACT0J,oBAAqBg+C,EACrB59C,sBAAuBhB,IAbrB,QASAna,EATA,OAgBN,EAAKE,SAAS,CAAE64D,iBAAkB,GAAK,WAC/B8C,GACA,EAAKxD,cAKbx4D,IAAgBC,KAAK,CACjB,QAAS,eACT2S,QAASpB,EACTqK,YAAa,CAAC1b,EAAOJ,MAGrBm5D,GACApG,aAAathD,EAAQ,GAGzB2Z,EAAShrB,GAjCH,kDAmCN+7D,MAAM,qBAAuB98B,KAAKG,UAAL,OAnCvB,wDAjnCK,4DAwpCnB48B,kBAAoB,SAAAx8D,GACXA,IAEL,EAAKq2D,mBACL7vD,SAASqQ,YAAY,cAAc,EAAO7W,EAAMy8D,QAChD,EAAK/3B,gBA7pCU,EAgqCnBA,YAhqCmB,sCAgqCL,WAAMxgC,GAAN,SAAAqR,EAAA,qDACV,EAAKmnD,YACL,EAAKC,WACL,EAAKC,yBAHK,yCAhqCK,wDAorCnB/G,kBAAoB,WAChB,IAAIpE,EAAc,GACdC,EAAa,GAFK,iBAIdzyB,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACFi3B,EAAiCj3B,EAAjCi3B,eACN,GAAIA,IADmCj3B,EAAjBk3B,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BxE,EAAcuE,EAAcz5C,UAC5Bm1C,EAAasE,EAAcE,OAKlCzE,IAAexyB,GAAcA,EAAUkuB,cACxCsE,EAAcxyB,EAAUguB,YAG5B,EAAKvsD,SAAS,CACVy1D,aAAa,EACbzE,aACAD,iBA3sCW,EA+sCnB2E,mBAAqB,WACjB,EAAK11D,SACD,CACIy1D,aAAa,GAEjB,WACI,EAAKE,sBArtCE,EAivCnBz3B,WAAa,WACT,IAAMtwB,EAAU,EAAK0pD,cAAc98C,QACnC,GAAK5M,EACL,GAAKA,EAAQowB,WAAWrnB,OAAxB,CAKA,IAAMwlD,EAAev+B,GAAiBhwB,GACtC,GAAKuuD,EAAL,CAIA,IAAMh+B,EAAQr4B,SAASs4B,cACvBD,EAAME,SAAS89B,EAAcA,EAAaxlD,QAC1CwnB,EAAMG,UAAS,GAEf,IAAMC,EAAY5yB,OAAO6yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBvwB,EAAQqI,cAjBJrI,EAAQqI,SArvCG,EAywCnB4/C,oBAAsB,WAClB,EAAKH,sBA1wCU,EA6wCnBI,kBAAoB,SAAC/pD,EAAM4hB,GACvB,EAAK+nC,qBACLvrD,WAAW,WAAM,IAELg0B,EAFK,eAELA,MACR,GAAIA,EAAO,CAAC,IACAi3B,EAAiCj3B,EAAjCi3B,eAAgBC,EAAiBl3B,EAAjBk3B,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAO7nC,EAClBooC,EAAW72C,MAAQyO,EACnBooC,EAAWl6C,UAAY9P,EAHoB,IAMnC+gD,EAAciJ,EAAdjJ,UACR,GAAIA,EAAW,CACX,IAAM3uB,EAAQr4B,SAASs4B,cACvBD,EAAME,SAASyuB,EAAWA,EAAUkJ,YAAYr/C,QAChDwnB,EAAM83B,OAAOnJ,EAAWA,EAAUkJ,YAAYr/C,QAE9C,IAAM4nB,EAAYz4B,SAAS04B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAMllB,EAAI,kBAAc0U,EAAd,kBAA2BA,EAA3B,sDAA4E5hB,EAA5E,QACVjG,SAASqQ,YAAY,gBAAgB,EAAO,MAC5CrQ,SAASqQ,YAAY,cAAc,EAAO8C,IAC3C,IA/yCY,EAkzCnBmjD,sBAAwB,WACpB,EAAKC,wBAnzCU,EAszCnBnG,gBAAkB,SAACv7C,EAASV,GACpBA,EACA,EAAKqiD,iBAAiBriD,GAI1B,EAAKkgD,mBAAmBx/C,IA5zCT,EA+zCnB4hD,gBAAkB,SAACtiD,EAASlP,GAGxB,OAFA,EAAKsxD,sBAAqB,GAElBpiD,EAAQ,UACZ,IAAK,oBACD,EAAK+gD,gBAAgB/gD,EAASlP,GAC9B,MAEJ,IAAK,oBACD,EAAKwvD,gBAAgBtgD,EAASlP,GAC9B,MAEJ,IAAK,uBACD,EAAK2vD,mBAAmBzgD,EAASlP,KA50C1B,EAs2CnB0Y,kBAAoB,WAChBtZ,WAAW,kBAAM,EAAKwrD,oBAAoB,IAv2C3B,EA02CnBmE,iBAAmB,WAAwB,IAAvB0C,EAAsB,wDACjC,EAAKC,WAEV,EAAKA,SAASD,UAAYA,EAC1B,EAAKC,SAASj6D,OACd,EAAKi6D,SAASC,OAAOC,iBAAiBt6D,QAAQ,SAAAyN,GAAK,OAAIA,EAAMtN,WA/2C9C,EAk3CnBy2D,mBAAqB,WACjB,EAAKa,kBAAiB,IAn3CP,EAs3CnBC,aAt3CmB,qBAs3CJ,sCAAAllD,EAAA,yDACP,EAAK4nD,SADE,wDAGPC,EAAS,KAHF,kBAKQ5nD,UAAU8nD,aAAaC,aAAa,CAAEpI,OAAO,IALrD,UAKPiI,EALO,QAMH,EAAKD,SANF,8GASNC,EATM,wBAUP,EAAK18D,SAAS,CACV88D,wBAAwB,IAXrB,2BAgBLC,EAAc,CAChBC,aAAc,EACdC,WAAY,MAGFP,EAAOC,iBAAiB,GAChCO,iBAAiBH,GAEjB97D,EAAU,CAAEk8D,SAAU,yBAA0BC,mBAAoB,MACpEC,EAAgB,CAClBC,qBAAsB,WAClB,OAAO,IAAIC,OAAOC,6DAEtBC,uBAAwBD,2DAGtBf,EAAW,IAAIiB,KAAchB,EAAQz7D,EAASo8D,GAE9CM,EAAS,GAEflB,EAASmB,gBAAkB,SAAAxuD,GACvBuuD,EAAO9lD,KAAKzI,EAAEohB,OAElBisC,EAASoB,QAAU,aAGnBpB,EAASqB,OAAS,WACdn+D,IAAgBgI,aAAa,CAAE,QAAS,2BACxC,EAAK3H,SAAS,CAAE43D,cAAe,OAFX,IAIZ4E,EAAc,EAAKC,SAAnBD,UAIR,GAHA,EAAKC,SAAW,KAEhB,EAAKpE,aACDmE,EAAJ,CAKA,IAAM77B,EAAO,IAAIo9B,KAAKJ,EAAQ,CAAE,KAAS,2BACnCK,EAAWryD,OAAOqiB,IAAI0iB,gBAAgB/P,GAEtC8zB,EAAQ,IAAIwJ,MAAMD,GACxBvJ,EAAMpoD,UAAY,WACd,IAAM4N,EAAU,CACZ,QAAS,wBACTwY,WAAY,CAAE,QAAS,gBAAiB4f,KAAM,GAAI/gC,KAAMqvB,EAAKrvB,KAAMkf,KAAMmQ,GACzE3/B,SAAUgB,KAAKk8D,MAAMzJ,EAAMzzD,UAC3Bm9D,SAAU,GACVxjD,QAAS,MAGb,EAAKsgD,oBAAoBhhD,EAAS0mB,MAG1C87B,EAASj7B,QAAU,WACf7hC,IAAgBgI,aAAa,CAAE,QAAS,4BACxC,EAAK3H,SAAS,CAAE43D,cAAe,OAE/B,EAAKS,aAIT,EAAKoE,SAAWA,EAChB,EAAKA,SAASv7D,MAAM,IACpB,EAAKK,UAAY,IAAImwB,KAErB/xB,IAAgBgI,aAAa,CAAE,QAAS,4BACxC,EAAK3H,SAAS,CAAE43D,cAAe,IAAIlmC,OApFxB,wDAt3CI,EA68CnB0sC,sBAAwB,WACpB,EAAKp+D,SAAS,CACV88D,wBAAwB,KA58C5B,EAAKtC,kBAAoB35D,IAAM4c,YAC/B,EAAKozB,eAAiBhwC,IAAM4c,YAC5B,EAAK65C,cAAgBz2D,IAAM4c,YAE3B,IAAMtM,EAASukB,KAASsG,YAPT,OASf,EAAK38B,MAAQ,CACT8R,SACA0nD,iBAAkBG,YAA6B7nD,GAC/CohD,cAAe,EACfqH,gBAAgB,EAChBhC,cAAe,KACfkF,wBAAwB,EACxBuB,SAAU,MAGdv4D,SAASqQ,YAAY,6BAA6B,EAAO,MAnB1C,E,mFAsBGjD,EAAWC,GAAY,IACjCP,EAAMtS,KAAKP,MAAX6S,EADgC,EAepCtS,KAAKjB,MAZL8R,EAHoC,EAGpCA,OACAqqD,EAJoC,EAIpCA,SACA37B,EALoC,EAKpCA,MACAg5B,EANoC,EAMpCA,iBACAtG,EAPoC,EAOpCA,cACAwF,EARoC,EAQpCA,cACAtC,EAToC,EASpCA,YACA4I,EAVoC,EAUpCA,SACAzE,EAXoC,EAWpCA,eACAhC,EAZoC,EAYpCA,cACAkF,EAboC,EAapCA,uBACArjB,EAdoC,EAcpCA,MAGJ,OAAIvmC,EAAUN,IAAMA,IAIhBO,EAAUhC,SAAWA,IAIrBgC,EAAUqoD,WAAaA,IAIvBroD,EAAU0sB,QAAUA,IAIpB1sB,EAAU0lD,mBAAqBA,IAI/B1lD,EAAUo/C,gBAAkBA,IAI5Bp/C,EAAUkrD,WAAaA,IAIvBlrD,EAAUsiD,cAAgBA,IAI1BtiD,EAAU4kD,gBAAkBA,IAI5B5kD,EAAUykD,gBAAkBA,IAI5BzkD,EAAUymD,iBAAmBA,IAI7BzmD,EAAU2pD,yBAA2BA,GAIrC3pD,EAAUsmC,QAAUA,e,kCAQxBn5C,KAAK44D,WACL54D,KAAKw4D,gBACLx4D,KAAK0jC,gB,kCAGI,IAAD,EAC4C1jC,KAAKjB,MAAjD8R,EADA,EACAA,OAAQohD,EADR,EACQA,cAAesG,EADvB,EACuBA,iBAEzBjrD,EAAUtN,KAAKg3D,cAAc98C,QACnC,GAAK5M,EAAL,CAEA,IAAIf,EAAY,KAEZA,EADA0lD,EACYjyD,KAAKy4D,eAAiBz4D,KAAKy4D,eAAelsD,UAAY,KAEtDe,EAAQf,UAGxB,IAAMwsD,EAAe/4D,KAAKi5D,gBAAgBpoD,EAAQ0nD,EAAkBhsD,GACpEvM,KAAK64D,oBAAoBE,M,0CAWzBvzD,SAAS8F,iBAAiB,kBAAmBtL,KAAK+2D,yBAAyB,GAE3EiH,KAAeltD,GAAG,4BAA6B9Q,KAAKg4D,6BACpD5iC,KAAStkB,GAAG,yBAA0B9Q,KAAKi3D,0BAC3C7hC,KAAStkB,GAAG,qBAAsB9Q,KAAKwyB,sBACvC4C,KAAStkB,GAAG,0BAA2B9Q,KAAK43D,2BAC5CjmD,IAAUb,GAAG,yBAA0B9Q,KAAK83D,0BAC5CptD,IAAUoG,GAAG,wBAAyB9Q,KAAKk3D,yBAC3Cz9C,KAAa3I,GAAG,0BAA2B9Q,KAAKq3D,2BAChD59C,KAAa3I,GAAG,oBAAqB9Q,KAAKs4D,qBAC1C7+C,KAAa3I,GAAG,uBAAwB9Q,KAAKuqB,wBAC7C0zC,KAAantD,GAAG,0BAA2B9Q,KAAKq4D,2BAEhDr4D,KAAK+3D,c,6CAIL/3D,KAAK63D,YAELmG,KAAejtD,IAAI,4BAA6B/Q,KAAKg4D,6BACrD5iC,KAASrkB,IAAI,yBAA0B/Q,KAAKi3D,0BAC5C7hC,KAASrkB,IAAI,qBAAsB/Q,KAAKwyB,sBACxC4C,KAASrkB,IAAI,0BAA2B/Q,KAAK43D,2BAC7CjmD,IAAUZ,IAAI,yBAA0B/Q,KAAK83D,0BAC7CptD,IAAUqG,IAAI,wBAAyB/Q,KAAKk3D,yBAC5Cz9C,KAAa1I,IAAI,0BAA2B/Q,KAAKq3D,2BACjD59C,KAAa1I,IAAI,oBAAqB/Q,KAAKs4D,qBAC3C7+C,KAAa1I,IAAI,uBAAwB/Q,KAAKuqB,wBAC9C0zC,KAAaltD,IAAI,0BAA2B/Q,KAAKq4D,2BAEjD7yD,SAASgG,oBAAoB,kBAAmBxL,KAAK+2D,yBAAyB,GAE9E/2D,KAAK24D,uB,iDAoEL,IAAMrrD,EAAUtN,KAAKg3D,cAAc98C,QACnC,GAAK5M,EAAL,CAFuB,IAIfmrD,EAAmBz4D,KAAnBy4D,eAER,GAAIA,EAAgB,CAGhB,GAFAnrD,EAAQf,UAAYksD,EAAelsD,WAE9BksD,EAAe56B,MAEhB,YADA79B,KAAK49B,aAIT,IAAMK,EAAYz4B,SAAS04B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASq6B,EAAe56B,OAElCvwB,EAAQqI,aAERrI,EAAQf,UAAY,KACpBvM,KAAK49B,aAGT59B,KAAK0jC,iB,8CAIL,IAAMp2B,EAAUtN,KAAKg3D,cAAc98C,QAC9B5M,IAELtN,KAAKy4D,eAAiB,CAClBlsD,UAAWe,EAAQf,UACnBsxB,MAAO79B,KAAK69B,U,uCAiKF,IAAD,EACqB79B,KAAKjB,MAA/B8R,EADK,EACLA,OAAQohD,EADH,EACGA,cAEVp5C,EAAUY,KAAa9O,IAAIkG,EAAQohD,GACzC,GAAKp5C,EAAL,CAJa,IAMLc,EAAYd,EAAZc,QACR,GAAKA,EAAL,CAPa,IASLlO,EAAkBkO,EAAlBlO,KAAM4O,EAAYV,EAAZU,QACd,GAAK5O,GAAS4O,EAAd,CAEA,IAAM/M,EAAUtN,KAAKg3D,cAAc98C,QAE/BzO,EACAzL,KAAK4zD,iBAAiBnoD,GACf4O,EACPra,KAAK4zD,iBAAiBv5C,GAEtB/M,EAAQiO,UAAY,U,uCAIX03B,GAAgB,IACrB3gC,EAAMtS,KAAKP,MAAX6S,EACFhF,EAAUtN,KAAKg3D,cAAc98C,QAEnC,GAAK+4B,EAAL,CAJ4B,IASpBxnC,EAAmBwnC,EAAnBxnC,KAAM6O,EAAa24B,EAAb34B,SACd,IACI,IAAM27C,EAAQC,aAASzqD,EAAM6O,EAAUhI,GACvChF,EAAQf,UAAY,KACpB0pD,EAAMl0D,QAAQ,SAAAT,GACVgM,EAAQd,YAAYlL,KAE1B,MAAOwN,GACLxB,EAAQiO,UAAY9P,QAZpB6B,EAAQiO,UAAY,O,yEA8IX9Q,EAAMyzD,G,2EACdzzD,E,yCAAa,M,WAEZ4P,EAAUra,KAAKg3D,cAAc98C,QAAQ3N,aAEvCvM,KAAKg3D,cAAc98C,QAAQ3N,UAAY,KACvCvM,KAAK0jC,gBAGKw6B,E,iCACFnI,aAAsBtrD,G,4DACtB0zD,aAAyB1zD,G,mCAF/BypD,E,uBAIC,CACHzpD,OACAypD,QACA75C,Y,0IAsEK,IAAD,EAC0Bra,KAAKjB,MAA/B8R,EADA,EACAA,OAAQohD,EADR,EACQA,cACVvgD,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAEA,IAAMpE,EAAUtN,KAAKg3D,cAAc98C,QACnC,GAAK5M,EAAL,CANQ,IAQAf,EAAce,EAAdf,UAMR,GALkB,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAEFe,EAAdiO,UAGR,IAAIjI,YAASzC,GACb,IAAIohD,GAEkBvgD,EAAKouB,sBAAwBpuB,EAAKouB,oBAAsB,IAAIA,GAAoBpuB,EAAKtS,MAC7Fs8D,UAAU,CAAE,QAAS,yB,iCAG3B,IACAzJ,EAAkBjyD,KAAKjB,MAAvBkzD,cACF12C,EAAYvb,KAAKg3D,cAAc98C,QAAQqB,UAC7C,IAAKA,GAAaA,EAAUlF,OAAS,IAAM47C,EAA3C,CACqBgM,KAATp6B,MAEJxkC,IAAgBgI,aAAa,CACzB,QAAS,gCACTw8B,KAAM,WALlB,CAYWu6B,YAAYh9D,MAAvB,IAEIi9D,EADUC,OACIC,KAAKhjD,GACZ6iD,YAAYh9D,MAEvB,GAAKi9D,GAAS9iD,IAAc8iD,EAAM,GAAlC,CAYA,IAAMG,EAAYptC,KAAKhwB,MACvB/B,IAAgBC,KAAK,CACjB,QAAS,cACTN,MAAOq/D,EAAM,GACb/mD,MAAO,MACR/X,KAAK,SAAAk/D,GACJp/D,IAAgBgI,aAAa,CACzB,QAAS,gCACTw8B,KAAM,CACF26B,YACAx/D,MAAOq/D,EAAM,GACbI,gBAKZp/D,IAAgBC,KAAK,CACjB,QAAS,iBACTN,MAAOq/D,EAAM,GACb/mD,MAAO,MACR/X,KAAK,SAAAk/D,GACJp/D,IAAgBgI,aAAa,CACzB,QAAS,iCACTw8B,KAAM,CACF26B,YACAx/D,MAAOq/D,EAAM,GACbI,oBAtCZ,CACqBR,KAATp6B,MAEJxkC,IAAgBgI,aAAa,CACzB,QAAS,gCACTw8B,KAAM,W,8EAwQAtE,G,yEACbA,E,oDACAA,EAAMlpB,O,oDAEU,IAAjBkpB,EAAMlpB,O,iCACgBrW,KAAKg6D,WAAWz6B,EAAM,GAAIA,EAAM,GAAGzgB,KAAKwO,WAAW,U,UAAnEqmC,E,0DAGN3zD,KAAKN,SAAS,CACV+3D,eAAe,EACf9D,Y,wBAGJ3zD,KAAKN,SAAS,CAAE6/B,U,6IAwFP5lB,GAAU,IAAD,EACY3Z,KAAKjB,MAA/B8R,EADc,EACdA,OAAQohD,EADM,EACNA,cAGXphD,GACAohD,GACAt4C,GAELta,IAAgBC,KAAK,CACjB,QAAS,mBACT2S,QAASpB,EACTyH,WAAY25C,EACZt3C,sBAAuBhB,M,yCAIZU,GAAU,IAAD,EACUra,KAAKjB,MAA/B8R,EADgB,EAChBA,OAAQohD,EADQ,EACRA,cAEXphD,GACAohD,GACA53C,GAELhb,IAAgBC,KAAK,CACjB,QAAS,qBACT2S,QAASpB,EACTyH,WAAY25C,EACZ53C,c,8EAIcV,EAAS6Q,G,iFACOxqB,KAAKjB,MAA/B8R,E,EAAAA,OAAQohD,E,EAAAA,cAEXphD,E,oDACAohD,E,oDACAt4C,E,2EAGoBta,IAAgBC,KAAK,CACtC,QAAS,kBACT2S,QAASpB,EACTyH,WAAY25C,EACZt3C,sBAAuBhB,I,QAJrBna,E,OAONgrB,EAAShrB,G,0MA0DS,IACdyyD,EAAkBjyD,KAAKjB,MAAvBkzD,cACUjyD,KAAKg3D,cAAc98C,QAAQqB,WAC1B02C,EAKfjyD,KAAKN,SAAS,CACV45D,gBAAgB,IALpBt5D,KAAKN,SAAS,CACV45D,gBAAgB,M,sCAgDxBt5D,KAAKi+B,UAAYz4B,SAAS04B,eACrBl+B,KAAKi+B,WACLj+B,KAAKi+B,UAAUk4B,aAEpBn2D,KAAK69B,MAAQ79B,KAAKi+B,UAAUm4B,WAAW,M,yCAGvB,IACRv4B,EAAU79B,KAAV69B,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAYz4B,SAAS04B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnB79B,KAAKg3D,cAAc98C,QAAQvE,aARvB3V,KAAK49B,e,6CA4GwB,IAAD,OAAf8gC,IAAe,yDACxB/K,EAAY3zD,KAAKjB,MAAjB40D,QAER3zD,KAAKN,SACD,CACI+3D,eAAe,EACf9D,QAAS,MAEb,WACQ+K,GAAU/K,GAAWA,EAAQt5C,SAC7B,EAAK28C,cAAc98C,QAAQ3N,UAAYonD,EAAQt5C,QAC/C,EAAKujB,aACL,EAAK8F,eAEL,EAAK2xB,uB,+BAmHX,IACE/iD,EAAMtS,KAAKP,MAAX6S,EADH,EAiBDtS,KAAKjB,MAdL8R,EAHC,EAGDA,OACAohD,EAJC,EAIDA,cACA0B,EALC,EAKDA,QACA4E,EANC,EAMDA,iBACAh5B,EAPC,EAODA,MAEAkxB,GATC,EAQDyK,SARC,EASDzK,aACAC,EAVC,EAUDA,WACAyE,EAXC,EAWDA,YACAsC,EAZC,EAYDA,cACA6B,EAbC,EAaDA,eACAhC,EAdC,EAcDA,cACAkF,EAfC,EAeDA,uBACArjB,EAhBC,EAgBDA,MAGEwlB,EAAiB1M,EAAgB,IAAM2M,aAAc/tD,EAAQohD,GAC/D7oC,EAAQ,kBAACD,GAAA,EAAD,CAAe5L,MAAO+5C,GAAiBgC,EAAgBjwC,SAAU,kBAACw1C,GAAD,MAAoBz1C,KAAM,kBAAC01C,GAAD,QAKvG,OAJI7M,IACA7oC,EAAO,kBAACgwB,GAAD,OAIP,yBAAKn5C,UAAU,uBACX,yBAAKA,UAAWuO,IAAW,WAAY,CAAE,qBAAsB8oD,GAAiB,CAAE,MAASne,KACvF,yBAAKl5C,UAAWuO,IAAW,oBACvB,kBAAC,GAAD,CACIqC,OAAQA,EACRmW,UAAWuxC,EACXtG,cAAewF,EAAgB,EAAIxF,EACnCtjD,QAAS3O,KAAKmjB,oBAElB,yBAAKljB,UAAU,oBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAMo5C,SAAP,CACIC,SACI,kBAACjgC,EAAA,EAAD,CAAYpZ,UAAU,uBAAuBqZ,aAAW,YACpD,kBAAC,KAAD,QAGR,kBAACu9C,GAAD,CAAmBnkD,SAAU1S,KAAKw7D,sBAG1C,yBAAKv7D,UAAU,0BACX,yBACIb,GAAG,mBACH0e,IAAK9d,KAAKg3D,cACVh5C,YAA8B1L,EAAjBqsD,EAAmB,UAAe,WAC/C3pD,iBAAe,EACf+I,gCAA8B,EAC9B9a,UAAWjD,KAAK8oB,cAEhB5K,QAASle,KAAKgpB,YACd+a,QAAS/jC,KAAK0jC,eAGtB,yBAAKzjC,UAAU,yBACX,kBAAC,GAAD,MACA,2BACI6d,IAAK9d,KAAKk6D,kBACVj6D,UAAU,yBACV6e,KAAK,OACLmyB,SAAS,WACTthC,SAAU3P,KAAKm6D,+BAEnB,2BACIr8C,IAAK9d,KAAKuwC,eACVtwC,UAAU,yBACV6e,KAAK,OACLmyB,SAAS,WACTC,OAAO,UACPvhC,SAAU3P,KAAK85D,6BAEjB5wC,QAAQ+oC,KAAmBqF,GACzB,kBAAC,GAAD,CACIzmD,OAAQA,EACR25C,cAAexqD,KAAKuqD,kBACpBI,iBAAkB3qD,KAAK0qD,qBACvBG,aAAc7qD,KAAK4qD,sBAUrC0M,GACE,yBAAKr3D,UAAU,4CACX,kBAACoZ,EAAA,EAAD,CACIpZ,UAAU,gCACVqZ,aAAW,SACXtI,KAAK,QACLuI,MAAM,YACN5K,QAAS3O,KAAK24D,oBACd,kBAACpvB,GAAD,QAIZ,yBAAKtpC,UAAU,mCACX,kBAACoZ,EAAA,EAAD,CACIpZ,UAAWuO,IAAW,uBAAwB,CAAC,8BAA+B8oD,IAAkBgC,IAChGhgD,aAAW,OACXtI,KAAK,QACLrC,QAAS3O,KAAKo5D,cACbhwC,MAIXrV,aAAclD,IAAW,kBAAC,GAAD,CAAkBi+C,OAAQ9uD,KAAKy6D,iBAC1D,kBAAC,GAAD,CAAkBl7B,MAAOA,EAAO8yB,UAAWryD,KAAK+6D,mBAAoBhK,SAAU/wD,KAAKg7D,oBAEnF,kBAAC,GAAD,CACIz9C,KAAM43C,EACN1E,YAAaA,EACbC,WAAYA,EACZrZ,OAAQr3C,KAAKw1D,kBACbzE,SAAU/wD,KAAKu1D,sBAEnB,kBAAC,GAAD,CACIh4C,KAAMk6C,EACN5mD,OAAQA,EACRmW,UAAWirC,EACX0B,QAASA,EACTpZ,OAAQv6C,KAAK41D,gBACb9G,OAAQ9uD,KAAKi8D,gBACblL,SAAU/wD,KAAK87D,wBAEnB,kBAAC,IAAD,CACIp+C,mBAAoB,EACpBH,KAAMi/C,EACN7+C,QAAS3d,KAAK89D,sBACdlgD,kBAAgB,qBAChB,kBAAC,IAAD,CAAaxe,GAAG,qBAAqBkT,EAAE,sBACvC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,KAAoB78B,EAAE,6BAE1B,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK89D,sBAAuBvkD,MAAM,WAC9CjH,EAAE,c,GAnmDR9R,aA4mDRyT,iBAAkB6iD,I,qBCpoDlBiI,I,wLAfD,IAAD,EAC0B/+D,KAAKP,MAA5BirC,EADH,EACGA,QAASs0B,EADZ,EACYA,UAEjB,OACI,yBAAK/+D,UAAU,0BACX,yBAAKA,UAAU,0BACX,kBAAC,KAAD,CAAQsZ,MAAM,UAAUtZ,UAAU,wBAAwB0O,QAASqwD,GAC9Dt0B,S,GARGnqC,IAAMC,YCC5By+D,G,iLACQ,IACE3sD,EAAMtS,KAAKP,MAAX6S,EAEFo4B,EAAoBp4B,EADNtS,KAAKjB,MAAjBgiB,QACoB,cAAmB,aAE/C,OAAO,kBAAC,GAAD,CAAe2pB,QAASA,EAASs0B,UAAWh/D,KAAKmhB,iC,GAN7BN,IAUpB5M,iBAAkBgrD,ICH3BC,I,kNAyBFp/C,mBAAqB,SAAAzP,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OAEJsuD,YAAgBtuD,EAAQR,EAAO0P,YAAY3gB,KAC3C,EAAKmS,e,EAIbyO,mBAAqB,SAAA3P,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OAEJuuD,YAAgBvuD,EAAQR,EAAO4P,WAAW7gB,KAC1C,EAAKmS,e,EAIb8tD,WAAa,WAAO,IACRxuD,EAAW,EAAKpR,MAAhBoR,OACHA,GAELxR,IAAgBC,KAAK,CACjB,QAAS,WACT2S,QAASpB,K,EAIjByuD,oBAAsB,WAAO,IACjBzuD,EAAW,EAAKpR,MAAhBoR,OACHA,GAELxR,IAAgBC,KAAK,CACjB,QAAS,oBACT2S,QAASpB,EACT0uD,uBAAuB,K,qFAzDT3sD,EAAWC,GAAY,IAAD,EAClB7S,KAAKP,MAAnB6S,EADgC,EAChCA,EAAGzB,EAD6B,EAC7BA,OAEX,OAAI+B,EAAU/B,SAAWA,GAIrB+B,EAAUN,IAAMA,I,0CAQpB2M,KAAgBnO,GAAG,mBAAoB9Q,KAAK8f,oBAC5CI,KAAgBpP,GAAG,mBAAoB9Q,KAAKggB,sB,6CAI5Cf,KAAgBlO,IAAI,mBAAoB/Q,KAAK8f,oBAC7CI,KAAgBnP,IAAI,mBAAoB/Q,KAAKggB,sB,+BA8CvC,IAAD,EACiBhgB,KAAKP,MAAnBoR,EADH,EACGA,OAAQyB,EADX,EACWA,EACVZ,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KAHb,IAKGoN,EAASpN,EAAToN,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAMyhB,EAAathB,KAAgBtU,IAAImU,EAAKK,gBAC5C,IAAKohB,EAAY,OAAO,KAFD,IAIfi/B,EAAWj/B,EAAXi/B,OACR,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAe90B,QAASp4B,EAAE,cAAe0sD,UAAWh/D,KAAKs/D,sBAEpE,IAAK,0BACD,OAAOG,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAe/0B,QAASp4B,EAAE,aAAc0sD,UAAWh/D,KAAKq/D,aAE9F,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,6BACD,OAAII,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAE9D,kBAAC,GAAD,CAAej1B,QAASp4B,EAAE,aAAc0sD,UAAWh/D,KAAKq/D,aAI3E,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,qBACD,IAAMp/C,EAAaC,KAAgBvV,IAAImU,EAAKe,eAC5C,IAAKI,EAAY,OAAO,KAFD,IAIf6a,EAAuB7a,EAAvB6a,WAAY0kC,EAAWv/C,EAAXu/C,OACpB,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAe90B,QAASp4B,EAAE,cAAe0sD,UAAWh/D,KAAKs/D,sBAEpE,IAAK,0BACD,OAAOG,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAe/0B,QAAsBp4B,EAAbwoB,EAAe,cAAmB,aAAckkC,UAAWh/D,KAAKq/D,aAE9H,IAAK,uBACD,OACI,kBAAC,GAAD,CACI30B,QAAsBp4B,EAAbwoB,EAAe,cAAmB,aAC3CkkC,UAAWh/D,KAAKq/D,aAI5B,IAAK,yBACD,OAAIvkC,EACO,kBAAC,GAAD,CAAsBjqB,OAAQA,IAE9B,kBAAC,GAAD,MAGf,IAAK,6BACD,OAAI4uD,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAGjE,kBAAC,GAAD,CACIj1B,QAAsBp4B,EAAbwoB,EAAe,cAAmB,aAC3CkkC,UAAWh/D,KAAKq/D,cAS5C,OAAO,S,GAxKM9+D,IAAMC,YA4KZyT,iBAAkBirD,I,UC9GlBU,I,mBAnEX,WAAYngE,GAAQ,IAAD,8BACf,4CAAMA,KAeVogE,YAAc,WACV,IAAMz+D,EAAM,IAAIgwB,KACV0uC,EAAU,EAAKC,OAAS3+D,EACxBgI,EAAQ,IAAO02D,EAAU,EAAKrgE,MAAMijC,QAAW,IAOrD,GALA,EAAKhjC,SAAS,CACVogE,QAASA,EAAU,EAAIA,EAAU,EACjC12D,MAAOA,EAAQ,IAAM,IAAMA,IAG3BhI,GAAO,EAAK2+D,QACR,EAAKC,QAAS,CACdC,cAAc,EAAKD,SACnB,EAAKA,QAAU,KAFD,IAINE,EAAc,EAAKzgE,MAAnBygE,UACJA,GACAA,MA9BZ,EAAKnhE,MAAQ,CACT+gE,QAAS,EAAKrgE,MAAMijC,QAAU,IAC9Bt5B,MAAO,GALI,E,iFAUfpJ,KAAKiB,UAAY,IAAImwB,KACrBpxB,KAAK+/D,OAAS//D,KAAKiB,UACnBjB,KAAK+/D,OAAOI,gBAAgBngE,KAAK+/D,OAAOK,kBAAoBpgE,KAAKP,MAAMijC,SACvE1iC,KAAKggE,QAAUvN,YAAYzyD,KAAK6/D,YAAa,O,6CA2BzC7/D,KAAKggE,UACLC,cAAcjgE,KAAKggE,SACnBhgE,KAAKggE,QAAU,Q,+BAIb,IAAD,EACsBhgE,KAAKjB,MAAxBqK,EADH,EACGA,MAAO02D,EADV,EACUA,QAEf,OACI,yBAAK7/D,UAAU,sBACX,yBAAKA,UAAU,2BACX,kBAAC,KAAD,CAAYsZ,MAAM,YAAYumD,EAAU,KAAMO,YAElD,yBAAKpgE,UAAU,+BACX,kBAACqgE,GAAA,EAAD,CAAkBtvD,KAAM,GAAI5H,MAAO,IAAMA,EAAO6Y,QAAQ,iB,GAxD5C1hB,IAAMC,YCmBhC+/D,I,kNACFC,oBAAsB,SAAC3vD,EAAQyB,GAC3B,IAAMZ,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KAClB,IAAKA,EAAKoN,KAAM,OAAO,KAEvB,OAAQpN,EAAKoN,KAAK,UACd,IAAK,qBACD,MAAM,wCAAN,OAA+CpN,EAAKkN,MAApD,KAEJ,IAAK,qBACD,IAAMqB,EAAaC,KAAgBvV,IAAI+G,EAAKoN,KAAKe,eACjD,OAAII,EACOA,EAAW6a,WAAX,iDACyCppB,EAAKkN,MAD9C,oDAEuClN,EAAKkN,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,MAAM,6CAAN,OAAoDvK,YAAkBxD,GAAQ,EAAOyB,GAArF,KAIR,OAAO,M,wEAGD,IAAD,EACgCtS,KAAKP,MAAlCke,EADH,EACGA,QAAS9M,EADZ,EACYA,OAAQyB,EADpB,EACoBA,EAAGiL,EADvB,EACuBA,KAE5B,OACI,kBAAC,IAAD,CACIG,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,sBAChBL,KAAMA,GACN,kBAAC,IAAD,CAAane,GAAG,uBAAuBiV,YAAkBxD,GAAQ,EAAOyB,IACxE,kBAAC,KAAD,KACI,yBAAKrS,UAAU,yBACX,kBAAC,GAAD,CAAU4Q,OAAQA,IAClB,kBAACs+B,GAAA,EAAD,CAAmB/vC,GAAG,6BACjBY,KAAKwgE,oBAAoB3vD,EAAQyB,MAI9C,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS,kBAAMgP,GAAQ,IAAQpE,MAAM,WAA7C,UAGA,kBAAC6E,EAAA,EAAD,CAAQzP,QAAS,kBAAMgP,GAAQ,IAAOpE,MAAM,UAAU8E,WAAS,GAA/D,Y,GAnDU9d,IAAMC,YA4D9BigE,GAA0BxsD,cAAkBssD,IAE5CG,G,iLACQ,IAAD,EACgC1gE,KAAKP,MAAlCke,EADH,EACGA,QAAS9M,EADZ,EACYA,OAAQyB,EADpB,EACoBA,EAAGiL,EADvB,EACuBA,KAE5B,OACI,kBAAC,IAAD,CACIG,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,sBAChBL,KAAMA,GACN,kBAAC,IAAD,CAAane,GAAG,uBAAuBiV,YAAkBxD,GAAQ,EAAOyB,IACxE,kBAAC,KAAD,KACI,yBAAKrS,UAAU,yBACX,kBAAC,GAAD,CAAU4Q,OAAQA,IAClB,kBAACs+B,GAAA,EAAD,CAAmB/vC,GAAG,6BAAtB,0CAKR,kBAAC+e,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS,kBAAMgP,GAAQ,IAAQpE,MAAM,WAA7C,UAGA,kBAAC6E,EAAA,EAAD,CAAQzP,QAAS,kBAAMgP,GAAQ,IAAOpE,MAAM,UAAU8E,WAAS,GAA/D,Y,GAvBa9d,IAAMC,WAgCjCmgE,GAA6B1sD,cAAkBysD,IAE/Cr/B,G,YACF,WAAY5hC,GAAQ,IAAD,8BACf,4CAAMA,KASVmhE,kBAAoB,SAAA19D,GAChB,EAAKxD,SAAS,CAAEgiC,SAAUx+B,EAAMy+B,iBAXjB,EAcnBC,gBAAkB,WACd,EAAKliC,SAAS,CAAEgiC,SAAU,QAfX,EAkBnBm/B,eAAiB,WACb,EAAKj/B,kBACL/3B,WAAW,kBAAM,EAAKpK,MAAMqhE,mBAAmB,MApBhC,EAuBnBC,mBAAqB,WACjB,EAAKn/B,kBAEL,EAAKliC,SAAS,CAAEshE,kBAAkB,KA1BnB,EA6BnBC,2BAA6B,SAAAzhE,GAAW,IAC5B8S,EAAM,EAAK7S,MAAX6S,EAIR,GAFA,EAAK5S,SAAS,CAAEshE,kBAAkB,IAE7BxhE,EAAL,CAEA,IAAMqR,EAAS2qB,KAAiBE,YAC1B7iB,EAAUvG,EAAE,sBACZ4uD,EAAU,CACZ,QAAS,oBACTjvD,QAASpB,EACT0uD,uBAAuB,GAG3B,EAAK3mD,sBAAsB/H,EAAQ,2BAA4BgI,EAASqoD,KA5CzD,EA+CnBC,YAAc,WACV,EAAKv/B,kBAEL,EAAKliC,SAAS,CAAE0hE,YAAY,KAlDb,EAqDnBC,oBAAsB,SAAA7hE,GAGlB,GAFA,EAAKE,SAAS,CAAE0hE,YAAY,IAEvB5hE,EAAL,CAEA,IAAMqR,EAAS2qB,KAAiBE,YAC1B7iB,EAAU,EAAKyoD,yBAAyBzwD,GAC1CqwD,EAAUntD,aAAclD,GACtB,CAAE,QAAS,oBAAqBoB,QAASpB,EAAQ0uD,uBAAuB,GACxE,CAAE,QAAS,YAAattD,QAASpB,GAEnCuH,aAAavH,IAAW0wD,YAAU1wD,KAClCqwD,EAAU,CACN,QAAS,sBACTjvD,QAASpB,EACTN,QAASE,IAAUgH,UACnB+nD,OAAQ,CACJ,QAAS,0BACTC,WAAW,KAKvB,EAAK7mD,sBAAsB/H,EAAQ,wBAAyBgI,EAASqoD,KA5EtD,EA+EnBtoD,sBAAwB,SAAC/H,EAAQ2wD,EAAkB3oD,EAASqoD,GAAa,IAC7D5uD,EAAM,EAAK7S,MAAX6S,EACR,GAAKkvD,EAAL,CAEA,IAAMr+D,EAAG,UAAMq+D,EAAN,mBAAiC3wD,GACpCuI,EAAM,sCAAG,sBAAA7E,EAAA,8EAEDlV,IAAgBC,KAAK4hE,GAFpB,uBAIP7hE,IAAgBgI,aAAa,CAAE,QAASm6D,EAAkB3wD,SAAQ6kB,YAAY,IAJvE,qEAAH,qDALwD,EAgBzB,EAAKj2B,MAAxCqZ,EAhB4D,EAgB5DA,gBAAiBC,EAhB2C,EAgB3CA,cAEzB1Z,IAAgBgI,aAAa,CAAE,QAASm6D,EAAkB3wD,SAAQ6kB,YAAY,IAC9E,IAAM1c,EAAWF,EAAgBD,EAAS,CACtC4oD,SAAS,EACTt+D,MACAgW,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,WACJoW,MAAM,UACNtZ,UAAU,mBACV,kBAAC,GAAD,CACIyiC,QAASxpB,IACTgnD,UAAW,WACP9mD,IACAL,EAAcC,OAG1B,kBAACoF,EAAA,EAAD,CACIjb,IAAI,OACJoW,MAAM,UACNvI,KAAK,QACLrC,QAAS,WA1BjBtP,IAAgBgI,aAAa,CAAE,QAASm6D,EAAkB3wD,SAAQ6kB,YAAY,IA4BlE3c,EAAcC,KAEjB1G,EAAE,cA1HA,EAgInBovD,kBAAoB,SAAC7wD,EAAQyB,GACzB,IAAMZ,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KAClB,IAAKA,EAAKoN,KAAM,OAAO,KAEvB,OAAQpN,EAAKoN,KAAK,UACd,IAAK,qBACD,OAAOxM,EAAE,cAEb,IAAK,qBACD,IAAM2N,EAAaC,KAAgBvV,IAAI+G,EAAKoN,KAAKe,eACjD,OAAII,EACOA,EAAW6a,WAAaxoB,EAAE,gBAAkBA,EAAE,iBAGlD,KAEX,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,kBAIjB,OAAO,MAvJQ,EA0JnBgvD,yBAA2B,SAAAzwD,GAAW,IAC1ByB,EAAM,EAAK7S,MAAX6S,EAEFZ,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAOY,EAAE,mBACpB,IAAKZ,EAAKoN,KAAM,OAAOxM,EAAE,mBAEzB,OAAQZ,EAAKoN,KAAK,UACd,IAAK,qBACD,OAAOxM,EAAE,mBAEb,IAAK,qBACD,IAAM2N,EAAaC,KAAgBvV,IAAI+G,EAAKoN,KAAKe,eACjD,OAAII,EACOA,EAAW6a,WAAa,eAAiB,aAG7CxoB,EAAE,mBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,mBAIjB,OAAOA,EAAE,oBAnLM,EAsLnBqvD,YAAc,WACV,EAAK//B,kBAEL,IAAM/wB,EAAS2qB,KAAiBE,YAChCr8B,IAAgBgI,aAAa,CACzB,QAAS,oBACTwJ,YAzLJ,EAAK9R,MAAQ,CACT2iC,SAAU,KACV0/B,YAAY,EACZJ,kBAAkB,GANP,E,sEAgMT,IACE1uD,EAAMtS,KAAKP,MAAX6S,EADH,EAE8CtS,KAAKjB,MAAhD2iC,EAFH,EAEGA,SAAU0/B,EAFb,EAEaA,WAAYJ,EAFzB,EAEyBA,iBAExBnwD,EAAS2qB,KAAiBE,YAC1BjG,EAAemsC,YAAgB/wD,GAC/BgxD,EAAaC,YAAcjxD,GAC3BkxD,EAAiB/hE,KAAK0hE,kBAAkB7wD,EAAQyB,GAChD0vD,EAAeC,YAAgBpxD,GAErC,OACI,oCACI,kBAACwI,EAAA,EAAD,CACIgqB,YAAW3B,EAAW,cAAgB,KACtC4B,gBAAc,OACdrjC,UAAU,mBACVqZ,aAAW,OACX3K,QAAS3O,KAAK4gE,mBACd,kBAAC3xB,GAAD,OAEJ,kBAACpM,GAAA,EAAD,CACIzjC,GAAG,YACHsiC,SAAUA,EACVnkB,KAAM2L,QAAQwY,GACd/jB,QAAS3d,KAAK4hC,gBACdkB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK6gE,gBAAiBvuD,EAAE,aAC1CmjB,GAAgB,kBAACzN,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK+gE,oBAAqBzuD,EAAE,iBAC/DuvD,GAAcE,GAAkB,kBAAC/5C,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKmhE,aAAcY,GACtEC,GAAgB,kBAACh6C,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK2hE,aAAcrvD,EAAE,WAE7D,kBAACmuD,GAAD,CAAyB5vD,OAAQA,EAAQ0M,KAAM6jD,EAAYzjD,QAAS3d,KAAKqhE,sBACzE,kBAACV,GAAD,CACI9vD,OAAQA,EACR0M,KAAMyjD,EACNrjD,QAAS3d,KAAKihE,kC,GA9OL1gE,IAAMC,WA0PpB8d,GALCC,YACZC,eACAvK,cAGWqK,CAAQ+iB,IC5MR6gC,I,kNApIXC,8BAAgC,SAAA9xD,GACT,EAAK5Q,MAAhBoR,SACOR,EAAO4B,SAEtB,EAAKV,e,EAGTc,kBAAoB,SAAAhC,GACG,EAAK5Q,MAAhBoR,SACOR,EAAO4B,SAEtB,EAAKV,e,EAGT6wD,uBAAyB,SAAA/xD,GACF,EAAK5Q,MAAhBoR,SACOR,EAAO4B,SAEtB,EAAKV,e,EAGTnB,mBAAqB,SAAAC,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,GACAA,EAAKoN,KAEV,OAAQpN,EAAKoN,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYxN,EAAKoN,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA/d,GAAC,OAAIA,EAAEiP,UAAYF,EAAOE,WAE3D,EAAKgB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGG,EAAKoN,KAAKvO,UAAYF,EAAOE,SAC7B,EAAKgB,gB,EAUrBmO,qBAAuB,SAAArP,GAAW,IACtBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GACtBa,GACAA,EAAKoN,OAGkB,oBAAvBpN,EAAKoN,KAAK,UAAyD,mBAAvBpN,EAAKoN,KAAK,UACvDpN,EAAKoN,KAAKvO,UAAYF,EAAOE,SAE7B,EAAKgB,gB,EAIboO,2BAA6B,SAAAtP,GAAW,IAC5BQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GACtBa,GACAA,EAAKoN,MAEiB,uBAAvBpN,EAAKoN,KAAK,UAAqCpN,EAAKoN,KAAKK,iBAAmB9O,EAAO8O,gBACnF,EAAK5N,e,EAIbqO,2BAA6B,SAAAvP,GAAW,IAC5BQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GACtBa,GACAA,EAAKoN,MAEiB,uBAAvBpN,EAAKoN,KAAK,UAAqCpN,EAAKoN,KAAKe,gBAAkBxP,EAAOwP,eAClF,EAAKtO,e,EAIbuO,mBAAqB,SAAAzP,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GACtBa,GACAA,EAAKoN,MAEiB,uBAAvBpN,EAAKoN,KAAK,UAAqCpN,EAAKoN,KAAKK,iBAAmB9O,EAAO0P,YAAY3gB,IAC/F,EAAKmS,e,EAIbyO,mBAAqB,SAAA3P,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GACtBa,GACAA,EAAKoN,MAEiB,uBAAvBpN,EAAKoN,KAAK,UAAqCpN,EAAKoN,KAAKe,gBAAkBxP,EAAO4P,WAAW7gB,IAC7F,EAAKmS,e,mFArITI,IAAUb,GAAG,8BAA+B9Q,KAAKmiE,+BACjDxwD,IAAUb,GAAG,kBAAmB9Q,KAAKqS,mBACrC5B,IAAUK,GAAG,mBAAoB9Q,KAAKoQ,oBACtCuB,IAAUb,GAAG,uBAAwB9Q,KAAKoiE,wBAC1C3xD,IAAUK,GAAG,qBAAsB9Q,KAAK0f,sBACxCT,KAAgBnO,GAAG,2BAA4B9Q,KAAK2f,4BACpDO,KAAgBpP,GAAG,2BAA4B9Q,KAAK4f,4BACpDX,KAAgBnO,GAAG,mBAAoB9Q,KAAK8f,oBAC5CI,KAAgBpP,GAAG,mBAAoB9Q,KAAKggB,sB,6CAI5CrO,IAAUZ,IAAI,8BAA+B/Q,KAAKmiE,+BAClDxwD,IAAUZ,IAAI,kBAAmB/Q,KAAKqS,mBACtC5B,IAAUM,IAAI,mBAAoB/Q,KAAKoQ,oBACvCuB,IAAUZ,IAAI,uBAAwB/Q,KAAKoiE,wBAC3C3xD,IAAUM,IAAI,qBAAsB/Q,KAAK0f,sBACzCT,KAAgBlO,IAAI,2BAA4B/Q,KAAK2f,4BACrDO,KAAgBnP,IAAI,2BAA4B/Q,KAAK4f,4BACrDX,KAAgBlO,IAAI,mBAAoB/Q,KAAK8f,oBAC7CI,KAAgBnP,IAAI,mBAAoB/Q,KAAKggB,sB,+BAqHvC,IACEnP,EAAW7Q,KAAKP,MAAhBoR,OAEFyO,EAAW+iD,YAAgBxxD,GAAQ,GACnCyxD,EAAmBC,YAAqB1xD,GAE9C,OACI,yBAAK5Q,UAAWuO,IAAW,uBAAwB,CAAE,8BAA+B8zD,KAC/EhjD,O,GAnJgB/e,IAAMC,YCkBxBgiE,I,wLAnBD,IAAD,EACkCxiE,KAAKP,MAApCQ,EADH,EACGA,UAAW4Q,EADd,EACcA,OAAQlC,EADtB,EACsBA,QAE3B,OACI,yBAAK1O,UAAWuO,IAAW,cAAevO,GAAY0O,QAASA,GAC3D,kBAAC,GAAD,CAAUkC,OAAQA,EAAQG,KAAM,KAChC,yBAAK/Q,UAAU,uBACX,kBAAC,GAAD,CAAa4Q,OAAQA,IACrB,kBAAC,GAAD,CAAoBA,OAAQA,U,GATvBtQ,IAAMC,YCAzBiiE,I,kNACF3yB,aAAe,WACXh2B,gB,EAGJqN,aAAe,WACX,IAAI/nB,EAAK,EACL+Y,EAAa,GAFA,uBAGjB,YAAkCsB,KAAamsC,cAAcplB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D3vB,EAA4D,EAA5DA,OAAQmW,EAAoD,EAApDA,UACf5nB,EAAKyR,EACLsH,EAAWZ,KAAKyP,IALH,kFAQjBI,aAAehoB,EAAI+Y,I,EAGvB8O,cAAgB,WACZ,IAAI7nB,EACE+Y,EAAa,GAFD,uBAGlB,YAAkCsB,KAAamsC,cAAcplB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D3vB,EAA4D,EAA5DA,OAAQmW,EAAoD,EAApDA,UACf5nB,EAAKyR,EACLsH,EAAWZ,KAAKyP,IALF,kFAQlBE,aAAgB9nB,EAAI+Y,I,wEAGd,IAAD,EACgBnY,KAAKP,MAAlB6S,EADH,EACGA,EAAG87B,EADN,EACMA,MAEPs0B,GAAe,EAHd,uBAIL,YAAkCjpD,KAAamsC,cAAcplB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D3vB,EAA4D,EAA5DA,OAAQmW,EAAoD,EAApDA,UACTnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,CACV6pD,GAAe,EACf,MAEJ,IAAK7pD,EAAQ0O,+BAAiC1O,EAAQ2O,6BAA8B,CAChFk7C,GAAe,EACf,QAZH,kFAgBL,IAAIC,GAAiB,EAhBhB,uBAiBL,YAAkClpD,KAAamsC,cAAcplB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D3vB,EAA4D,EAA5DA,OAAQmW,EAAoD,EAApDA,UACTnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,CACV8pD,GAAiB,EACjB,MAEJ,IAAK9pD,EAAQa,iBAAkB,CAC3BipD,GAAiB,EACjB,QAzBH,kFA6BL,OACI,yBAAK1iE,UAAU,kBACV0iE,GACG,kBAACvkD,EAAA,EAAD,CAAQ7E,MAAM,UAAUtZ,UAAU,wBAAwB0O,QAAS3O,KAAKinB,eACnEmnB,GAAS,EAAI97B,EAAE,WAAf,UAA+BA,EAAE,WAAjC,YAA+C87B,IAGvDs0B,GACG,kBAACtkD,EAAA,EAAD,CAAQ7E,MAAM,UAAUtZ,UAAU,wBAAwB0O,QAAS3O,KAAKmnB,cACnEinB,GAAS,EAAI97B,EAAE,UAAf,UAA8BA,EAAE,UAAhC,YAA6C87B,IAGtD,yBAAKnuC,UAAU,yBACf,kBAACme,EAAA,EAAD,CAAQ7E,MAAM,UAAUtZ,UAAU,wBAAwB0O,QAAS3O,KAAK8vC,cACnEx9B,EAAE,gB,GAtEK/R,IAAMC,YAiFnByT,iBAAkBwuD,I,SCnE3BG,I,mBACF,WAAYnjE,GAAQ,IAAD,8BACf,4CAAMA,KA8CVojE,oBAAsB,SAAAxyD,GAAW,IACrBQ,EAAWR,EAAXQ,OAEJ,EAAKpR,MAAMoR,SAAWA,GAE1B,EAAKsW,gBApDU,EAuDnB27C,2BAA6B,SAAAzyD,GACH,EAAKtR,MAAnBioB,WAGJ,EAAKhQ,eA3DM,EA+DnB+rD,gCAAkC,SAAA1yD,GAAW,IACjCQ,EAAuBR,EAAvBQ,OAAQmyD,EAAe3yD,EAAf2yD,WAEZ,EAAKvjE,MAAMoR,SAAWA,GAE1B,EAAKnR,SAAS,CAAEsjE,gBApED,EAuEnBC,0BAA4B,SAAA5yD,GAAW,IAC3B4B,EAA0C5B,EAA1C4B,QAA4B+U,EAAc3W,EAAjC6yD,kBACE,EAAKzjE,MAAhBoR,SAEOoB,GAEf,EAAKvS,SAAS,CAAEsnB,eA7ED,EAgFnBhQ,YAAc,WAAO,IACTnG,EAAW,EAAKpR,MAAhBoR,OACAmW,EAAc,EAAKjoB,MAAnBioB,UAEHnW,IACAmW,IAEWvN,KAAa9O,IAAIkG,EAAQmW,IAGzC3nB,IAAgBC,KAAK,CACjB,QAAS,aACT2S,QAASpB,EACTyH,WAAY0O,IAEXznB,KAAK,SAAAC,GACFia,KAAa6B,IAAI9b,GAEjB,IAAM0S,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO,CAAC1S,IAE5B,EAAK+R,gBAERsG,MAAM,SAAAjD,GACuBA,EAAlBxR,KACR,GAAgB,mBADUwR,EAAZiE,QACoB,CAC9B,IAAMsqD,EAAiB,CACnB,QAAS,iBACTlxD,QAASpB,EACTzR,GAAI4nB,EACJrN,QAAS,MAGbF,KAAa6B,IAAI6nD,GACjB,EAAK5xD,oBAlHF,EAsJnBrN,YAAc,SAAAhB,GAAU,IACZ2N,EAAW,EAAKpR,MAAhBoR,OACAmW,EAAc,EAAKjoB,MAAnBioB,UAEHA,GAELvD,aAAS5S,EAAQmW,IA5JF,EA+JnBG,aA/JmB,sCA+JJ,WAAMjkB,GAAN,mBAAAqR,EAAA,wDACPrR,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAGFiM,EAAW,EAAKpR,MAAhBoR,OACAmW,EAAc,EAAKjoB,MAAnBioB,WAEOo8C,YAAevyD,GATnB,gBAWP,EAAKnR,SAAS,CAAE4tD,SAAS,IAXlB,8BAaDp9B,EAAOve,IAAU0xD,cAAcxyD,GAb9B,UAcDxR,IAAgBgI,aAAa,CAC/B,QAAS,gCACTwJ,OAAQA,EACRmyD,WAAYM,OAAOC,OAAO,GAAIrzC,EAAM,CAAEszC,oBAAqBx8C,MAjBxD,0CA/JI,wDAqLnB26C,YArLmB,qBAqLL,4BAAAptD,EAAA,qDACF1D,EAAW,EAAKpR,MAAhBoR,OAER,EAAK/G,cAELzK,IAAgBC,KAAK,CACjB,QAAS,mBACT2S,QAASpB,IAPH,yCArLK,EAgMnB/G,YAAc,WACV,EAAKpK,SAAS,CAAE4tD,SAAS,KA9LzB,EAAKvuD,MAAQ,GAHE,E,gFAuBAc,EAAWC,EAAWC,GAAW,IACxCinB,EAAchnB,KAAKjB,MAAnBioB,UAEJA,GAAalnB,EAAUknB,YAAcA,GACrChnB,KAAKgX,gB,0CAKThX,KAAKgX,cAELoe,KAAStkB,GAAG,2BAA4B9Q,KAAK8iE,4BAC7CnxD,IAAUb,GAAG,gCAAiC9Q,KAAK+iE,iCACnDpxD,IAAUb,GAAG,oBAAqB9Q,KAAK6iE,qBACvClxD,IAAUb,GAAG,0BAA2B9Q,KAAKijE,6B,6CAI7C7tC,KAASrkB,IAAI,2BAA4B/Q,KAAK8iE,4BAC9CnxD,IAAUZ,IAAI,gCAAiC/Q,KAAK+iE,iCACpDpxD,IAAUZ,IAAI,oBAAqB/Q,KAAK6iE,qBACxClxD,IAAUZ,IAAI,0BAA2B/Q,KAAKijE,6B,4CA2E5BrwD,EAAWC,EAAWsqB,GAAc,IAAD,EACxBn9B,KAAKP,MAA1BoR,EAD6C,EAC7CA,OAAQyB,EADqC,EACrCA,EAAG0R,EADkC,EAClCA,MADkC,EAEVhkB,KAAKjB,MAAxCikE,EAF6C,EAE7CA,WAAY1V,EAFiC,EAEjCA,QAAStmC,EAFwB,EAExBA,UAE7B,OAAIpU,EAAUN,IAAMA,IAIhBM,EAAUoR,QAAUA,IAIpBpR,EAAU/B,SAAWA,IAIrBgC,EAAUmwD,aAAeA,IAIzBnwD,EAAUy6C,UAAYA,GAItBz6C,EAAUmU,YAAcA,Q,+BAqDtB,IAAD,EACiBhnB,KAAKP,MAAnBoR,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAE0BtS,KAAKjB,MAA5BioB,EAFH,EAEGA,UAAWsmC,EAFd,EAEcA,QAEnB,IAAKz8C,EAAQ,OAAO,KAGpB,GADgCc,IAAU0xD,cAAcxyD,GAAhD2yD,sBACoBx8C,EAAW,OAAO,KAE9C,IAAMnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAErB,IAAIc,EAAWd,EAAyByxB,aAAWzxB,EAASvG,GAAnCA,EAAE,WACrBsd,EAAYkiC,aAAkBjhD,EAAQmW,GACtCgJ,EAAgB+hC,aAAsBlhD,EAAQmW,GAMpD,OAJI6qC,aAAiBh5C,KACjBc,EAAUrH,EAAE,mBAIZ,oCACI,yBAAKrS,UAAU,iBAAiBwO,YAAazO,KAAKkE,aAC9C,yBAAKjE,UAAU,wBACd2vB,GACG,kBAAC,GAAD,CACI/e,OAAQA,EACRmW,UAAWA,EACX4I,UAAWA,EACXI,cAAeA,IAGvB,yBAAK/vB,UAAU,0BACX,yBAAKA,UAAU,wBAAwBqS,EAAE,kBACzC,yBAAKrS,UAAU,2BAA2B0Z,KAGjD2zC,GACG,kBAAC,IAAD,CACI9vC,QAASC,KACTC,mBAAoB,EACpBH,MAAI,EACJI,QAAS3d,KAAK8J,YACd8T,kBAAgB,8BAChB,kBAAC,IAAD,CAAaxe,GAAG,8BAA8BkT,EAAE,YAChD,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,KAAoB78B,EAAE,uBAE1B,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK8J,YAAayP,MAAM,WACpCjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAK2hE,YAAapoD,MAAM,WACpCjH,EAAE,a,gDAnPC7S,EAAOV,GAAQ,IACnC0kE,EAAoB1kE,EAApB0kE,gBACA5yD,EAAWpR,EAAXoR,OAER,GAAI4yD,IAAoB5yD,EAAQ,CAC5B,IAAMa,EAAOC,IAAUhH,IAAIkG,GAC3B,MAAO,CACH4yD,gBAAiB5yD,EACjBmyD,WAAYrxD,IAAU0xD,cAAcxyD,GACpCmW,UAAWtV,GAAQA,EAAKwxD,kBAAoBxxD,EAAKwxD,kBAAoB,EACrE5V,SAAS,GAIjB,OAAO,S,GArBa/sD,IAAMC,YAwQnByT,iBAAkB2uD,IC7P3Bc,G,YACF,WAAYjkE,GAAQ,IAAD,8BACf,4CAAMA,KA6CVkkE,6BAA+B,SAAAtzD,GAAW,IAC9BQ,EAAuBR,EAAvBQ,OAAQsH,EAAe9H,EAAf8H,WAEZyrD,GAA0B,EAHO,uBAIrC,YAAsBzrD,EAAtB,+CAAkC,CAAC,IAA1B6O,EAAyB,QACxBnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,CACV+qD,GAA0B,EAC1B,MAEJ,IAAK/qD,EAAQ2O,6BAA8B,CACvCo8C,GAA0B,EAC1B,QAZ6B,kFAgBrC,EAAKlkE,SAAS,CACVmkE,kBAAkB,EAClBhzD,SACAsH,aACAyrD,wBAAyBA,EACzBE,OAAQF,KAnEG,EAuEnBG,mBAAqB,WACjB,EAAKrkE,SAAS,CAAEokE,QAAS,EAAK/kE,MAAM+kE,UAxErB,EA2EnBE,kBAAoB,WAChB,EAAKtkE,SAAS,CAAEmkE,kBAAkB,KA5EnB,EA+EnBI,qBAAuB,WAAO,IAAD,EACc,EAAKllE,MAApC+kE,EADiB,EACjBA,OAAQjzD,EADS,EACTA,OAAQsH,EADC,EACDA,WAExB2B,eACA,EAAKkqD,oBAEL3kE,IAAgBC,KAAK,CACjB,QAAS,iBACT2S,QAASpB,EACTqK,YAAa/C,EACb2rD,OAAQA,KAzFG,EA6FnBI,8BAAgC,SAAA7zD,GAC5B,EAAK3Q,SAAS,CAAEykE,eAAgB1qD,KAAamsC,cAAc50C,QA9F5C,EAiGnBwhB,qBAAuB,SAAAniB,GACnB,EAAKkB,eAlGU,EAqGnB6yD,wBAA0B,SAAA/zD,GACtB,EAAK3Q,SAAS,CAAE2kE,gBAAiBh0D,EAAOtR,SAtGzB,EAyGnBuiC,2BAA6B,SAAAjxB,GACzB,EAAK3Q,SAAS,CAAE6hC,mBAAoBlxB,EAAO8mB,uBA1G5B,EA6GnB2pC,gBAAkB,WACd,IAAMjwD,EAASukB,KAASsG,YACX/pB,IAAUhH,IAAIkG,KAGFukB,KAAjB9C,aAGJ7O,aAAS5S,EAAQ,MAAM,GAEvByjB,cAA4B,KAvHjB,EA2HnBgwC,iBAAmB,WACf,IAAMzzD,EAASukB,KAASsG,YACX/pB,IAAUhH,IAAIkG,IAG3B2xB,aAAW3xB,IAhII,EAmInB0zD,SAAW,SAAAC,GAGP,OAAOlyD,EAFO,EAAK7S,MAAX6S,GAECkyD,GACJjgE,QAAQ,MAAO,IACfA,QAAQ,SAAK,KArIlB,EAAKxF,MAAQ,CACTwiC,mBAAoBnM,KAASqN,wBAC7B4hC,gBAAiBjvC,KAASqvC,qBAC1BZ,kBAAkB,GANP,E,mFAUGjxD,EAAWC,GAC7B,OAAIA,IAAc7S,KAAKjB,QAInB6T,EAAUoR,QAAUhkB,KAAKP,MAAMukB,OAI/BpR,EAAUN,IAAMtS,KAAKP,MAAM6S,K,0CAQ/B8iB,KAAStkB,GAAG,qBAAsB9Q,KAAKwyB,sBACvC4C,KAAStkB,GAAG,6BAA8B9Q,KAAK2jE,8BAC/CvuC,KAAStkB,GAAG,2BAA4B9Q,KAAKshC,4BAC7ClM,KAAStkB,GAAG,wBAAyB9Q,KAAKokE,yBAE1C3qD,KAAa3I,GAAG,6BAA8B9Q,KAAKkkE,+BACnDzqD,KAAa3I,GAAG,8BAA+B9Q,KAAKkkE,iC,6CAIpD9uC,KAASrkB,IAAI,qBAAsB/Q,KAAKwyB,sBACxC4C,KAASrkB,IAAI,6BAA8B/Q,KAAK2jE,8BAChDvuC,KAASrkB,IAAI,2BAA4B/Q,KAAKshC,4BAC9ClM,KAASrkB,IAAI,wBAAyB/Q,KAAKokE,yBAE3C3qD,KAAa1I,IAAI,6BAA8B/Q,KAAKkkE,+BACpDzqD,KAAa1I,IAAI,8BAA+B/Q,KAAKkkE,iC,+BAgG/C,IACE5xD,EAAMtS,KAAKP,MAAX6S,EADH,EAUDtS,KAAKjB,MAPLwiC,EAHC,EAGDA,mBACA8iC,EAJC,EAIDA,gBACAF,EALC,EAKDA,eACAN,EANC,EAMDA,iBACAD,EAPC,EAODA,wBACAE,EARC,EAQDA,OACA3rD,EATC,EASDA,WAGEi2B,EAAQj2B,EAAaA,EAAW9B,OAAS,EAE3ConC,EAAU,KACV0mB,IACA1mB,EAAU,kBAAC,GAAD,CAAerP,MAAO+1B,KAGpC,IAAMtzD,EAASukB,KAASsG,YAClBhqB,EAAOC,IAAUhH,IAAIkG,GAErByxD,EAAmBC,YAAqB1xD,GAC1C+N,EAAQ9B,YAAajM,GAAQ,EAAMyB,GACnCgN,EAAW+iD,YAAgBxxD,GAAQ,GACnC6zD,GAAwB,EAE5B,GAAIL,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDzlD,EAAQ5e,KAAKukE,SAAS,cACtBjlD,EAAW,GACXolD,GAAwB,EACxB,MACJ,IAAK,mCACD9lD,EAAQ5e,KAAKukE,SAAS,uBACtBjlD,EAAW,GACXolD,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACD9lD,EAAQ5e,KAAKukE,SAAS,YACtBjlD,EAAW,GACXolD,GAAwB,EACxB,MACJ,IAAK,mCACD9lD,EAAQ5e,KAAKukE,SAAS,uBACtBjlD,EAAW,GACXolD,GAAwB,OAG7B,GAAInjC,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD3iB,EAAQ5e,KAAKukE,SAAS,eACtBjlD,EAAW,GACXolD,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACD9lD,EAAQ5e,KAAKukE,SAAS,WACtBjlD,EAAW,GACXolD,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACD9lD,EAAQ5e,KAAKukE,SAAS,WACtBjlD,EAAW,GACXolD,GAAwB,OAIhC9lD,EAAQ5e,KAAKukE,SAAS,WACtBjlD,EAAW,GACXolD,GAAwB,EAuC5B,OApCAjnB,EAAUA,GACN,yBAAKx9C,UAAU,kBACVykE,EACG,yBACIzkE,UAAWuO,IAAW,gBAAiB,OAAQkD,EAAO,iBAAmB,kBACzE/C,QAAS3O,KAAK8gE,iBACd,0BAAM7gE,UAAU,yBAAyB2e,GACzC,kBAAC+lD,GAAA,EAAD,MACA,0BACI1kE,UAAWuO,IAAW,sBAAuB,CAAE,uBAAwB8zD,KACtEhjD,GAEL,0BAAMrf,UAAU,wBAGpB,kBAAC,GAAD,CACIA,UAAWuO,IAAW,OAAQ,kBAC9BqC,OAAQA,EACRlC,QAAS3O,KAAK8gE,kBAGtB,kBAAC,GAAD,CAAejwD,OAAQA,IACtBa,GACG,oCACI,kBAAC2H,EAAA,EAAD,CACIpZ,UAAU,6BACVqZ,aAAW,SACX3K,QAAS3O,KAAKskE,kBACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAgBxD,gBAAiB9gE,KAAK8gE,oBAOlD,oCACKrjB,EACD,kBAAC,IAAD,CACI//B,mBAAoB,EACpBH,KAAMsmD,EACNlmD,QAAS3d,KAAKgkE,kBACdpmD,kBAAgB,uBAChB,kBAAC,IAAD,CAAaxe,GAAG,uBAAhB,WACA,kBAAC,KAAD,KACI,kBAAC+vC,GAAA,EAAD,KACe,IAAVf,EACK,sCADL,gCAE8BA,EAF9B,eAIHh2B,aAAavH,GACX,kBAACs+B,GAAA,EAAD,MACOvuB,YAAc/P,KAAsB,IAAVu9B,EACvB,gDACA,oDAIV,oCAEQw1B,GACA,kBAACpmB,GAAA,EAAD,CACAC,QACI,kBAACkC,GAAA,EAAD,CAAUt9B,QAASyhD,EAAQn0D,SAAU3P,KAAK+jE,mBAAoBxqD,MAAM,YAExEiW,MACIzb,aAAclD,GAAd,qBACoBwD,YAAkBxD,GAAQ,EAAOyB,IAC/C,qBAS1B,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAKgkE,kBAAmBzqD,MAAM,WAC1CjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAKikE,qBAAsB1qD,MAAM,WAC7CjH,EAAE,c,GAvTV9R,aAgUNyT,iBAAkByvD,I,8HC3KlBkB,I,kNAzKX7lE,MAAQ,CACJ2iC,SAAU,KACVt4B,MAAO0B,IAAY9G,OACnB6gE,UAAW/5D,IAAY9G,OACvBiF,UAAU,EACV67D,YAAY,EACZC,WAAW,G,EAWfC,0BAA4B,SAAA30D,GAAW,IAC3BrM,EAAuBqM,EAAvBrM,OAAQoG,EAAeiG,EAAfjG,gBAEGkpC,IAAflpC,EACA,EAAK1K,SAAS,CAAE0J,MAAOpF,IAEvB,EAAKtE,SAAS,CAAE0J,MAAOpF,EAAQ6gE,UAAWz6D,K,EAIlD66D,kBAAoB,SAAAvjC,GAChB,EAAKhiC,SAAS,CAAEgiC,SAAUA,K,EAG9BwjC,mBAAqB,WAAO,IAAD,EACqB,EAAKnmE,MAAzCkK,EADe,EACfA,SAAU67D,EADK,EACLA,WAAYC,EADP,EACOA,UAE1B97D,GACA67D,GACAC,GAEJ,EAAKrlE,SAAS,CAAEgiC,SAAU,Q,EAG9ByjC,iBAAmB,SAACjiE,EAAOkiE,GACvB,EAAK1lE,SAAS,CAAEolE,YAAY,IAExBM,GACA,EAAKH,kBAAkB/hE,EAAMy+B,gB,EAIrC0jC,iBAAmB,WACf,EAAK3lE,SAAS,CAAEolE,YAAY,GAAS,WACjC,EAAKI,wB,EAIbI,sBAAwB,WACpB,EAAK5lE,SAAS,CAAEqlE,WAAW,GAAS,WAChC,EAAKG,wB,EAIbK,iBAAmB,WAAO,IAAD,EACQ,EAAKxmE,MAA1BqK,EADa,EACbA,MAAOy7D,EADM,EACNA,UACTW,EAAYp8D,EAAQ,EAAI,EAAIy7D,GAAaY,IAE/CpmE,IAAgBgI,aAAa,CACzB,QAAS,0BACTrD,OAAQwhE,K,EAIhBr8D,aAAe,SAACjG,EAAOkG,GAAW,IAAD,EACG,EAAKrK,MAA7BkK,EADqB,EACrBA,SAAU47D,EADW,EACXA,UAEd57D,EACA5J,IAAgBgI,aAAa,CACzB,QAAS,0BACTrD,OAAQoF,IAGZ/J,IAAgBgI,aAAa,CACzB,QAAS,0BACT+C,WAAYhB,EAAQ,EAAIA,EAAQy7D,EAChC7gE,OAAQoF,K,EAKpBs8D,gBAAkB,WAAO,IACbt8D,EAAU,EAAKrK,MAAfqK,MAER,EAAK1J,SAAS,CACVuJ,UAAU,EACV47D,UAAWz7D,K,EAInBu8D,cAAgB,WAAO,IAAD,EACW,EAAK5mE,MAA1BqK,EADU,EACVA,MAAOy7D,EADG,EACHA,UAEf,EAAKnlE,SACD,CACIuJ,UAAU,EACV47D,UAAWz7D,EAAQ,EAAIA,EAAQy7D,GAEnC,WACI,EAAKK,wB,EAKjBp1D,cAAgB,SAAA1G,GACZ,OAAc,IAAVA,EACO,kBAAC,KAAD,CAAeiK,SAAS,UAG/BjK,EAAQ,IACD,kBAAC,KAAD,CAAgBiK,SAAS,UAGhCjK,EAAQ,GACD,kBAAC,KAAD,CAAgBiK,SAAS,UAG7B,kBAAC,KAAD,CAAcA,SAAS,W,mFAlH9BvI,IAAYgG,GAAG,0BAA2B9Q,KAAKglE,6B,6CAI/Cl6D,IAAYiG,IAAI,0BAA2B/Q,KAAKglE,6B,+BAiH1C,IAAD,SACuBhlE,KAAKjB,MAAzB2iC,EADH,EACGA,SAAUt4B,EADb,EACaA,MACZmU,EAAO2L,QAAQwY,GAErB,OACI,yBACI1yB,aAAc,SAAAF,GAAC,OAAI,EAAKq2D,iBAAiBr2D,GAAG,IAC5CG,aAAcjP,KAAKqlE,iBACnBh/D,MAAO,CACH8O,SAAU,WACV86C,WAAY,gBAEhB,kBAAC52C,EAAA,EAAD,CAAYpZ,UAAU,uBAAuBsZ,MAAM,UAAU5K,QAAS3O,KAAKulE,kBACtEvlE,KAAK8P,cAAc1G,IAExB,yBACI/C,MAAO,CACH8O,SAAU,WACV86C,WAAY,cACZ2V,WAAYroD,EAAO,UAAY,SAC/Bm5B,OAAQ,GAEZ1nC,aAAc,SAAAF,GAAC,OAAI,EAAKq2D,iBAAiBr2D,GAAG,IAC5CG,aAAcjP,KAAKslE,uBACnB,yBAAKrlE,UAAU,uBACX,kBAACkP,EAAA,EAAD,CACIxN,IAAK,EACLyN,IAAK,EACLC,KAAM,IACNjG,MAAOA,EACPuG,SAAU3P,KAAKmJ,aACf08D,YAAa7lE,KAAK0lE,gBAClBI,UAAW9lE,KAAK2lE,cAChBI,YAAY,oB,GAjKbxlE,IAAMC,Y,0CC4ElBwlE,G,YAhFX,WAAYvmE,GAAQ,IAAD,uBACf,4CAAMA,KAiBVwmE,0BAA4B,SAAA51D,GAAW,IAC3BgkD,EAAWhkD,EAAXgkD,OAER,EAAK30D,SAAS,CAAE20D,YArBD,EAwBnB6R,aAAe,WAAO,IACV7R,EAAW,EAAKt1D,MAAhBs1D,OAEJ8R,EAAa9R,EACjB,OAAQA,GACJ,KAAK+R,IAAWC,KACZF,EAAaC,IAAWE,OACxB,MAEJ,KAAKF,IAAWE,OACZH,EAAaC,IAAWG,WACxB,MAEJ,KAAKH,IAAWG,WACZJ,EAAaC,IAAWC,KAKhChnE,IAAgBgI,aAAa,CACzB,QAAS,0BACTgtD,OAAQ8R,KA7CG,EAiDnBK,QAAU,SAAAnS,GACN,OAAQA,GACJ,KAAK+R,IAAWC,KAGhB,KAAKD,IAAWE,OACZ,OAAO,kBAAC,KAAD,CAAYjzD,SAAS,UAEhC,KAAK+yD,IAAWG,WACZ,OAAO,kBAAC,KAAD,CAAelzD,SAAS,UAEnC,QACI,OAAO,kBAAC,KAAD,CAAYA,SAAS,YA7DrB,IAGPghD,EAAWvpD,IAAXupD,OAHO,OAKf,EAAKt1D,MAAQ,CACTs1D,UANW,E,iFAWfvpD,IAAYgG,GAAG,0BAA2B9Q,KAAKimE,6B,6CAI/Cn7D,IAAYiG,IAAI,0BAA2B/Q,KAAKimE,6B,+BAmD1C,IACE5R,EAAWr0D,KAAKjB,MAAhBs1D,OAER,OACI,kBAACh7C,EAAA,EAAD,CACIpZ,UAAU,uBACVsZ,MAAO86C,IAAW+R,IAAWC,KAAO,UAAY,UAChD13D,QAAS3O,KAAKkmE,cACblmE,KAAKwmE,QAAQnS,Q,GA3EH9zD,IAAMC,W,qBC+ClBimE,G,YA/CX,WAAYhnE,GAAQ,IAAD,uBACf,4CAAMA,KAiBVinE,2BAA6B,SAAAr2D,GAAW,IAC5Bs2D,EAAYt2D,EAAZs2D,QAER,EAAKjnE,SAAS,CAAEinE,aArBD,EAwBnBC,cAAgB,WAAO,IACXD,EAAY,EAAK5nE,MAAjB4nE,QAERtnE,IAAgBgI,aAAa,CACzB,QAAS,2BACTs/D,SAAUA,KA7BC,IAGPA,EAAY77D,IAAZ67D,QAHO,OAKf,EAAK5nE,MAAQ,CACT4nE,WANW,E,iFAWf77D,IAAYgG,GAAG,2BAA4B9Q,KAAK0mE,8B,6CAIhD57D,IAAYiG,IAAI,2BAA4B/Q,KAAK0mE,8B,+BAkB3C,IACEC,EAAY3mE,KAAKjB,MAAjB4nE,QAER,OACI,kBAACttD,EAAA,EAAD,CACIpZ,UAAU,uBACVsZ,MAAQotD,EAAsB,UAAZ,UAClBh4D,QAAS3O,KAAK4mE,eACd,kBAAC,KAAD,CAAavzD,SAAS,e,GA1CV9S,IAAMC,WCC5BqmE,G,YACF,WAAYpnE,GAAQ,IAAD,uBACf,4CAAMA,KAoBVqnE,gCAAkC,SAAAz2D,GAAW,IACjC3L,EAAiB2L,EAAjB3L,aAER,EAAKhF,SAAS,CAAEgF,kBAxBD,EA2BnBqiE,qCAAuC,SAAA12D,GAAW,IACtC22D,EAAsB32D,EAAtB22D,kBAER,EAAKtnE,SAAS,CAAEsnE,uBA9BD,EAiCnBviE,mBAAqB,WAAO,IAChB0vD,EAAU,EAAK10D,MAAf00D,MADe,EAEqB,EAAKp1D,MAAzCioE,EAFe,EAEfA,kBAAmBtiE,EAFJ,EAEIA,aAGrBuiE,GADO9S,EAAQ6S,EAAoBtiE,KACfwiE,IACpBC,IACAD,IAEF/S,EACA90D,IAAgBgI,aAAa,CACzB,QAAS,qCACT2/D,kBAAmBC,IAGvB5nE,IAAgBgI,aAAa,CACzB,QAAS,gCACT3C,aAAcuiE,KAlDP,IAGPD,EAAoCl8D,IAApCk8D,kBAAmBtiE,EAAiBoG,IAAjBpG,aAHZ,OAKf,EAAK3F,MAAQ,CACTioE,oBACAtiE,gBAPW,E,iFAYfoG,IAAYgG,GAAG,gCAAiC9Q,KAAK8mE,iCACrDh8D,IAAYgG,GAAG,qCAAsC9Q,KAAK+mE,wC,6CAI1Dj8D,IAAYiG,IAAI,gCAAiC/Q,KAAK8mE,iCACtDh8D,IAAYiG,IAAI,qCAAsC/Q,KAAK+mE,wC,+BAqCrD,IACE5S,EAAUn0D,KAAKP,MAAf00D,MADH,EAEuCn0D,KAAKjB,MAAzCioE,EAFH,EAEGA,kBAAmBtiE,EAFtB,EAEsBA,aAErBS,EAAOgvD,EAAQ6S,EAAoBtiE,EAEzC,OACI,kBAAC2U,EAAA,EAAD,CACIpZ,UAAU,uBACVsZ,MAAOpU,EAAO+hE,IAA6B,UAAY,UACvDv4D,QAAS3O,KAAKyE,oBACd,yBAAKxE,UAAU,+BAAf,W,GAnEiBM,IAAMC,WAyEvCqmE,GAAmBz1D,aAAe,CAC9B+iD,OAAO,GAOI0S,UCxBAO,I,mBA1DX,WAAY3nE,GAAQ,IAAD,uBACf,4CAAMA,KAuBV4nE,wBAA0B,SAAAh3D,GAAW,IACzBzM,EAA0ByM,EAA1BzM,YAAalD,EAAa2P,EAAb3P,SACb4mE,EAAY,EAAKvoE,MAAjBuoE,QAER,EAAK5nE,SAAS,CACVkE,cACAlD,WACA6mE,kBAAmBr5D,YAAkBxM,KAAKyM,MAAMvK,GAAe,GAAIlD,EAAU4mE,MA/BlE,EAmCnBE,cAAgB,SAAAtkE,GACZA,EAAM0B,kBACN1B,EAAM2B,iBAFe,MAIsB,EAAK9F,MAAxC6E,EAJa,EAIbA,YAAalD,EAJA,EAIAA,SAAU4mE,EAJV,EAIUA,QAE/B,EAAK5nE,SAAS,CACV4nE,SAAUA,EACVC,kBAAmBr5D,YAAkBxM,KAAKyM,MAAMvK,GAAe,GAAIlD,GAAW4mE,MA3CnE,IAGP5mE,EAAa,EAAKjB,MAAlBiB,SAHO,OAQf,EAAK3B,MAAQ,CACTuoE,SAHY,EAIZ1jE,YALgB,EAMhBlD,WACA6mE,kBAAmBr5D,YAPH,EAOkCxN,GANtC,IAND,E,iFAiBfoK,IAAYgG,GAAG,wBAAyB9Q,KAAKqnE,2B,6CAI7Cv8D,IAAYiG,IAAI,wBAAyB/Q,KAAKqnE,2B,+BA0BxC,IACEE,EAAsBvnE,KAAKjB,MAA3BwoE,kBAER,OACI,yBAAKtnE,UAAU,qBAAqB0O,QAAS3O,KAAKwnE,eAC7CD,O,GArDEhnE,IAAMC,Y,oBC4MVinE,I,mBAvMX,WAAYhoE,GAAQ,IAAD,uBACf,4CAAMA,KA0BVioE,eAAiB,WACb,IAAM7jD,EAAO,EAAK+H,QAAQ1R,QAC1B,GAAK2J,EAAL,CAFmB,IAIXmD,EAJW,eAIXA,UACR,GAAKA,EAAL,CAEA,IAAMoW,EAAO,EAAKuqC,WAAWh9D,IAAIqc,GACjC,GAAKoW,EAAL,CAEA,IAAM8tB,EAAO0c,eAAqBxqC,GAC7B8tB,IAELrnC,EAAKR,UAAY6nC,EAAKrX,UAAY,QAxCnB,EAyDnBg0B,kCAAoC,SAAAx3D,GAAW,IACnCy3D,EAASz3D,EAATy3D,KAEJA,EACA,EAAKpoE,SACD,CACIqoE,kBAAmBD,GAEvB,WACI,EAAKE,YAIb,EAAKtoE,SACD,CACIqoE,kBAAmBD,GAEvB,WACI,EAAKG,cA3EF,EAiFnBC,0BAA4B,SAAA73D,GAAW,IAC3BQ,EAAsBR,EAAtBQ,OAAQmW,EAAc3W,EAAd2W,UAEhB,EAAKnW,OAASA,EACd,EAAKmW,UAAYA,GArFF,EAwFnBmhD,mCAAqC,SAAA93D,GAAW,IAAD,iBACnCQ,EADmC,EACnCA,OAAQmW,EAD2B,EAC3BA,UAEZ3W,EAAOQ,SAAWA,GAAUR,EAAO2W,YAAcA,GACjD,EAAKtnB,SAAS,CACV0oE,SAAU,QA7FH,EAkGnBC,4BAA8B,SAAAh4D,GAAW,IAAD,iBAC5BQ,EAD4B,EAC5BA,OAAQmW,EADoB,EACpBA,UACRohD,EAAa/3D,EAAb+3D,SAEJv3D,IAAWu3D,EAASv3D,QAAUmW,IAAcohD,EAASphD,WACrD,EAAKtnB,SAAS,CACV0oE,SAAUA,KAxGH,EA6GnBJ,QAAU,WACNr+D,aAAa,EAAK2+D,aAElB,EAAKA,YAAcz+D,WAAW,WAAO,IAAD,EACc,EAAK9K,MAA3CwpE,EADwB,EACxBA,eAAgBR,EADQ,EACRA,kBACxB,EAAKroE,SAAS,CACV6d,KAAMgrD,GAAkBR,KAE7B,MArHY,EAwHnBE,SAAW,WACPt+D,aAAa,EAAK+4B,SAElB,EAAKA,QAAU74B,WAAW,WAAO,IAAD,EACkB,EAAK9K,MAA3CwpE,EADoB,EACpBA,eAAgBR,EADI,EACJA,kBACxB,EAAKroE,SAAS,CACV6d,KAAMgrD,GAAkBR,KAE7B,MAhIY,EAmInB5C,iBAAmB,WACf,EAAKzlE,SAAS,CACVqoE,mBAAmB,EACnBxqD,MAAM,KAtIK,EA0InB8nD,iBAAmB,WACf,EAAK3lE,SACD,CACIqoE,mBAAmB,GAEvB,WACI,EAAKE,cAhJE,EAqJnBt8C,aAAe,WACX,IAAM9H,EAAO,EAAK+H,QAAQ1R,QACrB2J,IAEDA,EAAKR,WAAawI,KAClBxsB,IAAgBgI,aAAa,CACzB,QAAS,kCAENwc,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,MACjExsB,IAAgBgI,aAAa,CACzB,QAAS,oCA5JjB,EAAKukB,QAAUrrB,IAAM4c,YACrB,EAAKwqD,WAAa,IAAIlxD,IAJP,IAMPoC,EAAsB/N,IAAtB+N,QAASuvD,EAAat9D,IAAbs9D,SANF,OAQf,EAAKv3D,OAASgI,EAAUA,EAAQ5G,QAAU,EAC1C,EAAK+U,UAAYnO,EAAUA,EAAQzZ,GAAK,EAExC,EAAKL,MAAQ,CACTwe,MAAM,EACNgrD,gBAAgB,EAChBR,mBAAmB,EACnBK,SAAUA,GAfC,E,gFAmBAvoE,EAAWC,EAAWC,GAAW,IACxCwd,EAASvd,KAAKjB,MAAdwe,MAEHzd,EAAUyd,MAAQA,GACnBvd,KAAK0nE,mB,0CAqBT58D,IAAYgG,GAAG,0BAA2B9Q,KAAKkoE,2BAC/Cp9D,IAAYgG,GAAG,4BAA6B9Q,KAAKqoE,6BACjDv9D,IAAYgG,GAAG,mCAAoC9Q,KAAKmoE,oCACxDr9D,IAAYgG,GAAG,kCAAmC9Q,KAAK6nE,qC,6CAIvD/8D,IAAYiG,IAAI,0BAA2B/Q,KAAKkoE,2BAChDp9D,IAAYiG,IAAI,4BAA6B/Q,KAAKqoE,6BAClDv9D,IAAYiG,IAAI,mCAAoC/Q,KAAKmoE,oCACzDr9D,IAAYiG,IAAI,kCAAmC/Q,KAAK6nE,qC,+BA8GlD,IAAD,SACsB7nE,KAAKjB,MAAxBwe,EADH,EACGA,KAAM6qD,EADT,EACSA,SACd,IAAK7qD,EAAM,OAAO,KAClB,IAAK6qD,EAAU,OAAO,KAHjB,IAKG98C,EAAa88C,EAAb98C,SACR,OAAKA,EACDA,EAASjV,QAAU,EAAU,MAEjCrW,KAAK2nE,WAAW7oC,QAGZ,yBAAK7+B,UAAU,YACX,yBAAKA,UAAU,oBACX,yBACI6d,IAAK9d,KAAK4rB,QACV3rB,UAAU,iBACV+O,aAAchP,KAAKmlE,iBACnBl2D,aAAcjP,KAAKqlE,iBACnB14C,SAAU3sB,KAAK2rB,cACdy8C,EAAS98C,SACLnB,MAAM,GACNm9C,UACA1vD,IAAI,SAAAtW,GAAC,OACF,yBAAK6B,IAAK7B,EAAElC,GAAI0e,IAAK,SAAA6G,GAAE,OAAI,EAAKgjD,WAAWrsD,IAAIha,EAAElC,GAAIulB,IAAK1kB,UAAU,iBAC/DqoB,aAAShnB,EAAG,kBAAMinB,aAAUjnB,EAAE2Q,QAAS3Q,EAAElC,aAnBhD,S,GA3KPmB,IAAMC,YCgBvBgoE,I,mBACF,WAAY/oE,GAAQ,IAAD,uBACf,4CAAMA,KA2HV8yD,0BAA4B,SAAAliD,GACxB,IAAMnK,EAAS,EAAKuiE,SAASvuD,QACxBhU,IAEAA,EAAOgC,SACR,EAAKwgE,cAAc,KACnB,EAAKC,iBAAkB,KAlIZ,EAsInBhW,yBAA2B,SAAAtiD,GACvB,IAAMnK,EAAS,EAAKuiE,SAASvuD,QACxBhU,GAEDA,EAAOgC,QAAU,EAAKygE,kBACtB,EAAKC,aAAa,KAClB,EAAKD,iBAAkB,IA5IZ,EAgJnB7B,gCAAkC,SAAAz2D,GAAW,IACjC3L,EAAiB2L,EAAjB3L,aAEAmU,EAAY,EAAK9Z,MAAjB8Z,QACR,GAAKA,EAAL,CAJwC,IAMhC5G,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GAEjB,IADcypE,aAAS52D,EAAS7S,GAChC,CAEA,IAAM8G,EAAS,EAAKuiE,SAASvuD,QACxBhU,IAELA,EAAOxB,aAAeA,MA7JP,EAgKnBqiE,qCAAuC,SAAA12D,GAAW,IACtC22D,EAAsB32D,EAAtB22D,kBAEAnuD,EAAY,EAAK9Z,MAAjB8Z,QACR,GAAKA,EAAL,CAJ6C,IAMrC5G,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GAEjB,GADcypE,aAAS52D,EAAS7S,IAE3B0pE,aAAqB72D,EAAS7S,GAAnC,CAEA,IAAM8G,EAAS,EAAKuiE,SAASvuD,QACxBhU,IAELA,EAAOxB,aAAesiE,MA9KP,EAiLnBhC,0BAA4B,SAAA30D,GAAW,IAC3BrM,EAAWqM,EAAXrM,OAEFkC,EAAS,EAAKuiE,SAASvuD,QACxBhU,IAELA,EAAOlC,OAASA,IAvLD,EA0LnB+kE,wBAA0B,SAAA14D,GAAW,IACzBQ,EAA6BR,EAA7BQ,OAAQmW,EAAqB3W,EAArB2W,UAAW5d,EAAUiH,EAAVjH,MACnByP,EAAY,EAAK9Z,MAAjB8Z,QAER,GAAKA,EAAL,CAJgC,IAMxB5G,EAAyB4G,EAAzB5G,QAAS7S,EAAgByZ,EAAhBzZ,GACjB,GADiCyZ,EAAZc,SAEjB9I,IAAWoB,GAAW+U,IAAc5nB,EAAxC,CAEA,IAAM8G,EAAS,EAAKuiE,SAASvuD,QACxBhU,IACAA,EAAOxF,SAKZwF,EAAOtC,YAAcwF,EAAQlD,EAAOxF,SAJhC,EAAKsoE,aAAe5/D,MAvMT,EA8MnB8gD,iCAAmC,SAAA75C,GAC/B,EAAK44D,mBAAqB//C,QAAQkM,KAAS+0B,qBA/M5B,EAkNnB+e,+BAAiC,SAAA74D,GAC7B,EAAK44D,oBAAqB,GAnNX,EAsNnBE,+BAAiC,SAAA94D,GAC7B,EAAK44D,oBAAqB,GAvNX,EA0NnBG,8BAAgC,SAAA/4D,GAC5B,EAAK44D,oBAAqB,EAE1B,IAAM/iE,EAAS,EAAKuiE,SAASvuD,QACxBhU,GAELA,EAAOe,SAhOQ,EAmOnBoiE,iBAAmB,SAAAxwD,GAAY,IACnB5G,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GAEJkqE,EAAY,EAAKvqE,MAAtB8S,IAEFA,EAAM,EAAK03D,YAAY1wD,GACvBgkD,EAAW,EAAK2M,iBAAiB3wD,GACjC4wD,EAAUvgD,QAAQrX,GAChBu2D,EAAat9D,IAAbs9D,SARkB,EAUQ,EAAK59D,eAAeqO,GAA9CjV,EAVkB,EAUlBA,YAAalD,EAVK,EAULA,SAErB,EAAKhB,SACD,CACIkE,cACAlD,WACAmY,UACAuvD,WACAqB,UACA53D,MACAgrD,YAEJ,WACI,IAAM32D,EAAS,EAAKuiE,SAASvuD,QACxBhU,IAEDojE,IAAYz3D,IACZ3L,EAAOo5B,OACPp5B,EAAOtC,YAAcA,GAErB,EAAKqlE,oBACL/iE,EAAOe,QAEP5H,IAAgBgI,aAAa,CACzB,QAAS,yBACTwJ,OAAQoB,EACR+U,UAAW5nB,KAER8G,EAAOgC,QACdhC,EAAOc,WA1QJ,EAgRnB0iE,wBAA0B,SAAAr5D,GAAW,IACzBQ,EAAsBR,EAAtBQ,OAAQmW,EAAc3W,EAAd2W,UACRnO,EAAY,EAAK9Z,MAAjB8Z,QAER,GAAKA,EAAL,CAJgC,IAMxB5G,EAAyB4G,EAAzB5G,QAAS7S,EAAgByZ,EAAhBzZ,GAAIua,EAAYd,EAAZc,QACrB,GAAKA,GACD9I,IAAWoB,GAAW+U,IAAc5nB,EAExC,OAAQua,EAAQ,UACZ,IAAK,cAAgB,IACTmV,EAAanV,EAAbmV,SACR,GAAIA,EAAU,CAAC,IACHqlC,EAAkCrlC,EAAlCqlC,MAAOhiC,EAA2BrD,EAA3BqD,WAAYw3C,EAAe76C,EAAf66C,WAE3B,GAAIxV,EAAO,CACP,GAAIyV,cAAqB,OAEDzV,EAAhBA,OAEJ,EAAKkV,iBAAiBxwD,GAI9B,GAAIsZ,EACkBA,EAAVN,OAEJ,EAAKw3C,iBAAiBxwD,GAI9B,GAAI8wD,EACkBA,EAAVlmE,OAEJ,EAAK4lE,iBAAiBxwD,GAKlC,MAEJ,IAAK,eAAiB,IACVs7C,EAAUx6C,EAAVw6C,MACR,GAAIA,EAAO,CACP,GAAIyV,cAAqB,OAEDzV,EAAhBA,OAEJ,EAAKkV,iBAAiBxwD,GAI9B,MAEJ,IAAK,mBAAqB,IACdsZ,EAAexY,EAAfwY,WACR,GAAIA,EACkBA,EAAVN,OAEJ,EAAKw3C,iBAAiBxwD,GAI9B,MAEJ,IAAK,mBAAqB,IACd8wD,EAAehwD,EAAfgwD,WACR,GAAIA,EACkBA,EAAVlmE,OAEJ,EAAK4lE,iBAAiBxwD,MAvVvB,EAgWnBwvD,4BAA8B,SAAAh4D,GAAW,IAC7B+3D,EAAa/3D,EAAb+3D,SACAv3D,EAAsBu3D,EAAtBv3D,OAAQmW,EAAcohD,EAAdphD,UACRnO,EAAY,EAAK9Z,MAAjB8Z,QAEJA,GAAWA,EAAQ5G,UAAYpB,GAAUgI,EAAQzZ,KAAO4nB,GACxD,EAAKtnB,SAAS,CAAE0oE,SAAUA,KAtWf,EA0WnByB,yBAA2B,SAAAx5D,GACvB,EAAK3Q,SAAS,CACVmZ,QAAS,KACTuvD,SAAU,KACVqB,SAAS,EACT53D,IAAK,KACLgrD,SAAU,QAhXC,EAoXnBqL,0BAA4B,SAAA73D,GAAW,IAC3BQ,EAAsBR,EAAtBQ,OAAQmW,EAAc3W,EAAd2W,UADkB,EAET,EAAKjoB,MAAtB8Z,EAF0B,EAE1BA,QAAShH,EAFiB,EAEjBA,IAEjB,GAAIgH,GAAWA,EAAQ5G,UAAYpB,GAAUgI,EAAQzZ,KAAO4nB,EAAW,CACnE,IAAKnV,EAAK,OAEV,IAAM3L,EAAS,EAAKuiE,SAASvuD,QAC7B,IAAKhU,EAAQ,OAEb,EAAKyiE,iBAAkB,EACnBziE,EAAOgC,OACPhC,EAAOc,OAEPd,EAAOe,aAGX,EAAKoiE,iBAAiBv+D,IAAY+N,UArYvB,EAyYnBixD,WAAa,WACTzqE,IAAgBgI,aAAa,CACzB,QAAS,2BA3YE,EA+YnBH,WAAa,WAAO,IACR2R,EAAY,EAAK9Z,MAAjB8Z,QACHA,GAELxZ,IAAgBgI,aAAa,CACzB,QAAS,0BACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,MAtZR,EA0ZnB2qE,WAAa,WACT1qE,IAAgBgI,aAAa,CACzB,QAAS,2BA5ZE,EAganBmiE,iBAAmB,SAAA3wD,GACf,GAAIA,EAAS,CAAC,IACFc,EAAYd,EAAZc,QACR,GAAIA,EAAS,CAAC,IACFw6C,EAA4Cx6C,EAA5Cw6C,MAAOhiC,EAAqCxY,EAArCwY,WAAYw3C,EAAyBhwD,EAAzBgwD,WAAY76C,EAAanV,EAAbmV,SAEvC,GAAIqlC,EACA,OAAOA,EAAM6V,UAGjB,GAAI73C,EACA,OAAOA,EAAW63C,UAGtB,GAAIL,EACA,MAAO,YAGX,GAAI76C,EAAU,CACV,GAAIA,EAASqlC,MACT,OAAOrlC,EAASqlC,MAAM6V,UAG1B,GAAIl7C,EAASqD,WACT,OAAOrD,EAASqD,WAAW63C,UAG/B,GAAIl7C,EAAS66C,WACT,MAAO,cAMvB,MAAO,IAlcQ,EAqcnBJ,YAAc,SAAA1wD,GACV,GAAIA,EAAS,CAAC,IACFc,EAAYd,EAAZc,QACR,GAAIA,EAAS,CAAC,IACFw6C,EAA4Cx6C,EAA5Cw6C,MAAOhiC,EAAqCxY,EAArCwY,WAAYw3C,EAAyBhwD,EAAzBgwD,WAAY76C,EAAanV,EAAbmV,SAEvC,GAAIqlC,EAAO,CAAC,IACO1pD,EAAS0pD,EAAhBA,MACR,GAAI1pD,EAAM,CACN,IAAIoH,EAAMC,YAAOrH,GAKjB,OAJKoH,GAAO+3D,gBACR/3D,EAAG,6BAAyBpH,EAAKrL,GAA9B,iBAAyCqL,EAAKuG,KAA9C,sBAAgEmjD,EAAM6V,YAGtEn4D,GAIf,GAAIsgB,EAAY,CAAC,IACLN,EAAUM,EAAVN,MACR,GAAIA,EACA,OAAO/f,YAAO+f,GAItB,GAAI83C,EAAY,CAAC,IACLlmE,EAAUkmE,EAAVlmE,MACR,GAAIA,EACA,OAAOqO,YAAOrO,GAItB,GAAIqrB,EAAU,CACV,GAAIA,EAASqlC,MAAO,CAChB,IAAM1pD,EAAOqkB,EAASqlC,MAAMA,MAC5B,GAAI1pD,EACA,OAAOqH,YAAOrH,GAItB,GAAIqkB,EAASqD,WAAY,CAAC,IACdN,EAAU/C,EAASqD,WAAnBN,MACR,GAAIA,EACA,OAAO/f,YAAO+f,GAItB,GAAI/C,EAAS66C,WAAY,CAAC,IACdlmE,EAAUqrB,EAAS66C,WAAnBlmE,MACR,GAAIA,EACA,OAAOqO,YAAOrO,MAOlC,MAAO,IA9fQ,EAigBnB+D,YAAc,WAAsB,IAArByiE,IAAoB,yDACvBpxD,EAAY,EAAK9Z,MAAjB8Z,QACHA,IAELxZ,IAAgBgI,aAAa,CACzB,QAAS,0BACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,GACnB6qE,aAGJ,EAAKvqE,SACD,GAKA,WACIL,IAAgBgI,aAAa,CACzB,QAAS,uBACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,GACnB6qE,iBAvhBG,EA6hBnBC,iBAAmB,WACf,IAAMzmE,EAAQ,EAAKglE,SAASvuD,QAC5B,EAAKxS,eAAe,CAAE9D,YAAa,EAAGlD,SAAU+C,EAAM/C,WAEtD,EAAK8G,aAAY,IAjiBF,EAoiBnBsC,YAAc,WACV,IAAM5D,EAAS,EAAKuiE,SAASvuD,QACzBhU,GACAA,EAAOe,QAGX,EAAKO,aAAY,IA1iBF,EA6iBnBZ,qBAAuB,WAAO,IAAD,EACM,EAAK7H,MAA9B8Z,EADmB,EACnBA,QAASjV,EADU,EACVA,YACf,GAAKiV,EAAL,CAEA,IAAM3S,EAAS,EAAKuiE,SAASvuD,QAC7B,GAAKhU,EAAL,CALyB,IAOjB8gE,EAA4Cl8D,IAA5Ck8D,kBAAmBtiE,EAAyBoG,IAAzBpG,aAAcV,EAAW8G,IAAX9G,OAEjCiO,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GACX+0D,EAAQ0U,aAAS52D,EAAS7S,GAC1B6xB,EAAYk5C,aAASl4D,EAAS7S,GAEhC+F,EAAO+hE,IACPj2C,EACA9rB,EAAOT,EACAyvD,GAAS2U,aAAqB72D,EAAS7S,KAC9C+F,EAAO6hE,GAGX9gE,EAAOxB,aAAeS,EACtBe,EAAOlC,OAASA,EAChBkC,EAAOkkE,OAAQ,EACX,EAAKpB,cACL9iE,EAAOtC,YAAcsC,EAAOxF,SAAW,EAAKsoE,aAC5C,EAAKA,aAAe,MAEpB9iE,EAAOtC,YAAcA,EAGzBsC,EAAOc,OA9BkB,IAgCjBH,EAAgDX,EAAhDW,SAAUnG,EAAsCwF,EAAtCxF,SAAU2pE,EAA4BnkE,EAA5BmkE,WAAYC,EAAgBpkE,EAAhBokE,YAYxC,GAVAjrE,IAAgBgI,aAAa,CACzB,QAAS,kCACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,GACnByH,WACAnG,WACA2pE,aACAC,iBAGAnW,IAGAljC,EAAJ,CAIA,IAAImrC,EAAS,KACT,kBAAmBl2D,EACnBk2D,EAASl2D,EAAOqkE,gBACT,qBAAsBrkE,IAC7Bk2D,EAASl2D,EAAOskE,oBAGfpO,GAIL/8D,IAAgBgI,aAAa,CACzB,QAAS,iCACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,GACnBg9D,OAAQA,QA/mBG,EAmnBnBr0D,eAAiB,WAAO,IACZ8Q,EAAY,EAAK9Z,MAAjB8Z,QACR,GAAKA,EAAL,CAEA,IAAM3S,EAAS,EAAKuiE,SAASvuD,QACxBhU,GAEL7G,IAAgBgI,aAAa,CACzB,QAAS,4BACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,GACnByH,SAAUX,EAAOW,aA9nBN,EAkoBnBc,iBAAmB,WAAO,IACdkR,EAAY,EAAK9Z,MAAjB8Z,QACR,GAAKA,EAAL,CAEA,IAAM3S,EAAS,EAAKuiE,SAASvuD,QAC7B,GAAKhU,EAAL,CALqB,IAOJ2K,EAA0BgI,EAAnC5G,QAAqB+U,EAAcnO,EAAlBzZ,GACjBwE,EAAoCsC,EAApCtC,YAAaiD,EAAuBX,EAAvBW,SAAUnG,EAAawF,EAAbxF,SAE/B,EAAKhB,SAAS,CACVkE,gBAGJvE,IAAgBgI,aAAa,CACzB,QAAS,wBACTwJ,SACAmW,YACAtmB,WACAkD,cACAiD,WACA23D,UAAWptC,KAAKhwB,QAGpB,EAAKsG,eAAe,CAAE9D,cAAalD,gBA1pBpB,EA6pBnBqG,cAAgB,aA7pBG,EAiqBnB0jE,gBAAkB,WAAO,IACb5xD,EAAY,EAAK9Z,MAAjB8Z,QACR,GAAKA,EAAL,CAEA,EAAKnZ,SAAS,CACV+pE,SAAS,IAGb,IAAMvjE,EAAS,EAAKuiE,SAASvuD,QACxBhU,GAEL7G,IAAgBgI,aAAa,CACzB,QAAS,wBACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,GACnBwE,YAAasC,EAAOtC,YACpBlD,SAAUwF,EAAOxF,SACjB89D,UAAWptC,KAAKhwB,UAlrBL,EAsrBnBspE,iBAAmB,WAAO,IACd7xD,EAAY,EAAK9Z,MAAjB8Z,QACHA,IAEL,EAAKnZ,SAAS,CACV+pE,SAAS,IAGE,EAAKhB,SAASvuD,SAG7B7a,IAAgBgI,aAAa,CACzB,QAAS,yBACTwJ,OAAQgI,EAAQ5G,QAChB+U,UAAWnO,EAAQzZ,OApsBR,EAwsBnBurE,QAAU,SAAC9xD,EAASuvD,GAChB,IAAKvvD,EAAS,OAAO,EACrB,IAAKuvD,IAAaA,EAAS98C,SAASjV,OAAQ,OAAO,EAFtB,IAIrBpE,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GAEX0qB,EAAQs+C,EAAS98C,SAASvB,UAAU,SAAAzoB,GAAC,OAAIA,EAAE2Q,UAAYA,GAAW3Q,EAAElC,KAAOA,IACjF,OAAe,IAAX0qB,GAEGA,EAAQ,EAAIs+C,EAAS98C,SAASjV,QAjtBtB,EAotBnBu0D,QAAU,SAAC/xD,EAASuvD,GAChB,IAAKvvD,EAAS,OAAO,EACrB,IAAKuvD,IAAaA,EAAS98C,SAASjV,OAAQ,OAAO,EAFtB,IAIrBpE,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GAEX0qB,EAAQs+C,EAAS98C,SAASvB,UAAU,SAAAzoB,GAAC,OAAIA,EAAE2Q,UAAYA,GAAW3Q,EAAElC,KAAOA,IACjF,OAAe,IAAX0qB,GAEGA,EAAQ,GAAK,GA7tBL,EAguBnB+gD,sBAAwB,WACpBxrE,IAAgBgI,aAAa,CACzB,QAAS,kCACTygE,MAAM,KAnuBK,EAuuBnBgD,sBAAwB,WACpBzrE,IAAgBgI,aAAa,CACzB,QAAS,kCACTygE,MAAM,KA1uBK,EA8uBnBiD,iBAAmB,WAAO,IACdlyD,EAAY,EAAK9Z,MAAjB8Z,QACHA,GAEL4K,aAAS5K,EAAQ5G,QAAS4G,EAAQzZ,KAlvBnB,EAqvBnBoL,eAAiB,SAAAqO,GACb,IAAKA,EAAS,MAAO,CAAEjV,YAAa,EAAGlD,SAAU,GAEjD,IAAMyzD,EAAQ6W,aAAgBnyD,EAAQ5G,QAAS4G,EAAQzZ,IACvD,IAAK+0D,EAAO,MAAO,CAAEvwD,YAAa,EAAGlD,SAAU,GAJvB,IAMT+J,EAAS0pD,EAAhBA,MACR,IAAK1pD,EAAM,MAAO,CAAE7G,YAAa,EAAGlD,SAAU,GAPtB,IAShBkK,EAAWH,EAAXG,OACR,IAAKA,EAAQ,MAAO,CAAEhH,YAAa,EAAGlD,SAAU,GAVxB,IAYhBmK,EAAcD,EAAdC,UACR,OAAKA,EAEEC,IAAYN,eAAeK,GAFX,CAAEjH,YAAa,EAAGlD,SAAU,IAlwBpC,EAuwBnBgH,eAAiB,SAAA9D,GAAgB,IACrBiV,EAAY,EAAK9Z,MAAjB8Z,QACR,GAAKA,GAEAiwD,aAAqBjwD,EAAQ5G,QAAS4G,EAAQzZ,IAAnD,CAEA,IAAM+0D,EAAQ6W,aAAgBnyD,EAAQ5G,QAAS4G,EAAQzZ,IACvD,GAAK+0D,EAAL,CAP4B,IASb1pD,EAAS0pD,EAAhBA,MACR,GAAK1pD,EAAL,CAV4B,IAYpBG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAb4B,IAepBC,EAAcD,EAAdC,UACHA,IAEAjH,EAGDkH,IAAYpD,eAAemD,EAAWjH,GAFtCkH,IAAYC,iBAAiBF,SAvxBjC,EAAK49D,SAAWloE,IAAM4c,YAHP,IAKPtE,EAAsB/N,IAAtB+N,QAASuvD,EAAat9D,IAAbs9D,SALF,EAMmB,EAAK59D,eAAeqO,GAA9CjV,EANO,EAMPA,YAAalD,EANN,EAMMA,SANN,OAQf,EAAK3B,MAAQ,CACT6E,cACAlD,WACAmY,UACAuvD,WACAqB,SAAS,EACT53D,IAAK,EAAK03D,YAAY1wD,GACtBgkD,SAAU,EAAK2M,iBAAiB3wD,IAfrB,E,mFAmBGjG,EAAWC,EAAWsqB,GAAc,IAC9CnZ,EAAUhkB,KAAKP,MAAfukB,MAD6C,EAEThkB,KAAKjB,MAAzC8Z,EAF6C,EAE7CA,QAASuvD,EAFoC,EAEpCA,SAAUv2D,EAF0B,EAE1BA,IAAK43D,EAFqB,EAErBA,QAEhC,OAAI72D,EAAUoR,QAAUA,IAIpBnR,EAAUgG,UAAYA,IAItBhG,EAAUu1D,WAAaA,IAIvBv1D,EAAUhB,MAAQA,GAIlBgB,EAAU42D,UAAYA,O,0CAQ1Br0C,KAAStkB,GAAG,iCAAkC9Q,KAAKkqD,kCACnDx/C,IAAUoG,GAAG,4BAA6B9Q,KAAK0pE,yBAC/Ch/D,IAAUoG,GAAG,4BAA6B9Q,KAAK0pE,yBAC/Ch/D,IAAUoG,GAAG,wBAAyB9Q,KAAK0pE,yBAC3CjwD,KAAa3I,GAAG,0BAA2B9Q,KAAKuyD,2BAChD94C,KAAa3I,GAAG,yBAA0B9Q,KAAK2yD,0BAC/C7nD,IAAYgG,GAAG,0BAA2B9Q,KAAKkoE,2BAC/Cp9D,IAAYgG,GAAG,yBAA0B9Q,KAAK6pE,0BAC9C/+D,IAAYgG,GAAG,4BAA6B9Q,KAAKqoE,6BACjDv9D,IAAYgG,GAAG,8BAA+B9Q,KAAKopE,+BACnDt+D,IAAYgG,GAAG,+BAAgC9Q,KAAKmpE,gCACpDr+D,IAAYgG,GAAG,+BAAgC9Q,KAAKkpE,gCACpDp+D,IAAYgG,GAAG,0BAA2B9Q,KAAKglE,2BAC/Cl6D,IAAYgG,GAAG,gCAAiC9Q,KAAK8mE,iCACrDh8D,IAAYgG,GAAG,qCAAsC9Q,KAAK+mE,sCAC1Dj8D,IAAYgG,GAAG,wBAAyB9Q,KAAK+oE,2B,6CAK7C3zC,KAASrkB,IAAI,iCAAkC/Q,KAAKkqD,kCACpDx/C,IAAUqG,IAAI,4BAA6B/Q,KAAK0pE,yBAChDh/D,IAAUqG,IAAI,4BAA6B/Q,KAAK0pE,yBAChDh/D,IAAUqG,IAAI,wBAAyB/Q,KAAK0pE,yBAC5CjwD,KAAa1I,IAAI,0BAA2B/Q,KAAKuyD,2BACjD94C,KAAa1I,IAAI,yBAA0B/Q,KAAK2yD,0BAChD7nD,IAAYiG,IAAI,0BAA2B/Q,KAAKkoE,2BAChDp9D,IAAYiG,IAAI,yBAA0B/Q,KAAK6pE,0BAC/C/+D,IAAYiG,IAAI,4BAA6B/Q,KAAKqoE,6BAClDv9D,IAAYiG,IAAI,8BAA+B/Q,KAAKopE,+BACpDt+D,IAAYiG,IAAI,+BAAgC/Q,KAAKmpE,gCACrDr+D,IAAYiG,IAAI,+BAAgC/Q,KAAKkpE,gCACrDp+D,IAAYiG,IAAI,0BAA2B/Q,KAAKglE,2BAChDl6D,IAAYiG,IAAI,gCAAiC/Q,KAAK8mE,iCACtDh8D,IAAYiG,IAAI,qCAAsC/Q,KAAK+mE,sCAC3Dj8D,IAAYiG,IAAI,wBAAyB/Q,KAAK+oE,2B,oCAGpCroE,GAAW,IAAD,OACdwF,EAASlG,KAAKyoE,SAASvuD,QAC7B,GAAKhU,EAAL,CAEA,IACIkoC,EAAQ,EACN68B,EAAgB/kE,EAAOlC,OAC7BhE,KAAKkrE,eAAiBzY,YAAY,WAC1BrkB,GAJgB,IAKhBloC,EAAOe,QACPf,EAAOlC,OAASinE,EAChBhL,cAAc,EAAKiL,kBAEnBhlE,EAAOlC,OAASinE,GAAiB78B,EAAQ,GACzCA,MAEL1tC,EAZqB,O,mCAefA,GAAW,IAAD,OACbwF,EAASlG,KAAKyoE,SAASvuD,QAC7B,GAAKhU,EAAL,CAEA,IACIkoC,EAAQ,EACN68B,EAAgB/kE,EAAOlC,OAC7BkC,EAAOlC,OAAS,EAChBkC,EAAOc,OACPhH,KAAKkrE,eAAiBzY,YAAY,WAC1BrkB,GANgB,IAOhBloC,EAAOlC,OAASinE,EAChBhL,cAAc,EAAKiL,kBAEnBhlE,EAAOlC,OAASinE,EAVA,IAUmC78B,EAAQ,GAC3DA,MAEL1tC,EAbqB,O,+BAorBlB,IACE4R,EAAMtS,KAAKP,MAAX6S,EADH,EAE2DtS,KAAKjB,MAA7D0qE,EAFH,EAEGA,QAAS5wD,EAFZ,EAEYA,QAASnY,EAFrB,EAEqBA,SAAU0nE,EAF/B,EAE+BA,SAAUv2D,EAFzC,EAEyCA,IAAKgrD,EAF9C,EAE8CA,SAE/C1I,GAAQ,EACRgX,GAAe,EACnB,GAAItyD,EAAS,CAAC,IACF5G,EAAgB4G,EAAhB5G,QAAS7S,EAAOyZ,EAAPzZ,GACjB+0D,EAAQ0U,aAAS52D,EAAS7S,GAC1B+rE,EAAerC,aAAqB72D,EAAS7S,GAGjD,IAAM8xB,EAAOrY,EAAUA,EAAQqY,KAAO,KAEhCtS,EAAQwsD,aAAcvyD,EAASvG,GAC/B+4D,EAAcC,aAAYp6C,GAC1Bq6C,EAAUC,aAAQt6C,GAClB0vB,GAAYuT,EACZsX,GAAoBtX,GAASgX,EAC7BO,EAAavX,EACbwX,EAAcxX,EACdwW,EAAU3qE,KAAK2qE,QAAQ9xD,EAASuvD,GAChCwC,EAAU5qE,KAAK4qE,QAAQ/xD,EAASuvD,GAEhChoE,EAASyR,EAAM,4BAAQA,IAAKA,EAAKiN,KAAM+9C,IAAc,KAE3D,OACI,oCACI,2BACI58D,UAAU,sBACV6d,IAAK9d,KAAKyoE,SACVmD,UAAU,EACVC,UAAU,EACV38D,MAAO,GACPgC,OAAQ,GACR46D,yBAAyB,EACzBC,iBAAkB/rE,KAAK4G,qBACvBolE,UAAWhsE,KAAK+G,cAChBI,OAAQnH,KAAKyqE,gBACbljE,QAASvH,KAAK0qE,iBACdjjE,QAASzH,KAAKkqE,iBACd+B,aAAcjsE,KAAK2H,iBACnBukE,WAAYlsE,KAAK+H,gBAEhB3H,GAEJyY,GACG,yBAAK5Y,UAAU,iBACX,kBAACoZ,EAAA,EAAD,CACItJ,UAAW46D,EACX1qE,UAAU,uBACVsZ,MAAM,UACN5K,QAAS3O,KAAK8pE,YACd,kBAAC,KAAD,CAAkBz2D,SAAS,WAE/B,kBAACgG,EAAA,EAAD,CACIpZ,UAAU,uBACVsZ,MAAM,UACNxJ,UAAW8B,EACXlD,QAAS3O,KAAKkH,YACbuiE,EAAU,kBAAC55D,EAAA,EAAD,MAAgB,kBAACs8D,EAAA,EAAD,OAE/B,kBAAC9yD,EAAA,EAAD,CACItJ,UAAW66D,EACX3qE,UAAU,uBACVsZ,MAAM,UACN5K,QAAS3O,KAAK+pE,YACd,kBAAC,KAAD,CAAc12D,SAAS,WAE3B,kBAAC,GAAD,MACA,yBACIpT,UAAU,wBACV+O,aAAchP,KAAK6qE,sBACnB57D,aAAcjP,KAAK8qE,sBACnBn8D,QAAS3O,KAAK+qE,kBACd,yBAAK9qE,UAAU,uBACV2e,EACAgiC,GACG,0BAAMhiC,MAAOysD,GAAb,OAEKE,IAVjB,QAgBA,kBAAC,GAAD,CAAM7qE,SAAUA,IAChB,kBAAC,GAAD,MACC+qE,GAAoB,kBAAC,GAAD,CAAoBtX,MAAOA,IAC/CuX,GAAc,kBAAC,GAAD,MACdC,GAAe,kBAAC,GAAD,MAChB,kBAACtyD,EAAA,EAAD,CAAYpZ,UAAU,uBAAuB0O,QAAS3O,KAAK8J,aACvD,kBAACiF,EAAA,EAAD,CAAWsE,SAAS,iB,GA73BrB9S,IAAMC,YAs4BlByT,iBAAkBu0D,ICn5B3B4D,I,kNASFC,sBAAwB,SAAAh8D,GAAW,IACvBQ,EAAW,EAAKpR,MAAhBoR,OACYR,EAAZ4B,UAEQpB,GAEhB,EAAKU,e,EAGTzH,YAAc,WAAO,IACT+G,EAAW,EAAKpR,MAAhBoR,OAER,IADac,IAAUhH,IAAIkG,GAChB,OAAO,KAElBxR,IAAgBC,KAAK,CACjB,QAAS,sBACT2S,QAASpB,K,EAIjBy7D,iBAAmB,WAAO,IACdz7D,EAAW,EAAKpR,MAAhBoR,OAER,IADac,IAAUhH,IAAIkG,GAChB,OAAO,KAElBxR,IAAgBC,KAAK,CACjB,QAAS,aACT2S,QAASpB,EACT07D,OAAQ,CACJ,QAAS,wBAEbrxD,YAAa,M,EAIrBsxD,8BAAgC,WAAO,IAC3B37D,EAAW,EAAKpR,MAAhBoR,OAER,IADac,IAAUhH,IAAIkG,GAChB,OAAO,KAElBxR,IAAgBC,KAAK,CACjB,QAAS,aACT2S,QAASpB,EACT07D,OAAQ,CACJ,QAAS,qCAEbrxD,YAAa,M,EAIrBuxD,uBAAyB,WAAO,IACpB57D,EAAW,EAAKpR,MAAhBoR,OACFP,EAASM,YAAcC,GACxBP,GAELjR,IAAgBC,KAAK,CACjB,QAAS,mBACTiR,QAASD,K,EAIjBo8D,iBAAmB,WAAO,IACd77D,EAAW,EAAKpR,MAAhBoR,OACFP,EAASM,YAAcC,GAC7B,GAAKP,EAAL,CAEA,IAAME,EAAOC,IAAU9F,IAAI2F,GAC3B,GAAKE,EAAL,CANqB,IAQbD,EAAiDC,EAAjDD,QAASo8D,EAAwCn8D,EAAxCm8D,aAAct6B,EAA0B7hC,EAA1B6hC,WAAYE,EAAc/hC,EAAd+hC,UAE3ClzC,IAAgBC,KAAK,CACjB,QAAS,aACTstE,QAAS,CACL,QAAS,UACTD,eACAt6B,aACAE,YACAs6B,MAAO,GACPt8D,WAEJu8D,oBAAoB,O,EAI5BC,gBAAkB,WAAO,IACbl8D,EAAW,EAAKpR,MAAhBoR,OACFP,EAASM,YAAcC,GACxBP,GAELjR,IAAgBC,KAAK,CACjB,QAAS,YACTiR,QAASD,K,mFAnGbqB,IAAUb,GAAG,sBAAuB9Q,KAAKqsE,yB,6CAIzC16D,IAAUZ,IAAI,sBAAuB/Q,KAAKqsE,yB,+BAmGpC,IAAD,EACiBrsE,KAAKP,MAAnBoR,EADH,EACGA,OAAQyB,EADX,EACWA,EAChB,IAAKzB,EAAQ,OAAO,KAEpB,IAAMa,EAAOC,IAAUhH,IAAIkG,GAC3B,IAAKa,EAAM,OAAO,KALb,IAOGs7D,EAAet7D,EAAfs7D,WACR,IAAKA,EAAY,OAAO,KAExB,IAAIrzD,EAAU,KACd,OAAQqzD,EAAW,UACf,IAAK,gCACDrzD,EACI,kBAACyE,EAAA,EAAD,CAAQ7E,MAAM,UAAUtZ,UAAU,wBAAwB0O,QAAS3O,KAAKysE,wBACnEn6D,EAAE,iBAGX,MAEJ,IAAK,0BACDqH,EACI,kBAACyE,EAAA,EAAD,CAAQ7E,MAAM,UAAUtZ,UAAU,wBAAwB0O,QAAS3O,KAAK0sE,kBACnEp6D,EAAE,mBAGX,MAEJ,IAAK,8BACDqH,EACI,oCACI,kBAACyE,EAAA,EAAD,CAAQ7E,MAAM,UAAUtZ,UAAU,wBAAwB0O,QAAS3O,KAAK0sE,kBACnEp6D,EAAE,mBAEP,kBAAC8L,EAAA,EAAD,CAAQ7E,MAAM,YAAYtZ,UAAU,wBAAwB0O,QAAS3O,KAAK+sE,iBACrEz6D,EAAE,oBAIf,MAEJ,IAAK,iCACDqH,EACI,kBAACyE,EAAA,EAAD,CACI7E,MAAM,YACNtZ,UAAU,wBACV0O,QAAS3O,KAAKwsE,+BACbl6D,EAAE,uBAGX,MAEJ,IAAK,0BACDqH,EACI,kBAACyE,EAAA,EAAD,CAAQ7E,MAAM,YAAYtZ,UAAU,wBAAwB0O,QAAS3O,KAAKssE,kBACrEh6D,EAAE,eAOnB,OACI,yBAAKrS,UAAU,aAAawO,YAAazO,KAAKkE,aAC1C,yBAAKjE,UAAU,sBAAsB0Z,GACrC,yBAAK1Z,UAAU,2BACX,kBAACoZ,EAAA,EAAD,CAAY1K,QAAS3O,KAAK8J,aACtB,kBAACiF,EAAA,EAAD,a,GA5KAxO,IAAMC,YAwLfyT,iBAAkBm4D,IC9L3Ba,I,kNASFC,uBAAyB,WACrB,EAAK37D,e,mFARL40B,KAAkBr1B,GAAG,6BAA8B9Q,KAAKktE,0B,6CAIxD/mC,KAAkBp1B,IAAI,6BAA8B/Q,KAAKktE,0B,+BAOnD,IAAD,EACkBltE,KAAKP,MAApByxB,EADH,EACGA,KAAMF,EADT,EACSA,KAGRrwB,EADW,IAAIywB,KAAY,IAAPF,IAAe,IAAIE,MAAO+7C,UAAS,IAAI/7C,MAAOg8C,WAAa,GAE/E,CACI77C,IAAK,UACLC,MAAO,OACPC,KAAM,WAEV,CACIF,IAAK,UACLC,MAAO,QAGjB,OACI,yBAAKvxB,UAAU,YACX,yBAAKA,UAAU,oBACX,6BAAM,IAAImxB,KAAY,IAAPF,GAAaG,mBAAmB,CAACL,EAAKM,UAAW3wB,U,GA/B9DJ,IAAMC,YA0CbyT,iBAAkBg5D,ICoClBI,I,mBA7EX,WAAY5tE,GAAQ,IAAD,uBACf,4CAAMA,KAeV6tE,uBAAyB,SAAAj9D,GAAW,IACxBk9D,EAAen4C,KAAfm4C,WAER,EAAK7tE,SAAS,CAAE6tE,gBAnBD,EAsBnBC,gBAAkB,SAAAtqE,GACdA,EAAM2B,iBACN3B,EAAM0B,mBAxBS,EA2BnB6oE,WAAa,SAAAvqE,GACTA,EAAM2B,iBACN3B,EAAM0B,kBACNvF,IAAgBgI,aAAa,CACzB,QAAS,uBACT4B,UAAU,IAGd,EAAKkxD,6BAA6Bj3D,EAAMwqE,aAAanuC,QAnCtC,EAsCnBouC,gBAAkB,SAAAzqE,GACdA,EAAM2B,iBACN3B,EAAM0B,kBACNvF,IAAgBgI,aAAa,CACzB,QAAS,uBACT4B,UAAU,KA3CC,EA+CnBkxD,6BAA+B,SAAA56B,GACN,IAAjBA,EAAMlpB,QAEVhX,IAAgBgI,aAAa,CACzB,QAAS,wBACTk4B,WApDW,IAGPguC,EAAen4C,KAAfm4C,WAHO,OAKf,EAAKxuE,MAAQ,CAAEwuE,cALA,E,iFASfn4C,KAAStkB,GAAG,uBAAwB9Q,KAAKstE,0B,6CAIzCl4C,KAASrkB,IAAI,uBAAwB/Q,KAAKstE,0B,+BA6C1C,OADuBttE,KAAKjB,MAApBwuE,WAIJ,yBACIttE,UAAU,oBACV2tE,YAAa5tE,KAAKwtE,gBAClBK,YAAa7tE,KAAK2tE,gBAClBG,OAAQ9tE,KAAKytE,YACb,yBAAKxtE,UAAU,6BACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,2BAAf,mBACA,yBAAKA,UAAU,8BAAf,mBAXQ,S,GA3DFM,IAAMC,Y,+BCG9ButE,I,kNACFhvE,MAAQ,CACJivE,SAAU,M,EAGdC,eAAiB,SAAA/iB,GACb,EAAKxrD,SAAS,CACVsuE,SAAU9iB,K,EAIlBgjB,YAAc,SAAAhrE,GACVA,EAAM0B,kBADa,IAGXupE,EAAgB,EAAK1uE,MAArB0uE,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBljD,EAAmBkjD,EAAnBljD,eAERvH,aAASuH,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAAgC,IACzBjZ,EAAwBm8D,EAAxBn8D,QAASqG,EAAe81D,EAAf91D,WAEjBmL,aAASxR,EAASqG,K,wEAMpB,IAAD,EACsBtY,KAAKP,MAAxB6S,EADH,EACGA,EAAG67D,EADN,EACMA,YACHH,EAAahuE,KAAKjB,MAAlBivE,SAEFpvD,EAAQyvD,aAAgBF,EAAa77D,GACrCg8D,EAAUC,aAAsBJ,GAClC,oCACK77D,EAAE,cACH,0BAAMrS,UAAU,gBAAgB6d,IAAK9d,KAAKiuE,kBAG9C,GAGJ,OACI,yBAAKhuE,UAAWuO,IAAW,iBAAkB,YACzC,6BAAM8D,EAAE,qBACR,6BACKA,EAAE,QAAU,IACb,kBAACk8D,GAAA,EAAD,CACI5vD,MAAO0vD,EACPh/D,QAAS,CAAEm/D,OAAQ,uBAAwBH,QAAS,mBACpDI,YAAa,CACTC,cAAe,CACXC,UAAW,CACPC,MAAO,CACHC,QAAS5lD,QAAQ8kD,GACjB1gE,QAAS0gE,MAKzBe,UAAU,OACV,uBAAGpgE,QAAS3O,KAAKkuE,aAActvD,U,GAvEjCre,IAAMC,YAmFbyT,iBAAkB85D,I,qBClF3BiB,I,wLACQ,IAAD,EACkFhvE,KAAKP,MAApFQ,EADH,EACGA,UAAW4Q,EADd,EACcA,OAAQmW,EADtB,EACsBA,UAAWkK,EADjC,EACiCA,KAAM+9C,EADvC,EACuCA,SAAUC,EADjD,EACiDA,YAAa58D,EAD9D,EAC8DA,EAAG68D,EADjE,EACiEA,MAAO9oE,EADxE,EACwEA,MAEvEwS,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAJhB,IAMG4gB,EAAgB5gB,EAAhB4gB,YAEF8xC,EAAUC,aAAQt6C,GAClBm6C,EAAcC,aAAYp6C,GAEhC,OACI,yBAAKjxB,UAAWuO,IAAW,OAAQvO,GAAYoG,MAAOA,GAClD,wCACC8oE,EAAQ,GACL,oCACI,kBAAC,KAAD,CAAgBlvE,UAAU,oBAC1B,0BAAMA,UAAU,cAAhB,OAEKkvE,EAFL,cAOPF,EAAW,GAAK,8BAAO38D,EAAE,iBAAT,QACjB,uBAAG3D,QAASugE,GACR,0BAAMtwD,MAAOysD,GAAcE,IAE9B9xC,GAAe,kBAAC,GAAD,CAAQ5oB,OAAQA,EAAQmW,UAAWA,S,GA7BhDzmB,IAAMC,YA4CVyT,iBAAkB+6D,ICpDlBzsE,eACX,0BAAMC,EAAE,4jBACR,QCFWD,eACX,0BAAMC,EAAE,wzBACR,cCFWD,eACX,uBAAG41B,OAAO,eAAe5B,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQsB,UAAU,mBACpG,0BAAM51B,EAAE,2IACR,8BAAUu0B,eAAe,QAAQq4C,OAAO,yBACxC,8BAAUr4C,eAAe,QAAQq4C,OAAO,+BAE5C,eCNW7sE,eACX,0BAAMC,EAAE,gmCACR,S,oBCqCE6sE,I,kNACFtwE,MAAQ,CACJuwE,iBAAiB,G,EAGrBC,sBAAwB,SAAArsE,GACD,EAAKnE,MAAhBiU,QAGR,EAAKtT,SAAS,CACV4vE,iBAAiB,EACjBpnD,aAAa,K,EAIrBsnD,mBAAqB,SAAAtsE,GACbA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAE4vE,iBAAiB,K,EAGrCG,eAAiB,SAAAvsE,GACbA,EAAM0B,kBADgB,MAGQ,EAAKnF,MAA3BoR,EAHc,EAGdA,OAAQmW,EAHM,EAGNA,UACY,EAAKjoB,MAAzBuwE,iBAGJ,EAAK5vE,SAAS,CAAE4vE,iBAAiB,IAGrCI,aAAS7+D,EAAQmW,I,EAGrB2oD,aAAe,SAAAzsE,GACPA,GACAA,EAAM0B,kBAFU,MAKmB,EAAKnF,MAApCoR,EALY,EAKZA,OAAQmW,EALI,EAKJA,WAEhBrJ,EAPoB,EAKOA,SAEnBza,GACR0sE,aAAiB/+D,EAAQmW,I,EAG7BtO,eAAiB,SAAAxV,GAAU,IAAD,EACW,EAAKzD,MAA9Bke,EADc,EACdA,QAASkyD,EADK,EACLA,SAAUv9D,EADL,EACKA,EAE3BqL,EAAQza,GAEH2sE,IAELv7D,GAAKu7D,GACL,EAAKj3D,sBAAsBtG,EAAE,iB,EAGjCw9D,4B,sCAA8B,WAAM5sE,GAAN,2BAAAqR,EAAA,8DACgB,EAAK9U,MAAvCke,EADkB,EAClBA,QAAS9M,EADS,EACTA,OAAQmW,EADC,EACDA,UAAW1U,EADV,EACUA,EAEpCqL,EAAQza,GAHkB,SAKJ7D,IAAgBC,KAAK,CACvC,QAAS,uBACT2S,QAASpB,EACTyH,WAAY0O,EACZzO,WAAW,IATW,UAKpBw3D,EALoB,2DAaZF,EAAaE,EAAnBp3D,KAbkB,mDAiB1BrE,GAAKu7D,GACL,EAAKj3D,sBAAsBtG,EAAE,eAlBH,0C,wDAqB9BsG,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAKpZ,MAAxCqZ,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,QACJmW,aAAW,QACXC,MAAM,UACNtZ,UAAU,4BACV0O,QAAS,WACLoK,EAAcC,KAElB,kBAACjK,EAAA,EAAD,W,EAMhBihE,YAAc,SAAA9sE,GAAU,IAAD,EACoB,EAAKzD,MAApCoR,EADW,EACXA,OAAQmW,EADG,EACHA,UAAWrJ,EADR,EACQA,QAE3B7D,eACA6D,EAAQza,GACRivD,aAAathD,EAAQmW,I,EAGzByT,UAAY,SAAAv3B,GAAU,IAAD,EACsB,EAAKzD,MAApCoR,EADS,EACTA,OAAQmW,EADC,EACDA,UAAWrJ,EADV,EACUA,QAE3B7D,eACA6D,EAAQza,GAEJ+sE,aAAgBp/D,EAAQmW,G3HvI7B,SAAsBnW,GACzBxR,IAAgBC,KAAK,CACjB,QAAS,mBACT2S,QAASpB,I2HqILmxD,CAAanxD,G3HjJlB,SAAoBA,EAAQmW,GAAyC,IAA9BkpD,EAA6B,wDACvE7wE,IAAgBC,KAAK,CACjB,QAAS,iBACT2S,QAASpB,EACTyH,WAAY0O,EACZmpD,qBAAsBD,I2H8IlBE,CAAWv/D,EAAQmW,I,EAI3BC,cAAgB,SAAA/jB,GAAU,IAAD,EACkB,EAAKzD,MAApCoR,EADa,EACbA,OAAQmW,EADK,EACLA,WAEhBrJ,EAHqB,EACMA,SAEnBza,GACRgkB,aAAgBrW,EAAQ,CAACmW,K,EAG7BqpD,WAAa,SAAAntE,GAAU,IAAD,EACqB,EAAKzD,MAApCoR,EADU,EACVA,OAAQmW,EADE,EACFA,UAAWrJ,EADT,EACSA,QAE3B7D,eACA6D,EAAQza,GACRgvD,aAAYrhD,EAAQmW,I,EAGxBvU,aAAe,SAAAvP,GAAU,IAAD,EACmB,EAAKzD,MAApCoR,EADY,EACZA,OAAQmW,EADI,EACJA,WAEhBrJ,EAHoB,EACOA,SAEnBza,GACRotE,aAAcz/D,EAAQmW,GAAW,I,EAGrCG,aAAe,SAAAjkB,GAAU,IAAD,EACmB,EAAKzD,MAApCoR,EADY,EACZA,OAAQmW,EADI,EACJA,WAEhBrJ,EAHoB,EACOA,SAEnBza,GACRkkB,aAAevW,EAAQ,CAACmW,K,EAG5BupD,e,sCAAiB,WAAMrtE,GAAN,iCAAAqR,EAAA,0DAC0B,EAAK9U,MAApCoR,EADK,EACLA,OAAQmW,EADH,EACGA,WAAWrJ,EADd,EACcA,SAEnBza,GAEF2V,EAAUY,KAAa9O,IAAIkG,EAAQmW,GAL5B,oDAQLrN,EAAYd,EAAZc,QARK,oDAWLw6C,EAAUx6C,EAAVw6C,MAXK,sDAcE1pD,EAAS0pD,EAAhBA,MAdK,0DAiBDqc,EAAY/lE,EAAhBrL,GAjBK,UAmBQC,IAAgBC,KAAK,CACtC,QAAS,eACTkxE,UACAlrB,SAAU,EACVl6B,OAAQ,MACR9T,MAAO,KACPm5D,aAAa,IAzBJ,eAmBPjxE,EAnBO,iBA4BMH,IAAgBC,KAAK,CACpC,QAAS,eACTkxE,UACAplD,OAAQ,MACRgjB,MAAO,OAhCE,QA4BP/N,EA5BO,OAmCb1rB,QAAQi0B,IAAI,gBAAiBppC,EAAQ6gC,GAnCxB,0C,wDAsCjBqwC,W,qBAAa,kDAAAn8D,EAAA,0DACqB,EAAK9U,MAA3BoR,EADC,EACDA,OAAQmW,EADP,EACOA,UACVnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GAFhC,oDAKDrN,EAAYd,EAAZc,QALC,oDAQDlW,EAAUkW,EAAVlW,MARC,sDAWMgH,EAAShH,EAAhBA,MAXC,mDAcDuN,EAASvG,EAATuG,KAGFo9B,EAAQp9B,GADR2/D,EAAQ,QAGLh6D,EAAI,EAnBJ,aAmBOA,EAAIy3B,GAnBX,wBAoBLz5B,QAAQi0B,IAAI,eAAgBn+B,EAAKrL,GAAIuxE,EAAQh6D,GApBxC,UAqBCtX,IAAgBC,KAAK,CACvB,QAAS,eACTkxE,QAAS/lE,EAAKrL,GACdkmD,SAAU,EACVl6B,OAAQulD,EAAQh6D,EAChBW,MAAOq5D,EACPF,aAAa,IA3BZ,yBA8BkBpxE,IAAgBC,KAAK,CACxC,QAAS,eACTkxE,QAAS/lE,EAAKrL,GACdgsB,OAAQulD,EAAQh6D,EAChBy3B,MAAOuiC,IAlCN,eA8BCC,EA9BD,iBAqCgBC,YAAeD,EAAS1gD,MArCxC,uBAmBkBvZ,IAnBlB,0D,wEAyCH,IAAD,EACqE3W,KAAKP,MAAvE6S,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQmW,EADd,EACcA,UAAWK,EADzB,EACyBA,eAAgBwoD,EADzC,EACyCA,SAAUtyD,EADnD,EACmDA,KAAMI,EADzD,EACyDA,QACtD2xD,EAAoBtvE,KAAKjB,MAAzBuwE,gBAEF13C,EAAWq4C,aAAgBp/D,EAAQmW,GACnC8pD,EAAeC,aAAoBlgE,EAAQmW,GAC3CgqD,EAAcC,aAAmBpgE,EAAQmW,GACzCkqD,EAAe70D,YAAgBxL,GAC/BsgE,EAAc/N,YAAevyD,GAC7B8xD,EAAiByO,aAAsBvgE,EAAQmW,GAC/C07C,EAAe2O,aAAoBxgE,EAAQmW,GAC3CsqD,EAAcC,aAAmB1gE,EAAQmW,KAAeoO,KAASo8C,UACjEC,GAAiBh4D,KAAai4D,mBAAmB7gE,EAAQmW,GACzD2qD,EAAczoD,QAAQ2mD,GACtB+B,EAA2BC,aAAmBhhE,GAEpD,OACI,oCACI,kBAAC4W,GAAA,EAAD,CACIlK,KAAMA,EACNI,QAASA,EACT+J,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBpZ,YAAa,SAAAK,GAAC,OAAIA,EAAElK,oBACpB,kBAACmjB,GAAA,EAAD,CAAUpZ,QAAS,SAAAG,GAAC,OAAIA,EAAElK,oBAOrBgtE,GACG,kBAAC5pD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK8vE,6BACpB,kBAACjuD,GAAA,EAAD,KACI,kBAACiwD,GAAD,OAEJ,kBAAChwD,GAAA,EAAD,CAAcC,QAASzP,EAAE,sBAGhCq/D,GACG,kBAAC3pD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK0Y,gBACpB,kBAACmJ,GAAA,EAAD,KACI,kBAACiwD,GAAD,OAEJ,kBAAChwD,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAGhC4+D,GACG,kBAAClpD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKgwE,aACpB,kBAACnuD,GAAA,EAAD,KACI,kBAACkwD,GAAD,CAAW1rE,MAAO,CAAC+xB,UAAW,iBAElC,kBAACtW,GAAA,EAAD,CAAcC,QAASzP,EAAE,YAGhC6+D,GACG,kBAACnpD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKy6B,WACnB7C,EACG,oCACI,kBAAC/V,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,mBAG7B,oCACI,kBAACuP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,gBAKxCm/D,GACG,kBAACzpD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKyS,cACpB,kBAACoP,GAAA,EAAD,KACI,kBAACmwD,GAAD,OAEJ,kBAAClwD,GAAA,EAAD,CAAcC,QAASzP,EAAE,aAGhCqwD,GACG,kBAAC36C,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKinB,eACpB,kBAACpF,GAAA,EAAD,KACI,kBAACkwD,GAAD,OAEJ,kBAACjwD,GAAA,EAAD,CAAcC,QAASzP,EAAE,cAGhCg/D,GACG,kBAACtpD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKqwE,YACpB,kBAACxuD,GAAA,EAAD,KACI,kBAAC8tB,GAAD,OAEJ,kBAAC7tB,GAAA,EAAD,CAAcC,QAASzP,EAAE,WAGhCowD,GACG,kBAAC16C,GAAA,EAAD,CAAUzO,MAAM,YAAY5K,QAAS3O,KAAKmnB,cACtC,kBAACtF,GAAA,EAAD,KACI,kBAAC0nB,GAAD,OAEJ,kBAACznB,GAAA,EAAD,CAAcC,QAASzP,EAAE,aAGhCw+D,GACG,kBAAC9oD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK2vE,cACpB,kBAAC9tD,GAAA,EAAD,KACI,kBAACowD,GAAD,OAEJ,kBAACnwD,GAAA,EAAD,CAAcC,QAASzP,EAAE,aAGhC0+D,GACG,kBAAChpD,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKuvE,uBACpB,kBAAC1tD,GAAA,EAAD,KACI,kBAACg/B,GAAD,OAEJ,kBAAC/+B,GAAA,EAAD,CAAcC,QAASzP,EAAE,iBAKzC,kBAAC,IAAD,CACIoL,mBAAoB,EACpBH,KAAM+xD,EACN3xD,QAAS3d,KAAKwvE,mBACd5xD,kBAAgB,qBAChB,kBAAC,IAAD,CAAaxe,GAAG,qBAAqBkT,EAAE,uBACvC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,KAAoB78B,EAAE,uBAE1B,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAKwvE,mBAAoBj2D,MAAM,WAC3CjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAKyvE,eAAgBl2D,MAAM,WACvCjH,EAAE,gB,GAvXL/R,IAAMipC,gBA+YjBlrB,GALCC,YACZtK,cACAuK,eAGWF,CAAQ+wD,I,OC9aRp7D,qBANf,SAAyBxU,GAAQ,IACrB6S,EAAM7S,EAAN6S,EAER,OAAO,yBAAKrS,UAAU,oBAAoBqS,EAAE,qB,gFCH5CksD,GAAY,KAET,SAAe0T,GAAtB,mC,6CAAO,WAA+B7kD,GAA/B,mBAAA9Y,EAAA,qEAEOnT,EAAOo9D,GAAY,IAAIptC,KAF9B,SAGsB/xB,IAAgBC,KAAK,CACtC,QAAS,wBACT+tB,MACA8kD,YAAY,IANjB,UAGO3yE,EAHP,OAQKg/D,KAAcp9D,EARnB,iDAUCuT,QAAQi0B,IAAI,YAAappC,GACzB4yE,YAAuB5yE,GACvB6yE,aAAsB,CAAEC,YAAa9yE,EAAQ6tB,QAZ9C,mDAcOklD,EAAYlnE,OAAOkS,QACfi1D,OAAS,KACnBD,EAAU1tB,SAAWx3B,EAhBtB,yD,iCCoBDolD,G,2MACFnqD,SAAW,WAAO,IAAD,EACwF,EAAK7oB,MAAlGoR,EADK,EACLA,OAAQmW,EADH,EACGA,UAAWhW,EADd,EACcA,KAAmB0hE,GADjC,EACoBxyE,YADpB,EACiCwyE,kBAAkBC,EADnD,EACmDA,sBAAuBpqD,EAD1E,EAC0EA,UAEjF1P,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAJR,IAMLc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAPR,IASLmV,EAAanV,EAAbmV,SACR,IAAKA,EAAU,OAAO,KAVT,IAaT8jD,EAaA9jD,EAbA8jD,UACAh0D,EAYAkQ,EAZAlQ,MACAoP,EAWAc,EAXAd,YAEApc,GASAkd,EAVAzB,IAUAyB,EATAld,OACAqmD,EAQAnpC,EARAmpC,UACAx0D,EAOAqrB,EAPArrB,MACA0wD,EAMArlC,EANAqlC,MACA3uD,EAKAspB,EALAtpB,SACA2sB,EAIArD,EAJAqD,WACAw3C,EAGA76C,EAHA66C,WACAxqE,EAEA2vB,EAFA3vB,QACA2f,EACAgQ,EADAhQ,KAGJ,GAAI3f,EACA,MAAO,CACH,KACA,kBAAC0zE,GAAA,EAAD,CACIhiE,OAAQA,EACRmW,UAAWA,EACX7nB,QAASA,EACTopB,UAAWA,EACXnoB,OAAQC,KAAkByyE,WAKtC,GAAI3gD,EACA,MAAO,CACH,KACA,kBAAC4gD,GAAA,EAAD,CAAWliE,OAAQA,EAAQmW,UAAWA,EAAWiK,UAAWkB,EAAY5J,UAAWA,KAI3F,GAAIohD,EACA,MAAO,CACH,KACA,kBAACqJ,GAAA,EAAD,CAAWniE,OAAQA,EAAQmW,UAAWA,EAAWisD,UAAWtJ,EAAYphD,UAAWA,KAI3F,GAAI4rC,EACA,MAAO,CAAC,KAAM,kBAAC,KAAD,CAAOtjD,OAAQA,EAAQmW,UAAWA,EAAWmtC,MAAOA,EAAO5rC,UAAWA,KAGxF,GAAI/iB,EACA,MAAO,CAAC,KAAM,kBAAC0tE,GAAA,EAAD,CAAUriE,OAAQA,EAAQmW,UAAWA,EAAWxhB,SAAUA,EAAU+iB,UAAWA,KAGjG,GAAI0vC,IACqBnmD,YAAOmmD,EAAUA,YAClBA,EAAUn9C,WAC1B,MAAO,CACH,KACA,kBAACq4D,GAAA,EAAD,CAAWtiE,OAAQA,EAAQmW,UAAWA,EAAWixC,UAAWA,EAAW1vC,UAAWA,KAK9F,GAAI9kB,GACIA,EAAMqX,UACN,MAAO,CAAC,KAAM,kBAACs4D,GAAA,EAAD,CAAOviE,OAAQA,EAAQmW,UAAWA,EAAWvjB,MAAOA,EAAO8kB,UAAWA,KAI5F,GAAI3W,EAAO,CACP,IAAMge,EAAYG,YAAQne,EAAMgI,MAAO5I,GACjCqiE,GACQ,YAATv0D,GAA+B,UAATA,KACtB8zD,GAAah0D,GAASoP,IACvB4B,GACAA,EAAU1gB,QAAU0gB,EAAU1e,OAC5BoiE,EAAkBD,KAAgBrlD,GAAeA,EAAY3X,OAAS,IAEtEhQ,EACFgtE,GAAcC,EACR,CACIC,MAAO,QACPC,WAAY,GAEhB,GAEV,MAAO,CACHH,EACI,kBAAC1kD,GAAA,EAAD,CACIzuB,YAAaozE,EAAkBX,EAAwBD,EACvDrsE,MAAOA,EACPwK,OAAQA,EACRmW,UAAWA,EACXpV,MAAOA,EACP2W,UAAWA,IAEf,KACH8qD,EAAmG,KAAtF,kBAAC1kD,GAAA,EAAD,CAAO9d,OAAQA,EAAQmW,UAAWA,EAAWpV,MAAOA,EAAO2W,UAAWA,KAI5F,MAAO,CAAC,KAAM,O,EAGlBkrD,uB,sCAAyB,WAAMvwE,GAAN,yBAAAqR,EAAA,wDACrBrR,EAAM2B,iBACN3B,EAAM0B,kBAFe,EAIS,EAAKnF,MAA3BoR,EAJa,EAIbA,OAAQmW,EAJK,EAILA,UAEVnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GANpB,yCAOA,MAPA,UASbrN,EAAYd,EAAZc,QATa,yCAUA,MAVA,UAYbmV,EAAanV,EAAbmV,SAZa,0CAaC,MAbD,QAiBrBojD,GAFgBpjD,EAARzB,KAfa,0C,kIAoBX,IAAD,EACwBrtB,KAAKP,MAA9BoR,EADC,EACDA,OAAQmW,EADP,EACOA,UAAW1U,EADlB,EACkBA,EAErBuG,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAJZ,IAMDc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAPZ,IASDmV,EAAanV,EAAbmV,SACR,IAAKA,EAAU,OAAO,KAVb,IAYD4kD,EAAoC5kD,EAApC4kD,qBAAsBd,EAAc9jD,EAAd8jD,UACxB5kD,EAAuBc,EAAvBd,YAAapP,EAAUkQ,EAAVlQ,MAEnB,GAA6B,kBAAzBoP,EAAY,SACZA,EAAc9H,aAAiB8H,QAC5B,GAA2B,kBAAhBA,GAA4B4kD,IAA0C,YAA5BA,EAAU31D,eAA2D,cAA5B21D,EAAU31D,eAAgC,OAIxG02D,aAAwD,cAA5Bf,EAAU31D,cAAgC,EAAI,EAAG+Q,EAAa,IAAjG4lD,GAJ+G,EAInInoE,KAJmI,EAIzH6O,UAClB0T,EAAc9H,aAAiB,CAAE,QAAS,gBAAiBza,KAAMuiB,EAAa1T,SAAUs5D,IAG5F,IAAMC,EACF,oCACKjB,GAAa,yBAAK3yE,UAAU,sBAAsB2yE,GAClDh0D,GAAS,yBAAK3e,UAAU,kBAAkB2e,GAC1CoP,GAAe,yBAAK/tB,UAAU,wBAAwB+tB,IA7BtD,EAgCqChuB,KAAKsoB,WAhC1C,mBAgCFwrD,EAhCE,KAgCeC,EAhCf,KAiCHC,EAAqBN,EAAuB,GAC9C,kBAACt1D,EAAA,EAAD,CACI6D,QAAQ,WACR1I,MAAM,UACNjK,QAAS,CACL2kE,gBAAiB,kBACjBlkE,SAAU,4BAEduf,WAAS,EACT3gB,QAAS3O,KAAKyzE,uBACdxzE,UAAU,mBACV,kBAACi0E,GAAA,EAAD,KACI,0BAAM1xE,EAAE,w1BAEX8P,EAAE,gBAIX,OACI,oCACKwhE,EACAD,EACAE,EACAC,K,+BAKH,IACEG,EAASn0E,KAAKP,MAAd00E,KAER,OACI,oCACI,yBAAKl0E,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,oBAAoBD,KAAKo0E,eAE3CD,O,GA7MK5zE,IAAMC,WA6N5BiyE,GAAQrhE,aAAe,CACnBJ,KAAMuf,IACNrwB,YAAam0E,IACb3B,iBAAkB4B,IAClB3B,sBAAuB4B,KAGZtgE,qBAAkBw+D,ICxN3B+B,I,mBACF,WAAY/0E,GAAQ,IAAD,uBACf,4CAAMA,KAoGVg1E,6BAA+B,SAAApkE,GACtB,EAAKtR,MAAMoV,UAEhB,EAAKzU,SAAS,CAAEyU,UAAU,KAxGX,EA2GnBugE,2BAA6B,SAAArkE,GAAW,IAAD,EACL,EAAK5Q,MAA3BoR,EAD2B,EAC3BA,OAAQmW,EADmB,EACnBA,UACRmyB,EAAU,EAAKp6C,MAAfo6C,MAEJtoC,IAAWR,EAAOQ,QAAUmW,IAAc3W,EAAO2W,YAC7CmyB,EACA,EAAKz5C,SAAS,CAAEy5C,OAAO,GAAS,WAC5BtvC,WAAW,WACP,EAAKnK,SAAS,CAAEy5C,OAAO,KACxB,KAGP,EAAKz5C,SAAS,CAAEy5C,OAAO,MAvHhB,EA4HnBw7B,iCAAmC,SAAAtkE,GAAW,IAAD,EACX,EAAK5Q,MAA3BoR,EADiC,EACjCA,OAAQmW,EADyB,EACzBA,UADyB,EAEP,EAAKjoB,MAA/BoV,EAFiC,EAEjCA,SAAUygE,EAFuB,EAEvBA,YAEdzgE,IAEAtD,IAAWR,EAAOQ,QAAUmW,IAAc3W,EAAO2W,UAC7C4tD,EACA,EAAKl1E,SAAS,CAAEk1E,aAAa,GAAS,WAClC/qE,WAAW,WACP,EAAKnK,SAAS,CAAEk1E,aAAa,KAC9B,KAGP,EAAKl1E,SAAS,CAAEk1E,aAAa,IAE1BA,GACP,EAAKl1E,SAAS,CAAEk1E,aAAa,MA7IlB,EAiJnB1Q,8BAAgC,SAAA7zD,GAAW,IAAD,EACR,EAAK5Q,MAA3BoR,EAD8B,EAC9BA,OAAQmW,EADsB,EACtBA,UACR7S,EAAa9D,EAAb8D,SAEJtD,IAAWR,EAAOQ,QAAUmW,IAAc3W,EAAO2W,WACjD,EAAKtnB,SAAS,CAAEyU,WAAUygE,aAAa,KAtJ5B,EA0JnBC,sBAAwB,SAAAxkE,GAAW,IACvB4B,EAAwB5B,EAAxB4B,QAASqG,EAAejI,EAAfiI,WADa,EAEA,EAAK7Y,MAA3BoR,EAFsB,EAEtBA,OAAQmW,EAFc,EAEdA,UAEZnW,IAAWoB,GAAW+U,IAAc1O,GACpC,EAAK/G,eA/JM,EAmKnBujE,qBAAuB,SAAAzkE,GAAW,IACtB4B,EAAwB5B,EAAxB4B,QAASqG,EAAejI,EAAfiI,WADY,EAEC,EAAK7Y,MAA3BoR,EAFqB,EAErBA,OAAQmW,EAFa,EAEbA,UAEZnW,IAAWoB,GAAW+U,IAAc1O,GACpC,EAAK/G,eAxKM,EA4KnBiY,uBAAyB,SAAAnZ,GAAW,IACxB4B,EAAwB5B,EAAxB4B,QAASqG,EAAejI,EAAfiI,WADc,EAED,EAAK7Y,MAA3BoR,EAFuB,EAEvBA,OAAQmW,EAFe,EAEfA,UACR+tD,EAAiB,EAAKh2E,MAAtBg2E,aAEJlkE,IAAWoB,IACX+U,IAAc1O,IAEM08D,aAAgBnkE,EAAQmW,KACxB+tD,EACpB,EAAKr1E,SAAS,CAAEq1E,aAAcC,aAAgBnkE,EAAQmW,KAEtD,EAAKzV,iBAxLM,EA4LnB0jE,iBAAmB,SAAA3kE,GACfqT,aAASrT,GAAQ,IA7LF,EAgMnB4kE,iBAAmB,SAAArkE,GACf4S,aAAS5S,EAAQ,MAAM,IAjMR,EAoMnBskE,gBAAkB,WACd,GAAK,EAAKC,YAEQ/pE,OAAO6yB,eAAe+tB,WACxC,CAJoB,MAMU,EAAKxsD,MAA3BoR,EANY,EAMZA,OAAQmW,EANI,EAMJA,UAEV7S,GAAYsF,KAAamsC,cAAchvC,IAA3B,iBAAyC/F,EAAzC,sBAA6DmW,IAC/EspD,aAAcz/D,EAAQmW,EAAW7S,KA7MlB,EAgNnBkhE,gBAAkB,SAAAvmE,GACdA,EAAEjK,iBACFiK,EAAElK,kBAFiB,MAIW,EAAKnF,MAA3BoR,EAJW,EAIXA,OAAQmW,EAJG,EAIHA,UAEK3K,YAAgBxL,GAEjCshD,aAAathD,EAAQmW,GAKFoqD,aAAsBvgE,EAAQmW,IAEjDE,aAAgBrW,EAAQ,CAACmW,KA/Nd,EAmOnBuB,UAAY,SAAArlB,GACJA,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAHO,MAMa,EAAKnF,MAA3BoR,EANS,EAMTA,OAAQmW,EANC,EAMDA,UAEhBuB,aAAU1X,EAAQmW,IA3OH,EA8OnBsuD,mBAAqB,WACjB,EAAK51E,SAAS,CAAEk1E,aAAa,KA/Od,EAkPnB5rE,gBAAkB,WACd,EAAKosE,WAAY,GAnPF,EAsPnB1rE,gBAAkB,WACd,EAAK0rE,WAAY,GAvPF,EA0PnBG,eAAiB,WACb,EAAKC,UAAW,GA3PD,EA8PnBC,iBAAmB,WAAO,IAAD,EACS,EAAKh2E,MAA3BoR,EADa,EACbA,OAAQmW,EADK,EACLA,UAChB0uD,aAAU7kE,EAAQmW,IAhQH,EAmQnBmB,sBAnQmB,sCAmQK,WAAMjlB,GAAN,mBAAAqR,EAAA,wDAChBrR,IACAA,EAAM2B,iBACN3B,EAAM0B,oBAGc,EAAK7F,MAArBmpB,YANY,gBAShB,EAAKxoB,SAAS,CAAEwoB,aAAa,IATb,4BAWZzO,KAAamsC,cAAc50C,KAAO,GAXtB,iDAeV1K,EAAOpD,EAAM4F,QACbtC,EAAMtD,EAAM6F,QACZ8mE,EACF3sE,EAAMyD,QAAmC,MAAzBzD,EAAMyD,OAAOgvE,SAAmBzyE,EAAMyD,OAAOuuD,KAAOhyD,EAAMyD,OAAOuuD,KAAO,KAE5F,EAAKx1D,SAAS,CACVwoB,aAAa,EACb2nD,WACAvpE,OACAE,QAxBY,0CAnQL,wDAgSnB4hB,uBAAyB,SAAAllB,GACjBA,GACAA,EAAM0B,kBAGV,EAAKlF,SAAS,CAAEwoB,aAAa,KArSd,MAGe,EAAKzoB,MAA3BoR,EAHO,EAGPA,OAAQmW,EAHD,EAGCA,UAHD,OAIf,EAAKjoB,MAAQ,CACT8Z,QAASY,KAAa9O,IAAIkG,EAAQmW,GAClC+tD,aAAcC,aAAgBnkE,EAAQmW,GACtC7S,UAAU,EACVygE,aAAa,EACbz7B,OAAO,EAEPjxB,aAAa,EACb2nD,SAAU,KACVvpE,KAAM,EACNE,IAAK,GAdM,E,mFAkBGoM,EAAWC,GAAY,IAAD,EAC8C7S,KAAKP,MAAnFoR,EADgC,EAChCA,OAAQmW,EADwB,EACxBA,UAAW6R,EADa,EACbA,aAAc+8C,EADD,EACCA,oBAAqBC,EADtB,EACsBA,SAAUt1D,EADhC,EACgCA,UADhC,EAE4BvgB,KAAKjB,MAAjEmpB,EAFgC,EAEhCA,YAAa/T,EAFmB,EAEnBA,SAAUygE,EAFS,EAETA,YAAaz7B,EAFJ,EAEIA,MAAO47B,EAFX,EAEWA,aAEnD,OAAIniE,EAAU/B,SAAWA,IAKrB+B,EAAUoU,YAAcA,IAKxBpU,EAAUimB,eAAiBA,IAK3BjmB,EAAUgjE,sBAAwBA,IAKlChjE,EAAUijE,WAAaA,IAKvBjjE,EAAU2N,YAAcA,IAKxB1N,EAAUqV,cAAgBA,IAK1BrV,EAAUsB,WAAaA,IAKvBtB,EAAU+hE,cAAgBA,IAK1B/hE,EAAUsmC,QAAUA,GAKpBtmC,EAAUkiE,eAAiBA,a,0CAU/Bt7D,KAAa3I,GAAG,iCAAkC9Q,KAAK20E,kCACvDl7D,KAAa3I,GAAG,8BAA+B9Q,KAAKkkE,+BACpDzqD,KAAa3I,GAAG,2BAA4B9Q,KAAK00E,4BACjDj7D,KAAa3I,GAAG,6BAA8B9Q,KAAKy0E,8BACnDh7D,KAAa3I,GAAG,uBAAwB9Q,KAAKwpB,wBAC7C/P,KAAa3I,GAAG,sBAAuB9Q,KAAK60E,uBAC5Cp7D,KAAa3I,GAAG,qBAAsB9Q,KAAK80E,wB,6CAI3Cr7D,KAAa1I,IAAI,iCAAkC/Q,KAAK20E,kCACxDl7D,KAAa1I,IAAI,8BAA+B/Q,KAAKkkE,+BACrDzqD,KAAa1I,IAAI,2BAA4B/Q,KAAK00E,4BAClDj7D,KAAa1I,IAAI,6BAA8B/Q,KAAKy0E,8BACpDh7D,KAAa1I,IAAI,uBAAwB/Q,KAAKwpB,wBAC9C/P,KAAa1I,IAAI,sBAAuB/Q,KAAK60E,uBAC7Cp7D,KAAa1I,IAAI,qBAAsB/Q,KAAK80E,wB,+BAsMtC,IAAD,EACgF90E,KAAKP,MAAlF6S,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQmW,EADd,EACcA,UAAW4uD,EADzB,EACyBA,oBAAqBC,EAD9C,EAC8CA,SAAUt1D,EADxD,EACwDA,UAAWqgC,EADnE,EACmEA,SADnE,EAWD5gD,KAAKjB,MARLg2E,EAHC,EAGDA,aACA5gE,EAJC,EAIDA,SACAygE,EALC,EAKDA,YACAz7B,EANC,EAMDA,MACA02B,EAPC,EAODA,SACA3nD,EARC,EAQDA,YACA5hB,EATC,EASDA,KACAE,EAVC,EAUDA,IAKEqS,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,gDAhBhB,IAkBG4gB,EAA2F5gB,EAA3F4gB,YAAa01C,EAA8Et2D,EAA9Es2D,MAAOj+C,EAAuErY,EAAvEqY,KAAM4kD,EAAiEj9D,EAAjEi9D,UAAWv7D,EAAsD1B,EAAtD0B,oBAAqBw7D,EAAiCl9D,EAAjCk9D,aAAc7qD,EAAmBrS,EAAnBqS,eAE1E8qD,EAAav8C,IAAgB7Y,YAAc/P,GAC3ColE,EACF,kBAAC,GAAD,CACIh2E,UAAU,cACVkD,IAAG,UAAK0N,EAAL,YAAemW,EAAf,SACHnW,OAAQA,EACRmW,UAAWA,EACXkK,KAAMA,EACN+9C,SAAU6G,EACV3G,MAAOA,IAGT1jE,EAAOkgD,aAAQ9yC,EAASo9D,EAAY3jE,GACpC4jE,EAAsB,OAATzqE,GAAiBA,EAAK4K,OAAS,EAC5C8/D,EAAcC,aAAmBvlE,EAAQmW,GACzCqvD,EAAYntD,QAAQ3O,GACpB+7D,EAAgBviE,aAAclD,GAC9B0lE,GAAaD,GAAiB/1D,GAAc41D,GAAeE,EAC3DtoD,EAAUqmD,aAAWv7D,GACrBq7C,EAAQ5rC,aAASzP,EAAS7Y,KAAKuoB,UAAWguD,EAAUL,EAAYD,GAElE1rC,EAAO,KACPsrC,IACAtrC,EAAOrf,EACH,kBAACsf,GAAA,EAAD,CAAUz4B,OAAK,EAACzB,OAAQ4a,EAAgBxY,SAAU1S,KAAKi1E,mBAEvD,kBAAC,GAAD,CAAUljE,OAAK,EAAClB,OAAQA,EAAQ6B,SAAU1S,KAAKk1E,oBAIvD,IAAM7uE,EAAQmwE,aAAgB3lE,EAAQmW,GAChCyvD,EAC2B,mBAA7B59D,EAAQc,QAAQ,UAA8D,qBAA7Bd,EAAQc,QAAQ,SAErE,OACI,6BACKinC,GAAY,kBAAC,GAAD,CAAS1vB,KAAMA,IAC5B,yBACIjxB,UAAWuO,IAAW,UAAW,CAC7B,iBAAkB+7B,EAClB,cAAeyrC,EACf,mBAAoB7hE,EACpB,sBAAuBygE,IAAgBzgE,EACvC,cAAeoM,IAAcs1D,EAC7B,kBAAmBt1D,GAAas1D,EAChC,kBAAmBt1D,IAAcs1D,EACjC,yBAA0BY,IAE9BC,YAAa12E,KAAK0J,gBAClBitE,WAAY32E,KAAKu1E,eACjB9mE,YAAazO,KAAKgJ,gBAClB2F,QAAS3O,KAAKm1E,gBACdyB,eAAgB52E,KAAKs1E,mBACrBjtD,cAAeroB,KAAKmoB,uBACnBytD,GAAuB,kBAAC,GAAD,MACxB,yBAAK31E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWuO,IAAW,kBAAmB,CAAE,MAAS2qC,KACpD5O,EACD,yBACItqC,UAAWuO,IAAW,kBAAmB,CACrC,iBAAkBioE,EAClB,qBAAsBA,GAAcT,IAExC3vE,MAAOA,GACNowE,IAAgBl2D,IAAc+1D,GAAkBH,IAC7C,yBAAKl2E,UAAU,iBACVsgB,IAAc41D,GACX,kBAACpkD,GAAA,EAAD,CAAelhB,OAAQA,EAAQ4S,UAAQ,EAACnT,OAAQ4a,EAAgBvH,UAAQ,IAE3EwyD,GAAe,kBAAC,GAAD,CAAShI,YAAa4H,KAG7CM,GACG,kBAAC,GAAD,CACIxlE,OAAQA,EACRmW,UAAWzM,EACX5L,QAAS3O,KAAKy1E,mBAGrBvhB,EACD,yBACIj0D,UAAWuO,IAAW,eAAgB,CAClC,sBAAwC,IAAjBumE,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1BtpE,GAEJsiB,GACG,kBAAC,GAAD,CACIld,OAAQA,EACRmW,UAAWA,EACXuB,UAAWvoB,KAAKuoB,UAChB4rD,KAAM8B,IAGbQ,GACG,kBAAC,GAAD,CACIx2E,UAAWuO,IAAW,YAAa,CAC/B,cAAeqoE,aAAahmE,EAAQmW,KAExCnW,OAAQA,EACRmW,UAAWA,EACXkK,KAAMA,EACN+9C,SAAU6G,EACV3G,MAAOA,EACPD,YAAalvE,KAAKq1E,mBAI9B,yBAAKp1E,UAAU,0BAEnB,yBAAKA,UAAU,sBAGvB,kBAAC,GAAD,CACI4Q,OAAQA,EACRmW,UAAWA,EACXK,eAAgB,CAAE7gB,MAAKF,QACvBiX,KAAM2K,EACNvK,QAAS3d,KAAKooB,uBACdynD,SAAUA,S,GAzbRrvE,cAscP8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQk2D,ICtejBsC,I,mBACF,WAAYr3E,GAAQ,IAAD,uBACf,4CAAMA,KA0CVilC,0BAA4B,SAAAr0B,GAAW,IAC3B0mE,EAAgB3hD,KAAhB2hD,YAER,EAAKr3E,SAAS,CAAEq3E,iBA9CD,EAiDnBvkD,qBAAuB,SAAAniB,GAAW,IACVQ,EAAWR,EAAvBoiB,WAER,EAAK/yB,SAAS,CAAEmR,YApDD,EAuDnBiyD,2BAA6B,SAAAzyD,GAAW,IAC5B2mE,EAAiB5hD,KAAjB4hD,aAER,EAAKt3E,SAAS,CAAEs3E,kBA1DD,IAGPnmE,EAAsCukB,KAAtCvkB,OAAQmmE,EAA8B5hD,KAA9B4hD,aAAcD,EAAgB3hD,KAAhB2hD,YAHf,OAIf,EAAKh4E,MAAQ,CACT8R,SACAmmE,eACAD,eAPW,E,mFAWGnkE,EAAWC,EAAWsqB,GACxC,OAAItqB,EAAUhC,SAAW7Q,KAAKjB,MAAM8R,SAIhCgC,EAAUmkE,eAAiBh3E,KAAKjB,MAAMi4E,eAItCnkE,EAAUkkE,cAAgB/2E,KAAKjB,MAAMg4E,aAIrCnkE,EAAUN,IAAMtS,KAAKP,MAAM6S,M,0CAQ/B8iB,KAAStkB,GAAG,qBAAsB9Q,KAAKwyB,sBACvC4C,KAAStkB,GAAG,2BAA4B9Q,KAAK8iE,4BAC7C1tC,KAAStkB,GAAG,0BAA2B9Q,KAAK0kC,6B,6CAI5CtP,KAASrkB,IAAI,qBAAsB/Q,KAAKwyB,sBACxC4C,KAASrkB,IAAI,2BAA4B/Q,KAAK8iE,4BAC9C1tC,KAASrkB,IAAI,0BAA2B/Q,KAAK0kC,6B,+BAqBvC,IAAD,EACgB1kC,KAAKP,MAAlB6S,EADH,EACGA,EADH,KACMoF,MACmC1X,KAAKjB,OAA3C8R,EAFH,EAEGA,OAFH,EAEWmmE,aAFX,EAEyBD,YAC9B,OAAIlmE,EAAe,KAIf,yBAAK5Q,UAAU,eACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,oBAAoBqS,EAAE,qC,GAxE/B/R,IAAMC,YA+EjByT,iBAAkB6iE,I,qBC7DlBG,I,wLAjBD,IACEtoE,EAAY3O,KAAKP,MAAjBkP,QAER,OACI,yBAAK1O,UAAU,sBACX,kBAACoZ,EAAA,EAAD,CAAYmoC,eAAe,EAAM/yC,YAAaE,GAC1C,kBAAC,KAAD,Y,GAPWpO,IAAMC,Y,SCM/B02E,I,OAAiB,CACnBhoE,MAAO,GACPgC,OAAQ,GACRimE,aAAc,MACdhmC,OAAQ,eAGNimC,G,YACF,WAAY33E,GAAQ,IAAD,uBACf,4CAAMA,KA4CVk1E,iCAAmC,SAAAtkE,GAAW,IAAD,EACX,EAAK5Q,MAA3BoR,EADiC,EACjCA,OAAQmW,EADyB,EACzBA,UADyB,EAEP,EAAKjoB,MAA/BoV,EAFiC,EAEjCA,SAAUygE,EAFuB,EAEvBA,YAEdzgE,IAEAtD,IAAWR,EAAOQ,QAAUmW,IAAc3W,EAAO2W,UAC7C4tD,EACA,EAAKl1E,SAAS,CAAEk1E,aAAa,GAAS,WAClC/qE,WAAW,WACP,EAAKnK,SAAS,CAAEk1E,aAAa,KAC9B,KAGP,EAAKl1E,SAAS,CAAEk1E,aAAa,IAE1BA,GACP,EAAKl1E,SAAS,CAAEk1E,aAAa,MA9DlB,EAkEnBU,mBAAqB,WACjB,EAAK51E,SAAS,CAAEk1E,aAAa,KAnEd,EAsEnBrsD,UAAY,SAAArlB,GACJA,IACAA,EAAM2B,iBACN3B,EAAM0B,mBAHO,MAMa,EAAKnF,MAA3BoR,EANS,EAMTA,OAAQmW,EANC,EAMDA,UAEhBuB,aAAU1X,EAAQmW,IA9EH,MAGe,EAAKvnB,MAA3BoR,EAHO,EAGPA,OAAQmW,EAHD,EAGCA,UAHD,OAIf,EAAKjoB,MAAQ,CACT8Z,QAASY,KAAa9O,IAAIkG,EAAQmW,GAClC4tD,aAAa,GANF,E,mFAUGhiE,EAAWC,GAAY,IAAD,EACyB7S,KAAKP,MAA9DoR,EADgC,EAChCA,OAAQmW,EADwB,EACxBA,UAAW6R,EADa,EACbA,aAAc+8C,EADD,EACCA,oBACjChB,EAAgB50E,KAAKjB,MAArB61E,YAER,OAAIhiE,EAAU/B,SAAWA,IAIrB+B,EAAUoU,YAAcA,IAIxBpU,EAAUimB,eAAiBA,IAI3BjmB,EAAUgjE,sBAAwBA,GAIlC/iE,EAAU+hE,cAAgBA,O,0CAQ9Bn7D,KAAa3I,GAAG,iCAAkC9Q,KAAK20E,oC,6CAIvDl7D,KAAa1I,IAAI,iCAAkC/Q,KAAK20E,oC,+BAuClD,IAAD,EACwD30E,KAAKP,MAA1DoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAAW4uD,EADtB,EACsBA,oBAAqBh1B,EAD3C,EAC2CA,SACxCg0B,EAAgB50E,KAAKjB,MAArB61E,YAEF/7D,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KALhB,IAOGc,EAAkBd,EAAlBc,QAASuX,EAASrY,EAATqY,KACjB,IAAKvX,EAAS,OAAO,KARhB,IAUG/H,EAAU+H,EAAV/H,MAEFnG,EAAO4rE,aAAyBx+D,GAAS,GAE/C,OACI,6BACK+nC,GAAY,kBAAC,GAAD,CAAS1vB,KAAMA,IAC5B,yBACIjxB,UAAWuO,IAAW,kBAAmB,CAAE,sBAAuBomE,IAClEgC,eAAgB52E,KAAKs1E,oBACpBM,GAAuB,kBAAC,GAAD,MACxB,yBAAK31E,UAAU,2BACX,yBAAKA,UAAU,2BACX,6BAAMwL,KAGbmG,GACG,kBAAC+c,GAAA,EAAD,CACI9d,OAAQA,EACRmW,UAAWA,EACXpV,MAAOA,EACPvL,MAAO6wE,GACP3uD,UAAWvoB,KAAKuoB,kB,GAlHfhoB,IAAMC,WAiIpB8d,GANCC,YACZkI,cACAxS,cACAyS,cAGWpI,CAAQ84D,I,UC4HRE,I,mBArQX,WAAY73E,GAAQ,IAAD,8BACf,4CAAMA,KAuBV83E,iCAAmC,SAAAlnE,GAAW,IAClCwzB,EAASxzB,EAATwzB,KACM2zC,EAAgB,EAAKz4E,MAA3B8kC,KAER,IAAI2zC,GAAe3zC,EAAK26B,YAAcgZ,EAAYhZ,UAAlD,CAEA,EAAK9+D,SAAS,CACVmkC,KAAMo6B,KAAap6B,KACnBle,MAAO,EAAK8xD,SAASxZ,KAAap6B,QAGtC,IAAM3xB,EAAQxH,IAAUyH,WAChBssD,EAAa56B,EAAb46B,SACRiZ,YAAoBxlE,EAAOusD,EAASA,YArCrB,EAwCnBkZ,gCAAkC,SAAAtnE,GAAW,IACjCwzB,EAASxzB,EAATwzB,KAUR,GARA,EAAKnkC,SAAS,CACVmkC,OACAle,MAAO,EAAK8xD,SAAS5zC,GACrB+zC,iBAAkB,EAClB/3B,aAAa,EACbg4B,YAAY,IAGXh0C,EAAL,CAEA,IAAM3xB,EAAQxH,IAAUyH,WAChBssD,EAAa56B,EAAb46B,SACRiZ,YAAoBxlE,EAAOusD,EAASA,YAvDrB,EA0DnB5kD,WAAa,SAAA1a,GACc,EAAKJ,MAApB84E,YAEH14E,GAELE,IAAgBgI,aAAa,CACzB,QAAS,0BACTlI,aAjEW,EAqEnB24E,mBAAqB,SAAAC,GAAc,IACvBpyD,EAAU,EAAK5mB,MAAf4mB,MAEFxmB,EAAUwmB,EAAMtG,KAAK,SAAA/d,GAAC,OAAIA,EAAEnC,QAAQC,KAAO24E,IACjD,GAAK54E,EAAL,CAEA,IAAM+S,EAAQxH,IAAUyH,WACxB6lE,YAAmB9lE,EAAO/S,EAAS,MAEnC,IAAI84E,EAAiB,EACjB,EAAKC,UAAY,EAAKA,SAASh+D,UAC/B+9D,EAAiBv2E,KAAKyM,MAAM,EAAK+pE,SAASh+D,QAAQvN,YAAcwrE,OAG5C,EAAKC,oBAAoBL,EAAWpyD,EAAOsyD,GACnDl2E,QAAQ,SAAAT,GACpB02E,YAAmB9lE,EAAO5Q,EAAG,UArFlB,EAyFnB82E,oBAAsB,SAACL,EAAWtZ,EAAUwZ,GACxC,IAAKxZ,EAAU,MAAO,GAEtB,IAAM4Z,EAAU,GACVvuD,EAAQ20C,EAAS10C,UAAU,SAAAzoB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO24E,IACvD,IAAe,IAAXjuD,EAAc,MAAO,GAEzB,IAAMwuD,EAAM52E,KAAKyM,MAAM2b,EAAQmuD,GACzBM,EAASzuD,EAAQmuD,EAEjBO,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ9gE,KAAK0gE,EAAiBO,EAAUE,GAE5CL,EAAQ9gE,KAAK0gE,EAAiBO,EAAUD,GACpCI,EAAaV,GACbI,EAAQ9gE,KAAK0gE,EAAiBO,EAAUG,IAI5CD,GAAc,GACdL,EAAQ9gE,KAAK0gE,EAAiBK,EAAMI,GAEpCC,EAAaV,GACbI,EAAQ9gE,KAAK0gE,EAAiBK,EAAMK,GAGpCF,EAAU/2E,KAAKk3E,KAAKna,EAASpoD,OAAS4hE,KAClCS,GAAc,GACdL,EAAQ9gE,KAAK0gE,EAAiBQ,EAAUC,GAE5CL,EAAQ9gE,KAAK0gE,EAAiBQ,EAAUF,GACpCI,EAAaV,GACbI,EAAQ9gE,KAAK0gE,EAAiBQ,EAAUE,IAIzCN,EAAQzgE,IAAI,SAAAjB,GAAC,OAAI8nD,EAAS9nD,MAnIlB,EAsInBwuD,iBAAmB,SAAAjiE,GACf,IAAM60E,EAAYzzE,OAAOpB,EAAMy+B,cAAckqB,QAAQksB,WAC/C54E,EAAU,EAAK05E,WAAWd,GAC3B54E,GAEA,EAAKi2E,YAEN,EAAK0D,qBAAuBf,IAC5B,EAAKe,mBAAqB,MAE9B,EAAKp5E,SAAS,CAAEP,YAChBE,IAAgBgI,aAAa,CACzB,QAAS,6BACTlI,YAEJ,EAAK24E,mBAAmBC,KArJT,EAwJnB/uE,gBAAkB,SAAA9F,GACd,IAAM60E,EAAYzzE,OAAOpB,EAAMy+B,cAAckqB,QAAQksB,WAC/C54E,EAAU,EAAK05E,WAAWd,GAChC,GAAK54E,EAAL,CAEA,EAAK25E,mBAAqBf,EAC1B,IAAM32E,EAAMgwB,KAAKhwB,MAqBjB,OAnBA,EAAK1B,SAAS,CAAEP,UAASq/D,UAAWp9D,EAAKy+C,aAAa,EAAOg4B,YAAY,IACzEhuE,WAAW,WACe,EAAK9K,MAAnBy/D,YACUp9D,IACd,EAAK1B,SAAS,CAAEmgD,aAAa,EAAMg4B,YAAY,IAC/Cx4E,IAAgBgI,aAAa,CACzB,QAAS,6BACTlI,cAGT,KAEH,EAAK24E,mBAAmBC,GAExB,EAAK3C,WAAY,EACjB5vE,SAAS8F,iBAAiB,UAAW,EAAK1C,eAE1C1F,EAAM2B,iBACN3B,EAAM0B,mBACC,IAnLQ,EAsLnBgE,cAAgB,WAEZ,EAAKlJ,SAAS,CAAEP,QADA,KACSq/D,UAAW,EAAG3e,aAAa,IACpDxgD,IAAgBgI,aAAa,CACzB,QAAS,6BACTlI,QAJY,OAMhB,EAAKi2E,WAAY,EACjB5vE,SAASgG,oBAAoB,UAAW,EAAK5C,gBA9L9B,EAiMnB6uE,SAAW,SAAA5zC,GACP,IAAMle,EAAQ,GACd,IAAKke,EAAM,OAAOle,EAElB,IAAMozD,EAAO,IAAItiE,IACTgoD,EAA4B56B,EAA5B46B,SAAUua,EAAkBn1C,EAAlBm1C,cAgBlB,OAfIva,GACAA,EAASA,SAAS18D,QAAQ,SAAAT,GACtBqkB,EAAMpO,KAAKjW,GACXy3E,EAAKz9D,IAAIha,EAAEnC,QAAQC,GAAIkC,EAAEnC,QAAQC,MAGrC45E,GACAA,EAAcva,SAAS18D,QAAQ,SAAAT,GACtBy3E,EAAKniE,IAAItV,EAAEnC,QAAQC,MACpBumB,EAAMpO,KAAKjW,GACXy3E,EAAKz9D,IAAIha,EAAEnC,QAAQC,GAAIkC,EAAEnC,QAAQC,OAKtCumB,GAnNP,EAAKuyD,SAAW33E,IAAM4c,YAEtB,EAAKpe,MAAQ,CACT8kC,KAAM,KACNle,MAAO,GACPiyD,iBAAkB,EAClB/3B,aAAa,EACbg4B,YAAY,GAVD,E,iFAef5Z,KAAantD,GAAG,gCAAiC9Q,KAAK23E,iCACtD1Z,KAAantD,GAAG,iCAAkC9Q,KAAKu3E,oC,6CAIvDtZ,KAAaltD,IAAI,gCAAiC/Q,KAAK23E,iCACvD1Z,KAAaltD,IAAI,iCAAkC/Q,KAAKu3E,oC,iCAoMjDQ,GAAY,IACXpyD,EAAU3lB,KAAKjB,MAAf4mB,MAEFszD,EAAetzD,EAAMoE,UAAU,SAAAzoB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO24E,IAC3D,OAAyB,IAAlBkB,EAAsBtzD,EAAMszD,GAAgB,O,+BAG7C,IAAD,SACyCj5E,KAAKjB,MAA3C8kC,EADH,EACGA,KAAMle,EADT,EACSA,MAAOxmB,EADhB,EACgBA,QAAS0gD,EADzB,EACyBA,YAC9B,IAAKhc,EAAM,OAAO,KAClB,IAAKle,EAAO,OAAO,KACnB,IAAKA,EAAMtP,OAAQ,OAAO,KAE1B,IAAMw1D,EAAWlmD,EAAM/N,IAAI,SAAAtW,GAAC,OACxB,yBACIrB,UAAU,0BACVkD,IAAK7B,EAAEnC,QAAQC,GACf85E,kBAAiB53E,EAAEnC,QAAQC,GAC3BiH,MAAO,CAAE6I,MAAOipE,KAA2BjnE,OAAQinE,MACnDxpE,QAAS,kBAAM,EAAKkL,WAAWvY,IAC/B0N,aAAc,EAAKm2D,iBACnB12D,YAAa,EAAKzF,iBAClB,kBAAC6pE,GAAA,EAAD,CACI1vE,IAAK7B,EAAEnC,QAAQC,GACfa,UAAU,kCACVd,QAASmC,EACTi4C,UAAU,EACVpvC,MAAM,EACNjK,YAAai5E,KACbC,SAAO,EACPh5E,OAAQC,KAAkBg5E,WAKtC,OACI,yBAAKv7D,IAAK9d,KAAKk4E,SAAUj4E,UAAU,iBAC9B4rE,EACA3iD,QAAQ/pB,IAAY0gD,GAAe,kBAAC/gD,GAAA,EAAD,CAAgBK,QAASA,S,GAhQlDoB,IAAMC,Y,oOCkBjC,IAAM84E,GAAqBhW,OAAOiW,OAAO,CACrCC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,uBACtBtT,KAAM,SAkwCKuT,G,YA9vCX,WAAYn6E,GAAQ,IAAD,8BACf,4CAAMA,KA6KVwD,UAAY,SAAAC,KA9KO,EAyLnB22E,6BAzLmB,sCAyLY,WAAMxpE,GAAN,yBAAAkE,EAAA,yDACvB,EAAKsW,UADkB,iBAEfivD,EAAY,EAAK/6E,MAAjB+6E,QAECnjE,EAAImjE,EAAQzjE,OAAS,EAJP,YAIUM,GAAK,GAJf,oBAKbkC,EAAUihE,EAAQnjE,IACpB46D,aAAmB14D,EAAQ5G,QAAS4G,EAAQzZ,IAN7B,uBAOf8yD,aAAYr5C,EAAQ5G,QAAS4G,EAAQzZ,IAPtB,0BAIkBuX,IAJlB,wCAcNtX,IAAgBC,KAAK,CACtC,QAAS,qBACT2S,QAAS,EAAKxS,MAAMoR,OACpB0L,MAAO,GACP2O,eAAgBza,IAAUgH,UAC1B0T,gBAAiB,EACjBC,OAAQ,EACR9T,MAAO,IACP8E,OAAQ,CAAE,QAAS,+BAtBI,QAcrB5c,EAdqB,OAyBlBmX,EAAI,EAzBc,aAyBXA,EAAInX,EAAO8rB,SAASjV,QAzBT,oBA0BjBwC,EAAUrZ,EAAO8rB,SAAS3U,IAC5B46D,aAAmB14D,EAAQ5G,QAAS4G,EAAQzZ,IA3BzB,wBA4BnB8yD,aAAYr5C,EAAQ5G,QAAS4G,EAAQzZ,IA5BlB,2BAyBiBuX,IAzBjB,0DAzLZ,wDA4NnBmsD,2BA5NmB,sCA4NU,WAAMzyD,GAAN,eAAAkE,EAAA,wDACjBsP,EAASxT,EAATwT,KADiB,oDAGH,iBAAlBA,EAAK,SAHgB,qDAKL,EAAK9kB,MAAjB+6E,QALiB,kEAQnBpvE,IAAUs8B,OAAV,qBAAiB,oCAAAzyB,EAAA,0DACW,EAAK9U,MAA3BoR,EADW,EACXA,OAAQmW,EADG,EACHA,WACZnW,EAFe,sBAGTa,EAAOC,IAAUhH,IAAIkG,IAHZ,iBAKHiO,EAASpN,EAAToN,KALG,KAMHA,EAAK,SANF,OAOF,oBAPE,OAQF,mBARE,OAgBF,uBAhBE,QAwBF,uBAxBE,yCASGzf,IAAgBC,KAAK,CACvB,QAAS,oBACTiR,QAASuO,EAAKvO,QACdmH,OAAO,IAZR,6DAiBGrY,IAAgBC,KAAK,CACvB,QAAS,uBACT6f,eAAgBL,EAAKK,eACrBzH,OAAO,IApBR,6DAyBGrY,IAAgBC,KAAK,CACvB,QAAS,uBACTugB,cAAef,EAAKe,cACpBnI,OAAO,IA5BR,4CAiCX,EAAKw9D,iBAAiBrkE,EAAQ,EAAGmW,EAAW,GAjCjC,2CARE,0CA5NV,wDA2QnB4wC,0BAA4B,SAAAvnD,GACJA,EAAZitC,UAEJ,EAAKy8B,gBAAgBh4E,QAAQ,SAAAT,GAAC,OAAIA,MAClC,EAAKy4E,gBAAkB,KA/QZ,EAmRnBC,wBAA0B,SAAA3pE,GAAW,IACzBQ,EAAsBR,EAAtBQ,OAAQmW,EAAc3W,EAAd2W,UACRizD,EAAiB,EAAKl7E,MAAtBk7E,aAER,GAAI,EAAKx6E,MAAMoR,SAAWA,EAA1B,CAIA,IAAM+jC,EAAWqlC,EAAa5jE,OAAS,EAAI4jE,EAAaA,EAAa5jE,OAAS,GAAK,KAC/Eu+B,GAAYA,EAAS/jC,SAAWA,GAAU+jC,EAAS5tB,YAAcA,GAIrEizD,EAAa1iE,KAAK,CAAE1G,SAAQmW,gBAhSb,EAmSnBkhD,0BAA4B,SAAA73D,GACxB,IAAMwT,EAAO,EAAK+H,QAAQ1R,QAEpBu7B,EAAmB5xB,EAAKE,aACxB4xB,EAAgB9xB,EAAKR,UAC3B,EAAK3jB,SAAS,CAAEw6E,cAAc,GAAQ,WAC9Br2D,EAAKR,YAAcsyB,IACnB9xB,EAAKR,WAAa3hB,KAAKiS,IAAI8hC,EAAmB5xB,EAAKE,kBA1S5C,EA+SnBo2D,0BAA4B,SAAAC,GACxB,IAAMv2D,EAAO,EAAK+H,QAAQ1R,QAE1B,EAAKu7B,iBAAmB5xB,EAAKE,aAC7B,EAAK4xB,cAAgB9xB,EAAKR,WAnTX,EAsTnBg3D,uBAAyB,SAAAD,GACrB,IAAMv2D,EAAO,EAAK+H,QAAQ1R,QAK1B,EAAKxa,SAAS,CAAEw6E,cAAc,GAAS,WAC/Br2D,EAAKR,YAAc,EAAKsyB,gBACxB9xB,EAAKR,WAAa3hB,KAAKiS,IAAI,EAAK8hC,iBAAmB5xB,EAAKE,kBA9TjD,EAmUnBu2D,wBAA0B,SAAAjqE,GACtB,EAAK3Q,SAAS,CACV66E,gBAAiB9gE,KAAamsC,cAAc50C,KAAO,KArUxC,EAyUnBwkB,2BAA6B,SAAAnlB,GACN,EAAK5Q,MAAhBoR,SAEOR,EAAOQ,QAClB,EAAKnR,SAAS,CAAE+1B,aAAcplB,EAAOqlB,cA7U1B,EAiVnBlM,uBAAyB,SAAAnZ,GAAW,IACxBQ,EAAW,EAAKpR,MAAhBoR,OACAipE,EAAY,EAAK/6E,MAAjB+6E,QACA7nE,EAAwB5B,EAAxB4B,QAASqG,EAAejI,EAAfiI,WAEjB,GAAIzH,IAAWoB,IAEsC,IAAjD6nE,EAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOkZ,IAAoB,CACpD,IAAMO,EAAUY,KAAa9O,IAAIsH,EAASqG,GAC1C,IAAKO,EAAS,OAEd,IAAM3G,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO,CAAC2G,MA7VjB,EAiWnB2hE,wBAA0B,SAAAnqE,GACH,EAAK5Q,MAAhBoR,OACOR,EAAO4B,SAnWP,EAsWnBwoE,6BAA+B,SAAApqE,GAC3B,GAAK,EAAKwa,UAAV,CADqC,IAG7BhS,EAA4BxI,EAA5BwI,QAAS6f,EAAmBroB,EAAnBqoB,eAEjB,GADmB,EAAKj5B,MAAhBoR,SACOgI,EAAQ5G,QAAvB,CAaA,IAAMyoE,EAAiB7hE,EAAQ4gB,YACzB6/C,GAAmBE,iBACnBF,GAAmBK,qBAEzB,EAAKgB,eAAejiD,EAAgB7f,EAAS,WACrC6hE,IAAmBpB,GAAmBK,sBACtC,EAAKiB,qBAAqBF,EAAgB,EAAK36E,UAGnD,EAAK86E,sBAGT,IAAM3oE,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO,CAAC2G,IAC5B,EAAKwiB,aAAa,CAACxiB,OAtYJ,EAyYnBuR,mBAAqB,SAAA/Z,GACjB,GAAK,EAAKwa,UAAV,CAD2B,IAGnBhS,EAAYxI,EAAZwI,QAER,GADmB,EAAKpZ,MAAhBoR,SACOgI,EAAQ5G,QAGvB,GAAa,IADI4G,EAATqY,KACR,CAEA,IAAMrN,EAAO,EAAK+H,QAAQ1R,QAEtBwgE,EAAiB7hE,EAAQ4gB,YAAc6/C,GAAmBE,iBAAmBF,GAAmBjT,KAChGxiD,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,eAC3C42D,EAAiBpB,GAAmBE,kBAGxC,IAAMsB,EAAWjiE,EAAQ4gB,YAAc,CAAEshD,mBAAmB,GAAU,GAEhEjB,EAAU,CAACjhE,GACjB,EAAKmiE,oBAAqB,EAC1B,EAAKC,eAAeC,aAAepB,GAAUgB,EAAU,WACnD,EAAKE,oBAAqB,EAC1B,EAAKJ,qBAAqBF,EAAgB,EAAK36E,YAGnD,IAAMmS,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO4nE,GAC3B,EAAKz+C,aAAay+C,MAraH,EAwanBvvD,uBAAyB,SAAAla,GAAW,IACxBQ,EAAW,EAAKpR,MAAhBoR,OACAoB,EAAuC5B,EAAvC4B,QAASmlD,EAA8B/mD,EAA9B+mD,aAAcl8C,EAAgB7K,EAAhB6K,YAC3BrK,IAAWoB,GAEVmlD,GAEL,EAAK+jB,cAAcjgE,IA/aJ,EAkbnB2/D,kBAAoB,WAChB,GAAK,EAAKvvD,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAI7U,IACfkP,EAAQy1D,YAAY,EAAKxvD,QAAS,EAAKspB,UACpCv+B,EAAI,EAAGA,EAAIgP,EAAMtP,OAAQM,IAAK,CACnC,IAAM0kE,EAAiB,EAAK/vD,SAAS3F,EAAMhP,IAC3C,GAAI0kE,EAAgB,CAChB,IADgB,EACAA,EACsB57E,MAA9BoR,EAFQ,EAERA,OAAQmW,EAFA,EAEAA,UACV7jB,EAAG,UAAM0N,EAAN,YAAgBmW,GACzBsE,EAAShQ,IAAInY,EAAKA,IAI1B9D,IAAgBgI,aAAa,CACzB,QAAS,6BACTikB,SAAUA,MAncC,EAkoBnBgwD,sBAloBmB,sCAkoBK,WAAM97E,GAAN,mBAAA+U,EAAA,qDACdgnE,EAAiB,EACnBC,EAAah8E,GAAUA,EAAO8rB,SAASjV,OAAS,GAAK7W,EAAO8rB,SAASjV,OAASolE,IAEzE9kE,EAAI,EAJO,YAIJA,EAAI4kE,GAAkBC,GAJlB,iCAKD,EAAK9wD,aALJ,OAKhBlrB,EALgB,OAMhBg8E,EAAah8E,GAAUA,EAAO8rB,SAASjV,OAAS,GAAK7W,EAAO8rB,SAASjV,OAASolE,IAN9D,OAI8B9kE,IAJ9B,yDAloBL,wDA4oBnB+T,WA5oBmB,qBA4oBN,sCAAAnW,EAAA,wDACD1D,EAAW,EAAKpR,MAAhBoR,OACAipE,EAAY,EAAK/6E,MAAjB+6E,QAEHjpE,EAJI,qDAKL,EAAK+Z,QALA,qDAOL,EAAK8wD,oBAPA,uBAQL,EAAKC,wBARA,iCAYH1wD,EAAgB6uD,GAAWA,EAAQzjE,OAAS,EAAIyjE,EAAQ,GAAG16E,GAAK,EAEtE,EAAKwrB,SAAU,EACTugB,EAAY,EAAKA,UAfd,UAgBU9rC,IAAgBC,KAAK,CACpC,QAAS,iBACT2S,QAASpB,EACTsa,gBAAiBF,EACjBG,OAAQ,EACR9T,MAAOmkE,MACRpwD,QAAQ,WACP,EAAKT,SAAU,IAvBV,WAgBLprB,EAhBK,OA0BL2rC,IAAc,EAAKA,UA1Bd,sDA8BL,EAAK1rC,MAAMoR,SAAWA,EA9BjB,0DAkCT4I,KAAagS,SAASjsB,EAAO8rB,UAC7B9rB,EAAO8rB,SAASg8C,UAChB,EAAKsU,WAAWV,aAAe17E,EAAO8rB,UAAW,WACxC9rB,EAAO8rB,SAASjV,QACjB,EAAKslE,0BAIPzpE,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO1S,EAAO8rB,UAClC,EAAK+P,aAAa77B,EAAO8rB,UA5ChB,kBA8CF9rB,GA9CE,0CA5oBM,EA6rBnBm8E,sBA7rBmB,qBA6rBK,4CAAApnE,EAAA,wDACZ1D,EAAW,EAAKpR,MAAhBoR,OACAipE,EAAY,EAAK/6E,MAAjB+6E,QAEHjpE,EAJe,qDAKhB,EAAK+Z,QALW,oDAOdixD,EAAe7nD,YAAgBnjB,GAPjB,oDAUdmO,EAAWkB,KAAgBhB,YAAY28D,GAVzB,sDAYf78D,EAASiV,6BAZM,0DAcpB,EAAKynD,qBAAsB,EAdP,UAgBSr8E,IAAgBC,KAAK,CAC9C,QAAS,uBACT6f,eAAgBH,EAASiV,+BAlBT,WAgBd6nD,EAhBc,iEAuBd7wD,EAAgB6uD,EAAQzjE,OAAS,GAAKyjE,EAAQ,GAAG7nE,UAAY6pE,EAAe18E,GAAK06E,EAAQ,GAAG16E,GAAK,EAEvG,EAAKwrB,SAAU,EACTugB,EAAY,EAAKA,UA1BH,UA2BC9rC,IAAgBC,KAAK,CACtC,QAAS,iBACT2S,QAAS6pE,EAAe18E,GACxB+rB,gBAAiBF,EACjBG,OAAQ,EACR9T,MAAOmkE,MACRpwD,QAAQ,WACP,EAAKT,SAAU,IAlCC,WA2BdprB,EA3Bc,OAqChB2rC,IAAc,EAAKA,UArCH,sDAyChB,EAAK1rC,MAAMoR,SAAWA,EAzCN,mDA6CpB4I,KAAagS,SAASjsB,EAAO8rB,UAC7B9rB,EAAO8rB,SAASg8C,UAChB,EAAKsU,WAAWV,aAAe17E,EAAO8rB,WAEhCpZ,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO1S,EAAO8rB,UAClC,EAAK+P,aAAa77B,EAAO8rB,UAnDL,0CA7rBL,EAmvBnB6hB,eAnvBmB,qBAmvBF,wCAAA54B,EAAA,wDACL1D,EAAW,EAAKpR,MAAhBoR,OACAipE,EAAY,EAAK/6E,MAAjB+6E,QAEFpoE,EAAOC,IAAUhH,IAAIkG,GAJd,qDAOT,EAAK+Z,QAPI,qDAQT,EAAKC,UARI,wDAUPI,EAAgB6uD,GAAWA,EAAQzjE,OAAS,EAAIyjE,EAAQA,EAAQzjE,OAAS,GAAGjX,GAAK,EAEvF,EAAKwrB,SAAU,EACTugB,EAAY,EAAKA,UAbV,UAcM9rC,IAAgBC,KAAK,CACpC,QAAS,iBACT2S,QAASpB,EACTsa,gBAAiBF,EACjBG,QAASqwD,IAAsB,EAC/BnkE,MAAOmkE,IAAsB,IAC9BpwD,QAAQ,WACP,EAAKT,SAAU,IArBN,WAcTprB,EAdS,OAwBT2rC,IAAc,EAAKA,UAxBV,sDA4BT,EAAK1rC,MAAMoR,SAAWA,EA5Bb,0DAgCTa,EAAKkkB,aACL,EAAK/K,UAAYrrB,EAAO8rB,SAASjV,OAAS,GAAK3E,EAAKkkB,aAAax2B,KAAOI,EAAO8rB,SAAS,GAAGlsB,GAE3F,EAAKyrB,WAAY,EAGrByiB,aAAwB9tC,EAAQ,EAAKT,MAAM+6E,SAE3CrgE,KAAagS,SAASjsB,EAAO8rB,UAC7B9rB,EAAO8rB,SAASg8C,UAChB,EAAK0T,oBAAqB,EAC1B,EAAKC,eAAeC,aAAe17E,EAAO8rB,UAAW,GAAI,WACrD,EAAK0vD,oBAAqB,IAGxB9oE,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO1S,EAAO8rB,UAClC,EAAK+P,aAAa77B,EAAO8rB,UAjDZ,kBAmDN9rB,GAnDM,0CAnvBE,EAw1BnBmsB,aAAe,WAAO,IAAD,EACoC,EAAK5sB,MAAlDg8E,EADS,EACTA,kBAAmBd,EADV,EACUA,aAAcH,EADxB,EACwBA,QACnCj2D,EAAO,EAAK+H,QAAQ1R,QAS1B,EAAK2gE,oBAEDh3D,EAAKR,WAAawI,KAClB,EAAKnB,aACE7G,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,MACjE,EAAKshB,iBAGLtpB,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,KACtD,EAAKhB,WAAakwD,IACd,EAAKplC,gBAAkB9xB,EAAKR,WAAa,EAAKsyB,eAAiB,EAAKomC,cAAgBjC,EACpF,EAAKp6E,SAAS,CACVq7E,mBAAmB,EACnBd,aAAc,KAEVA,EAAa5jE,QACrB,EAAK3W,SAAS,CACVq7E,mBAAmB,KAK1BA,GACD,EAAKr7E,SAAS,CAAEq7E,mBAAmB,IAI3C,EAAKplC,cAAgB9xB,EAAKR,UAC1B,EAAK04D,YAAcjC,GA/3BJ,EAk4BnBc,qBAAuB,SAACF,EAAgB36E,GAAc,IAAD,EACnB,EAAKN,MADc,KACzCoR,OADyC,EACjCmW,UACkCjnB,GAAY,CAC1DsjB,UAAW,EACXS,aAAc,EACdC,aAAc,IAL+B,EAEzCV,UAFyC,EAE9BS,aAF8B,EAEhBC,aAcjC,OAAQ22D,GACJ,KAAKpB,GAAmBE,iBACpB,EAAKwC,iBACL,MAEJ,KAAK1C,GAAmBI,kBACpB,EAAKuC,kBACL,MAEJ,KAAK3C,GAAmBG,iBACpB,EAAKyC,iBACL,MAEJ,KAAK5C,GAAmBK,qBACpB,EAAKwC,mBAAmBp8E,GACxB,MAEJ,KAAKu5E,GAAmBjT,QAn6Bb,EAy6BnB8V,mBAAqB,SAAAp8E,GAAa,IACtBsjB,EAA0CtjB,EAA1CsjB,UAAWS,EAA+B/jB,EAA/B+jB,aACbD,GAD4C9jB,EAAjBgkB,aACpB,EAAK6H,QAAQ1R,SAS1B2J,EAAKR,UAAYA,GAAaQ,EAAKC,aAAeA,IAp7BnC,EA87BnBo4D,eAAiB,WAiBb,IAjBoB,IAAD,EACW,EAAKz8E,MAA3BoR,EADW,EACXA,OACAipE,GAFW,EACH9yD,UACI,EAAKjoB,MAAjB+6E,SACFj2D,EAAO,EAAK+H,QAAQ1R,QAatBkiE,GAXSzqE,IAAUhH,IAAIkG,IAWZ,GACN8F,EAAI,EAAGA,EAAImjE,EAAQzjE,OAAQM,IAAK,CACrC,IAAI0lE,EAAgB,EAAKC,SAAS3xE,IAAIgM,GAClCymB,EAAOwqC,eAAqByU,GAChC,GAAIj/C,GACIi/C,EAAc58E,MAAMm2E,oBAAqB,CACzC/xD,EAAKR,UAAY+Z,EAAKyW,UAhBN,EAiBhBuoC,GAAW,EACX,OAaPA,GACD,EAAKJ,kBAp+BM,EAw+BnBC,gBAAkB,WAed,IAfqB,IAAD,EACU,EAAKx8E,MAAnBunB,GADI,EACZnW,OADY,EACJmW,WACR8yD,EAAY,EAAK/6E,MAAjB+6E,QACFj2D,EAAO,EAAK+H,QAAQ1R,QAYjBvD,EAAI,EAAGA,EAAImjE,EAAQzjE,OAAQM,IAAK,CACrC,IAAM0lE,EAAgB,EAAKC,SAAS3xE,IAAIgM,GAClCu0C,EAAO0c,eAAqByU,GAClC,GAAInxB,GACImxB,EAAc58E,MAAMunB,YAAcA,EAAW,CAC7CnD,EAAKR,UAAY6nC,EAAKrX,UAAYhwB,EAAKE,aAAe,GAC3C,EACX,SA9/BG,EAghCnBi4D,eAAiB,WAAO,IAAD,EACW,EAAKv8E,MAC7BokB,GAFa,EACXhT,OADW,EACHmW,UACH,EAAK4E,QAAQ1R,SAUJ2J,EAAKC,aAAeD,EAAKE,eACzBF,EAAKR,YACvBQ,EAAKR,UAAYQ,EAAKC,aAAeD,EAAKE,eA9hC/B,EAkjCnBw4D,cAljCmB,qBAkjCH,sCAAAhoE,EAAA,wDACJ1D,EAAW,EAAKpR,MAAhBoR,OACFa,EAAOC,IAAUhH,IAAIkG,GAFf,wDAMZ,EAAKs6B,UAAY/Z,KAAKhwB,MACtB,EAAKwpB,SAAU,EACf,EAAKC,WAAY,EAEK,EACP,EACTvT,EAAQmkE,IAEd,EAAK7wD,SAAU,EACTugB,EAAY,EAAKA,UAfX,UAgBS9rC,IAAgBC,KAAK,CACtC,QAAS,iBACT2S,QAASP,EAAKtS,GACd+rB,gBATkB,EAUlBC,OATW,EAUX9T,MAAOA,IACR+T,QAAQ,WACP,EAAKT,SAAU,IAvBP,WAgBNprB,EAhBM,OA0BR2rC,IAAc,EAAKA,UA1BX,sDA8BR,EAAK1rC,MAAMoR,SAAWA,EA9Bd,mDAkCRa,EAAKkkB,aACL,EAAK/K,UAAYrrB,EAAO8rB,SAASjV,OAAS,GAAK3E,EAAKkkB,aAAax2B,KAAOI,EAAO8rB,SAAS,GAAGlsB,GAE3F,EAAKyrB,WAAY,EAGrB,EAAKnrB,SAAS,CAAEq7E,mBAAmB,EAAOd,aAAc,KAExDxgE,KAAagS,SAASjsB,EAAO8rB,UAC7B9rB,EAAO8rB,SAASg8C,UAEhB,EAAK/iE,QAAQ,EAAKxF,MAAMy9E,mBAAoBh9E,EAAO8rB,SAAU,WACzD,EAAKsvD,qBAAqBtB,GAAmBE,iBAAkB,EAAKz5E,YAIlEmS,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO1S,EAAO8rB,UAClC,EAAK+P,aAAa77B,EAAO8rB,UAEzB,EAAKgwD,sBAAsB97E,GAtDf,0CAljCG,EA2mCnBi9E,oBAAsB,SAAAv5E,GAClBA,EAAM2B,iBACN3B,EAAM0B,kBAFqB,IAInBiM,EAAW,EAAKpR,MAAhBoR,OACHk6C,YAAqBl6C,IAE1BxR,IAAgBgI,aAAa,CACzB,QAAS,uBACT4B,UAAU,EACVs2B,MAAOr8B,EAAMwqE,aAAanuC,SArnCf,EAynCnBm9C,sBAAwB,SAAAx5E,GAAU,IACtB+2E,EAAiB,EAAKl7E,MAAtBk7E,aAER,GAAIA,EAAa5jE,OAAS,EAAG,CACzB,IAAMsmE,EAAY1C,EAAa2C,MAC/B,GAAID,EAAW,CAAC,IACJ9rE,EAAsB8rE,EAAtB9rE,OAAQmW,EAAc21D,EAAd31D,UACZnW,IAAW,EAAKpR,MAAMoR,QACtB4S,aAAS5S,EAAQmW,SAIzB,EAAKu1D,iBA/nCT,EAAKpxC,UAAY/Z,KAAKhwB,MACtB,EAAKrC,MAAQ,CACTiV,WAAY,EACZqlB,cAAe,KACf6gD,cAAc,EACdJ,QAAS,GACTrkD,cAAc,EACd8kD,iBAAiB,EACjBiC,mBAAoB,EACpBzB,mBAAmB,EACnBd,aAAc,IAGlB,EAAKruD,QAAUrrB,IAAM4c,YACrB,EAAK+3B,SAAW30C,IAAM4c,YACtB,EAAK0/D,oBAAsBt8E,IAAM4c,YAEjC,EAAK48D,gBAAkB,GACvB,EAAKuC,SAAW,IAAI7lE,IAEpB,EAAKokE,kBAAoB50C,YAAS,EAAK40C,kBAAmB,KA1B3C,E,qFA8CKh7E,EAAWC,GAC/B,IAAM+jB,EAAO7jB,KAAK4rB,QAAQ1R,QAGpBna,EAAW,CACbsjB,UAH8CQ,EAA1CR,UAIJS,aAJ8CD,EAA/BC,aAKfC,aAL8CF,EAAjBE,cAUjC,OADA/jB,KAAKD,SAAWA,EACTA,I,yCAGQF,EAAWC,EAAWC,GAAW,IAAD,EACjBC,KAAKP,MAA3BoR,EADuC,EACvCA,OAAQmW,EAD+B,EAC/BA,UACchnB,KAAKjB,MAA3Bg8E,kBAEK/6E,KAAK4rB,QAAQ1R,QAWtBra,EAAUgR,SAAWA,GAAUhR,EAAUmnB,YAAcA,EACvDhnB,KAAKk1E,iBAAiBrkE,EAAQhR,EAAUgR,OAAQmW,EAAWnnB,EAAUmnB,WAEhEhnB,KAAKg7E,oBACNh7E,KAAK46E,qBAAqBtB,GAAmBK,qBAAsB55E,K,4CAKzD6S,EAAWC,GAAY,IAAD,EACH7S,KAAKP,MAAlCoR,EADgC,EAChCA,OAAQmW,EADwB,EACxBA,UAAWhD,EADa,EACbA,MADa,EAEsDhkB,KAAKjB,MAA3Fm7E,EAFgC,EAEhCA,aAAcJ,EAFkB,EAElBA,QAAS7wE,EAFS,EAETA,SAAUwsB,EAFD,EAECA,aAAc8kD,EAFf,EAEeA,gBAAiBQ,EAFhC,EAEgCA,kBAExE,OAAInoE,EAAUoR,QAAUA,IAKpBpR,EAAU/B,SAAWA,IAKrB+B,EAAUoU,YAAcA,IAKxBnU,EAAUkoE,oBAAsBA,IAKhCloE,EAAUqnE,eAAiBA,KAK1B4C,YAAcjqE,EAAUinE,QAASA,KAKlCjnE,EAAU5J,WAAaA,IAKvB4J,EAAU4iB,eAAiBA,GAK3B5iB,EAAU0nE,kBAAoBA,W,0CAUlCnlD,KAAStkB,GAAG,0BAA2B9Q,KAAK43D,2BAC5CxiC,KAAStkB,GAAG,2BAA4B9Q,KAAK8iE,4BAC7CnxD,IAAUb,GAAG,2BAA4B9Q,KAAKw1B,4BAC9C7jB,IAAUb,GAAG,wBAAyB9Q,KAAKw6E,yBAC3C/gE,KAAa3I,GAAG,6BAA8B9Q,KAAKs6E,yBACnD7gE,KAAa3I,GAAG,8BAA+B9Q,KAAKs6E,yBACpD7gE,KAAa3I,GAAG,wBAAyB9Q,KAAKg6E,yBAC9CvgE,KAAa3I,GAAG,6BAA8B9Q,KAAK65E,8BACnDpgE,KAAa3I,GAAG,mBAAoB9Q,KAAKoqB,oBACzC3Q,KAAa3I,GAAG,uBAAwB9Q,KAAKuqB,wBAC7C9Q,KAAa3I,GAAG,uBAAwB9Q,KAAKwpB,wBAC7C/P,KAAa3I,GAAG,6BAA8B9Q,KAAKy6E,8BACnD3vE,IAAYgG,GAAG,0BAA2B9Q,KAAKkoE,2BAC/Cp9D,IAAYgG,GAAG,0BAA2B9Q,KAAKm6E,2BAC/CrvE,IAAYgG,GAAG,uBAAwB9Q,KAAKq6E,0B,6CAI5CjlD,KAASrkB,IAAI,0BAA2B/Q,KAAK43D,2BAC7CxiC,KAASrkB,IAAI,2BAA4B/Q,KAAK8iE,4BAC9CnxD,IAAUZ,IAAI,2BAA4B/Q,KAAKw1B,4BAC/C7jB,IAAUZ,IAAI,wBAAyB/Q,KAAKw6E,yBAC5C/gE,KAAa1I,IAAI,6BAA8B/Q,KAAKs6E,yBACpD7gE,KAAa1I,IAAI,8BAA+B/Q,KAAKs6E,yBACrD7gE,KAAa1I,IAAI,wBAAyB/Q,KAAKg6E,yBAC/CvgE,KAAa1I,IAAI,6BAA8B/Q,KAAK65E,8BACpDpgE,KAAa1I,IAAI,mBAAoB/Q,KAAKoqB,oBAC1C3Q,KAAa1I,IAAI,uBAAwB/Q,KAAKuqB,wBAC9C9Q,KAAa1I,IAAI,uBAAwB/Q,KAAKwpB,wBAC9C/P,KAAa1I,IAAI,6BAA8B/Q,KAAKy6E,8BACpD3vE,IAAYiG,IAAI,0BAA2B/Q,KAAKkoE,2BAChDp9D,IAAYiG,IAAI,0BAA2B/Q,KAAKm6E,2BAChDrvE,IAAYiG,IAAI,uBAAwB/Q,KAAKq6E,0B,+EAoT1BxpE,EAAQ8oB,EAAgB3S,EAAW+iB,G,wGAChDr4B,EAAOC,IAAUhH,IAAIkG,GACrBksE,EAAeprE,IAAUhH,IAAIgvB,GAGnC35B,KAAKmrC,UAAY/Z,KAAKhwB,MACtBpB,KAAK4qB,SAAU,EACf5qB,KAAK6qB,WAAY,EACjB7qB,KAAK07E,qBAAsB,EAC3B17E,KAAK+5E,gBAAkB,IAEnBroE,E,wBACArS,IAAgBC,KAAK,CACjB,QAAS,WACT2S,QAASP,EAAKtS,KAGZ45B,GAAUhS,GAAatV,EAAKimB,aAAe,EAC3C1M,EACF+N,GAAUtnB,EAAKimB,aAAe,EAAIjmB,EAAKsrE,2BAA6Bh2D,GAAwB,EAC1FoE,EAAU4N,GAAUtnB,EAAKimB,aAAe,GAAM3Q,GAAa,EAAIy0D,IAAsB,EACrFnkE,EACD0hB,GAAUtnB,EAAKimB,aAAe,GAAM3Q,EAAY,EAAIy0D,IAAsBA,IAE/Ez7E,KAAK4qB,SAAU,EACTugB,EAAYnrC,KAAKmrC,U,UACF9rC,IAAgBC,KAAK,CACtC,QAAS,iBACT2S,QAASP,EAAKtS,GACd+rB,gBAAiBF,EACjBG,OAAQA,EACR9T,MAAOA,IACR+T,QAAQ,WACP,EAAKT,SAAU,I,WAPbprB,E,OAUF2rC,IAAcnrC,KAAKmrC,U,sDAInBz5B,EAAKkkB,aACL51B,KAAK6qB,UAAYrrB,EAAO8rB,SAASjV,OAAS,GAAK3E,EAAKkkB,aAAax2B,KAAOI,EAAO8rB,SAAS,GAAGlsB,GAE3FY,KAAK6qB,WAAY,EAGrBpR,KAAagS,SAASjsB,EAAO8rB,UAC7B9rB,EAAO8rB,SAASg8C,UAEZkV,EAAqBx8E,KAAKjB,MAAMy9E,mBAChC3rE,IAAW8oB,E,oBACX6iD,EAAqBl4E,OAAO24E,YACxBvrE,GAAQA,EAAKimB,aAAe,G,iBACnBhhB,EAAInX,EAAO8rB,SAASjV,OAAS,E,aAAGM,GAAK,G,oBAClCvX,EAAOI,EAAO8rB,SAAS3U,GAAvBvX,MAEHI,EAAO8rB,SAAS3U,GAAG8iB,aACpBr6B,EAAKsS,EAAKsrE,4BACV59E,EAAKo9E,G,iBAELA,EAAqBp9E,E,4DAPoBuX,I,wBAarD6lE,EAAqBA,IAAuBl4E,OAAO24E,UAAY,EAAIT,E,QAGnE9B,EAAiBpB,GAAmBE,iBACpCxyD,EACA0zD,EAAiBpB,GAAmBI,kBAC7B1gD,GAAUwjD,IACjB9B,EAAiBpB,GAAmBG,kBAGxCz5E,KAAKuE,QAAQi4E,EAAoBh9E,EAAO8rB,SAAU,WAC9C,EAAKsvD,qBAAqBF,EAAgB,EAAK36E,UAC3CinB,GACAk2D,aAAiBrsE,EAAQmW,KAK3B9U,EAAQxH,IAAUyH,WACxBmY,YAAoBpY,EAAO1S,EAAO8rB,UAClCtrB,KAAKq7B,aAAa77B,EAAO8rB,UAEzBpT,YAAiBhG,EAAO,CAACrB,IACzBssE,YAAiBjrE,EAAOrB,GAExB7Q,KAAKs7E,sBAAsB97E,GAG3BmjB,YAAgBjR,EAAKtS,I,wBAErBY,KAAK4qB,SAAU,EACf5qB,KAAKuE,QAAQ,EAAG,GAAI,WAChB,EAAKqmB,SAAU,I,QAInBmyD,GAAgBpjD,IAAmB9oB,GACnCxR,IAAgBC,KAAK,CACjB,QAAS,YACT2S,QAAS0nB,I,+IAKRrO,GACT,GAAKA,GACmB,IAApBA,EAASjV,QACRiV,EAAS,GAAGrZ,QAAjB,CAEA,IAAMmrE,EAAa,WACf/9E,IAAgBC,KAAK,CACjB,QAAS,eACT2S,QAASqZ,EAAS,GAAGrZ,QACrBiJ,YAAaoQ,EAAS1T,IAAI,SAAAtW,GAAC,OAAIA,EAAElC,QAIrCiM,OAAOgyE,SACPD,IAEAp9E,KAAK+5E,gBAAgBxiE,KAAK6lE,M,gDAIR9xD,GAEtB,IAAK,IAAI3U,EAAI2U,EAASjV,OAAS,EAAGM,GAAK,EAAGA,IAAK,CAC3C,IAAIkC,EAAUyS,EAAS3U,GACvB,GAAIkC,GAAWA,EAAQc,QACnB,OAAQd,EAAQc,QAAQ,UACpB,IAAK,eAAiB,IAAD,EACD3Z,KAAKs9E,gBAAgBzkE,GADpB,mBACZzZ,EADY,KAEjB,GAFiB,KAGHm+E,YAAa1kE,EAAQc,QAAQ/H,MAAMgI,OACpCymB,MACL31B,IAAU8yE,oBAAoBp+E,EAAIyZ,GAG1C,MAEJ,IAAK,iBAAmB,IAAD,EACH7Y,KAAKy9E,kBAAkB5kE,GADpB,mBACdzZ,EADc,KAEnB,GAFmB,KAGLyZ,EAAQc,QAAQxa,QAAQA,QACzBkhC,MACL31B,IAAU8yE,oBAAoBp+E,EAAIyZ,O,8BAmLtD2jE,EAAoB1C,EAAStvD,GACjCxqB,KAAKN,SAAS,CAAE88E,qBAAoB1C,WAAWtvD,K,qCAGpCkzD,EAAc7kE,EAAS2R,GAC7B3R,EAKL7Y,KAAKN,SACD,CACIo6E,QAAS95E,KAAKjB,MAAM+6E,QAAQ19D,OAAO,SAAA9a,GAAC,OAAIA,EAAElC,KAAOs+E,IAAcvhE,OAAO,CAACtD,KAE3E2R,GARIA,GAAUA,M,iCAYXsvD,EAAStvD,GACO,IAAnBsvD,EAAQzjE,OAKZrW,KAAKN,SAAS,CAAEo6E,QAASA,EAAQ39D,OAAOnc,KAAKjB,MAAM+6E,UAAYtvD,GAJvDA,GAAUA,M,qCAOPsvD,EAASgB,EAAUtwD,GACP,IAAnBsvD,EAAQzjE,OAKZrW,KAAKN,S,uVAAL,EAAgBo6E,QAAS95E,KAAKjB,MAAM+6E,QAAQ39D,OAAO29D,IAAagB,GAAYtwD,GAJpEA,GAAUA,M,oCAORtP,EAAasP,GAAW,IAC1BsvD,EAAY95E,KAAKjB,MAAjB+6E,QACR,GAAuB,IAAnBA,EAAQzjE,OAAZ,CAKA,IAAMuB,EAAM,IAAInB,IAAIyE,EAAYtD,IAAI,SAAAtW,GAAC,MAAI,CAACA,EAAGA,MAC7CtB,KAAKN,SAAS,CAAEo6E,QAASA,EAAQ19D,OAAO,SAAA9a,GAAC,OAAKsW,EAAIhB,IAAItV,EAAElC,OAAQorB,QALxDA,GAAUA,M,uCAyTL3R,EAAS8kE,EAAaC,GACnC,IAAK/kE,EAAS,OAAO,EADuB,IAGpC5G,EAA2C4G,EAA3C5G,QAASif,EAAkCrY,EAAlCqY,KAAMhG,EAA4BrS,EAA5BqS,eAA4BrS,EAAZc,QAEvC,QAAIikE,MAIAh9D,YAAc3O,IAKd0rE,IACCE,aAAiBF,IACdzyD,IAAmByyD,EAAYzyD,gBAC/BgG,EAAOysD,EAAYzsD,KAAO4sD,Q,sCAItBjlE,EAAS8kE,EAAaC,GAClC,GAAIA,EACA,OAAO,EAGX,IAAM1sD,EAAO,IAAIE,KAAoB,IAAfvY,EAAQqY,MACxB6sD,EAAWJ,EAAc,IAAIvsD,KAAwB,IAAnBusD,EAAYzsD,MAAeA,EAEnE,OACIA,EAAK8sD,gBAAkBD,EAASC,eAChC9sD,EAAKk8C,aAAe2Q,EAAS3Q,YAC7Bl8C,EAAKs6C,YAAcuS,EAASvS,Y,+BAQ1B,IAAD,OACG36D,EAAW7Q,KAAKP,MAAhBoR,OADH,EAEqF7Q,KAAKjB,MAAvF+6E,EAFH,EAEGA,QAAS0C,EAFZ,EAEYA,mBAAoB/mD,EAFhC,EAEgCA,aAAc8kD,EAF9C,EAE8CA,gBAAiBQ,EAF/D,EAE+DA,kBAmDpE,OA7CA/6E,KAAKs8E,SAASx9C,QACd9+B,KAAKsrB,SAAWmK,EACV,KACAqkD,EAAQliE,IAAI,SAACtW,EAAGqV,GACZ,IAAMgnE,EAAchnE,EAAI,EAAImjE,EAAQnjE,EAAI,GAAK,KACvCsnE,EAActnE,EAAImjE,EAAQzjE,OAAS,EAAIyjE,EAAQnjE,EAAI,GAAK,KAExDiqC,EAAW,EAAKs9B,gBAAgB58E,EAAGq8E,EAAmB,IAANhnE,GAElDwnE,EAAI,KACR,GAAIN,aAAiBv8E,GACjB68E,EACI,kBAAC,GAAD,CACIh7E,IAAG,kBAAa7B,EAAE2Q,QAAf,uBAAqC3Q,EAAElC,IAC1C0e,IAAK,SAAA6G,GAAE,OAAI,EAAK23D,SAAShhE,IAAI3E,EAAGgO,IAChC9T,OAAQvP,EAAE2Q,QACV+U,UAAW1lB,EAAElC,GACbw2E,oBAAqB4G,IAAuBl7E,EAAElC,SAGnD,CACH,IAAMmhB,EAAY,EAAK69D,iBAAiB98E,EAAGq8E,EAAmB,IAANhnE,GAClD0nE,EAAgB,EAAKD,iBAAiBH,EAAa38E,GAAG,GAEtDu0E,GAAYoI,GAAeJ,aAAiBI,IAAgBI,EAElEF,EACI,kBAAC,GAAD,CACIh7E,IAAG,kBAAa7B,EAAE2Q,QAAf,uBAAqC3Q,EAAElC,IAC1C0e,IAAK,SAAA6G,GAAE,OAAI,EAAK23D,SAAShhE,IAAI3E,EAAGgO,IAChC9T,OAAQvP,EAAE2Q,QACV+U,UAAW1lB,EAAElC,GACby5B,aAAcv3B,EAAEq3B,cAChBpY,UAAWA,EACXs1D,SAAUA,EACVD,oBAAqB4G,IAAuBl7E,EAAElC,GAC9CwhD,SAAUA,IAKtB,OAAOu9B,IAKb,yBACIl+E,UAAWuO,IAAW,gBAAiB,CACnC,iCAAkC+rE,IAEtC3M,YAAa5tE,KAAKy8E,qBAClB,yBAAK3+D,IAAK9d,KAAK4rB,QAAS3rB,UAAU,wBAAwB0sB,SAAU3sB,KAAK2rB,cACrE,yBAAK1rB,UAAU,sBACf,yBAAK6d,IAAK9d,KAAKk1C,SAAUj1C,UAAU,uBAC9BD,KAAKsrB,WAGd,kBAAC,GAAD,CAAWza,OAAQA,IACnB,kBAAC,GAAD,MACCkqE,GACG,kBAAC,GAAD,CAAkBj9D,IAAK9d,KAAK68E,oBAAqBluE,QAAS3O,KAAK08E,wBAEnE,kBAAC,GAAD,MACA,kBAAC,GAAD,U,gDA3tCoBj9E,EAAOV,GACnC,OAAIU,EAAMoR,SAAW9R,EAAMiV,YAAcvU,EAAMunB,YAAcjoB,EAAMs6B,cACxD,CACHrlB,WAAYvU,EAAMoR,OAClBwoB,cAAe55B,EAAMunB,UACrByO,cAAc,EACd8kD,iBAAiB,EACjBiC,mBAAoB/8E,EAAMoR,SAAW9R,EAAMiV,WAAa,EAAIjV,EAAMy9E,mBAClEzB,kBACIt7E,EAAMoR,SAAW9R,EAAMiV,aAAejV,EAAMg8E,mBAAqBh8E,EAAMk7E,aAAa5jE,OAAS,GACjG4jE,aAAcx6E,EAAMoR,SAAW9R,EAAMiV,WAAa,GAAKjV,EAAMk7E,cAI9D,S,GA5CY15E,IAAMC,W,0CChB3B89E,G,2MACFv/E,MAAQ,CACJ2iC,SAAU,M,EAGd4oB,gBAAkB,SAAApnD,GACd,EAAK0uD,WAAW1uD,EAAMy+B,gB,EAG1BiwB,WAAa,SAAAlwB,GACT,EAAKhiC,SAAS,CAAEgiC,c,EAGpB53B,YAAc,WACV,EAAKpK,SAAS,CAAEgiC,SAAU,Q,EAG9BhpB,eAAiB,WACb,EAAK5O,cADc,IAGXwI,EAAM,EAAK7S,MAAX6S,EAEFqG,EAAO,EAAK4lE,gBAAgBtgB,KAAaugB,YAC1C7lE,IAELrE,GAAKqE,GAEL,EAAKC,sBAAsBtG,EAAE,iB,EAGjCisE,gBAAkB,SAAAC,GACd,IAAKA,EAAY,MAAO,GADI,IAGpBzsC,EAASysC,EAATzsC,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMjvB,EAAoBvM,KAAY5L,IAAI,YAE1C,OAAQmY,EAAoBA,EAAkB1Z,MAAQ,yBAA2B,eAAiB2oC,G,EAGtGn5B,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAKpZ,MAAxCqZ,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIlW,IAAI,QACJmW,aAAW,QACXC,MAAM,UACNtZ,UAAU,4BACV0O,QAAS,kBAAMoK,EAAcC,KAC7B,kBAACjK,EAAA,EAAD,W,EAMhB0vE,YAAc,WACV,EAAK30E,cAEL,IAAM6O,EAAO,EAAK4lE,gBAAgBtgB,KAAaugB,YAC/C,GAAK7lE,EAAL,CAEAtZ,IAAgBgI,aAAa,CACzB,QAAS,yBACTm3E,WAAY,OAGhB,IAAMzkE,EAAsB,CACxB,QAAS,mBACTtO,KAAM,CACF,QAAS,gBACTA,KAAMkN,EACN2B,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,GAGjBpC,aAAQsB,K,wEAGF,IAAD,EACoB/Z,KAAKP,MAAtB6S,EADH,EACGA,EAAGrS,EADN,EACMA,UACHyhC,EAAa1hC,KAAKjB,MAAlB2iC,SAER,OACI,oCACI,kBAACroB,EAAA,EAAD,CACIpZ,UAAWA,EACXqZ,aAAW,QACXiE,KAAM2L,QAAQwY,GACd/yB,QAAS3O,KAAKsqD,iBACd,kBAACrb,GAAD,OAEJ,kBAACpM,GAAA,EAAD,CACIzjC,GAAG,cACHsiC,SAAUA,EACVnkB,KAAM2L,QAAQwY,GACdoB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBlK,QAAS3d,KAAK8J,aACd,kBAACke,GAAA,EAAD,CAAUrZ,QAAS3O,KAAK0Y,gBACpB,kBAACmJ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,eAE7B,kBAAC0V,GAAA,EAAD,CAAUrZ,QAAS3O,KAAKy+E,aACpB,kBAAC58D,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASzP,EAAE,0B,GA5Hb/R,IAAMC,WA2I3B8d,GALCC,YACZtK,cACAuK,eAGWF,CAAQggE,ICxIjBI,I,mBACF,WAAYj/E,GAAQ,IAAD,8BACf,4CAAMA,KAiDVk/E,iCAAmC,SAAAtuE,GAAW,IAClCmuE,EAAevgB,KAAfugB,WAER,EAAK9+E,SAAS,CAAE8+E,gBArDD,EAwDnBI,6BAA+B,SAAAvuE,GAAW,IAC9BmuE,EAAenuE,EAAfmuE,WAQR,GANA,EAAK9+E,SAAS,CAAE8+E,cAAc,WAC1B30E,WAAW,WACP,EAAK8hB,gBACN,KAGH6yD,EAAY,CACZ,IAAMtsE,EAAQxH,IAAUyH,WACxB0sE,YAAsB3sE,EAAOssE,KAnElB,EAuEnB10E,YAAc,WACVzK,IAAgBgI,aAAa,CACzB,QAAS,yBACTm3E,WAAY,QA1ED,EA8EnBzvC,WAAa,WAAO,IACRyvC,EAAe,EAAKz/E,MAApBy/E,WACR,GAAKA,EAAL,CAFe,IAIPM,EAAiBN,EAAjBM,aAERz/E,IAAgBC,KAAK,CACjB,QAAS,mBACTy/E,OAAQP,EAAWp/E,GACnB0/E,cAAeA,IAGnB,EAAKh1E,gBA1FU,EA6FnBguE,mBAAqB,SAAAC,GAAc,IAGzB54E,EAFiB,EAAKJ,MAApBy/E,WACA/f,SACiBp/C,KAAK,SAAA/d,GAAC,OAAIA,EAAEnC,QAAQC,KAAO24E,IACpD,GAAK54E,EAAL,CAEA,IAAM+S,EAAQxH,IAAUyH,WACxB6lE,YAAmB9lE,EAAO/S,EAAS,MAEX,EAAKi5E,oBAAoBL,GACjCh2E,QAAQ,SAAAT,GACpB02E,YAAmB9lE,EAAO5Q,EAAG,UAxGlB,EA4GnB82E,oBAAsB,SAAAL,GAAc,IACxByG,EAAe,EAAKz/E,MAApBy/E,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvB/f,EAAa+f,EAAb/f,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAM4Z,EAAU,GACVvuD,EAAQ20C,EAAS10C,UAAU,SAAAzoB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO24E,IACvD,IAAe,IAAXjuD,EAAc,MAAO,GAEzB,IACMwuD,EAAM52E,KAAKyM,MAAM2b,EADE,GAEnByuD,EAASzuD,EAFU,EAInB0uD,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ9gE,KAXS,EAWeihE,EAAUE,GAE9CL,EAAQ9gE,KAba,EAaWihE,EAAUD,GACtCI,EAdiB,GAejBN,EAAQ9gE,KAfS,EAeeihE,EAAUG,IAI9CD,GAAc,GACdL,EAAQ9gE,KApBa,EAoBW+gE,EAAMI,GAEtCC,EAtBqB,GAuBrBN,EAAQ9gE,KAvBa,EAuBW+gE,EAAMK,GAGtCF,EAAU/2E,KAAKk3E,KAAKna,EAASpoD,OA1BR,KA2BjBqiE,GAAc,GACdL,EAAQ9gE,KA5BS,EA4BekhE,EAAUC,GAE9CL,EAAQ9gE,KA9Ba,EA8BWkhE,EAAUF,GACtCI,EA/BiB,GAgCjBN,EAAQ9gE,KAhCS,EAgCekhE,EAAUE,IAI3CN,EAAQzgE,IAAI,SAAAjB,GAAC,OAAI8nD,EAAS9nD,MA3JlB,EAiMnB/N,cAAgB,WAEZ,EAAKlJ,SAAS,CAAEP,QADA,OAEhBE,IAAgBgI,aAAa,CACzB,QAAS,6BACTlI,QAJY,OAMhB,EAAKi2E,WAAY,EACjB5vE,SAASgG,oBAAoB,UAAW,EAAK5C,gBAzM9B,EA4MnBu8D,iBAAmB,SAAAjiE,GACf,IAAM60E,EAAYzzE,OAAOpB,EAAMy+B,cAAckqB,QAAQksB,WAC/C54E,EAAU,EAAK05E,WAAWd,GAC3B54E,GAEA,EAAKi2E,YAEV,EAAK11E,SAAS,CAAEP,YAChBE,IAAgBgI,aAAa,CACzB,QAAS,6BACTlI,YAEJ,EAAK24E,mBAAmBC,KAxNT,EA2NnB/uE,gBAAkB,SAAA9F,GACd,IAAM60E,EAAYzzE,OAAOpB,EAAMy+B,cAAckqB,QAAQksB,WAC/C54E,EAAU,EAAK05E,WAAWd,GAChC,GAAK54E,EAcL,OAZA,EAAKO,SAAS,CAAEP,YAChBE,IAAgBgI,aAAa,CACzB,QAAS,6BACTlI,YAEJ,EAAK24E,mBAAmBC,GAExB,EAAK3C,WAAY,EACjB5vE,SAAS8F,iBAAiB,UAAW,EAAK1C,eAE1C1F,EAAM2B,iBACN3B,EAAM0B,mBACC,GA5OQ,EA+OnB+mB,aAAe,WACX,IAAMhS,EAAU,EAAKqlE,WAAW9kE,QAChC,GAAKP,EAAL,CAIA,IAAMslE,EAAYtlE,EAAQmK,aAAenK,EAAQoK,aAC3CV,EAAY47D,GAAmC,IAAtBtlE,EAAQ0J,UACjC67D,EAAeD,GAActlE,EAAQ0J,UAAY1J,EAAQoK,eAAkBpK,EAAQmK,aACnF+gB,EAASo6C,GAAatlE,EAAQ0J,UAAY,GAAM1J,EAAQ0J,UAAY1J,EAAQoK,aAAgBpK,EAAQmK,aAE1G,EAAKpkB,SAAS,CACV2jB,YACA67D,eACAr6C,aA1PJ,EAAKm6C,WAAaz+E,IAAM4c,YAExB,EAAKpe,MAAQ,CACTy/E,WAAYvgB,KAAaugB,WACzBzG,UAAW,EACXlzC,QAAQ,EACRxhB,WAAW,EACX67D,cAAc,GAVH,E,mFAcGtsE,EAAWC,EAAWsqB,GAAc,IAAD,EACYn9B,KAAKjB,MAA9Dy/E,EAD6C,EAC7CA,WAAYr/E,EADiC,EACjCA,QAAS0lC,EADwB,EACxBA,OAAQxhB,EADgB,EAChBA,UAAW67D,EADK,EACLA,aAEhD,OAAIV,IAAe3rE,EAAU2rE,aAIzBr/E,IAAY0T,EAAU1T,UAItB0lC,IAAWhyB,EAAUgyB,SAIrBxhB,IAAcxQ,EAAUwQ,WAIxB67D,IAAiBrsE,EAAUqsE,kB,0CAQ/BjhB,KAAantD,GAAG,yBAA0B9Q,KAAK4+E,8BAC/C3gB,KAAantD,GAAG,6BAA8B9Q,KAAK2+E,oC,6CAInD1gB,KAAaltD,IAAI,yBAA0B/Q,KAAK4+E,8BAChD3gB,KAAaltD,IAAI,6BAA8B/Q,KAAK2+E,oC,iCAwI7C5G,GAAY,IACXyG,EAAex+E,KAAKjB,MAApBy/E,WACR,IAAKA,EAAY,OAAO,KAFN,IAIV/f,EAAa+f,EAAb/f,SAEFwa,EAAexa,EAAS10C,UAAU,SAAAzoB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO24E,IAC9D,OAAyB,IAAlBkB,EAAsBxa,EAASwa,GAAgB,O,+BAmEhD,IAAD,OACG3mE,EAAMtS,KAAKP,MAAX6S,EADH,EAE4DtS,KAAKjB,MAA9Dy/E,EAFH,EAEGA,WAAYr/E,EAFf,EAEeA,QAAS0lC,EAFxB,EAEwBA,OAAQxhB,EAFhC,EAEgCA,UAAW67D,EAF3C,EAE2CA,aAChD,IAAKV,EAAY,OAAO,KAHnB,IAKG5/D,EAAkC4/D,EAAlC5/D,MAAO6/C,EAA2B+f,EAA3B/f,SAAUqgB,EAAiBN,EAAjBM,aAEnBn5D,EAAQ84C,EAAS7mD,IAAI,SAAAtW,GAAC,OACxB,yBACIrB,UAAU,0BACVkD,IAAK7B,EAAEnC,QAAQC,GACf85E,kBAAiB53E,EAAEnC,QAAQC,GAC3B4P,aAAc,EAAKm2D,iBACnB12D,YAAa,EAAKzF,iBAClB,kBAAC6pE,GAAA,EAAD,CACI1vE,IAAK7B,EAAEnC,QAAQC,GACfa,UAAU,kCACVd,QAASmC,EACTi4C,UAAU,EACVpvC,MAAM,EACNjK,YAAai5E,KACbC,SAAO,EACPh5E,OAAQC,KAAkB8+E,cAE9B,yBAAKl/E,UAAU,iCAAiCqB,EAAEtC,UAI1D,OACI,kBAAC,IAAD,CACIiB,UAAWuO,IACP,qBACA,CAAE,4BAA6Bq2B,GAC/B,CAAE,gCAAiCxhB,GACnC,CAAE,mCAAoC67D,IAE1C3hE,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAAS3d,KAAK8J,YACd8T,kBAAgB,gCAChBtO,QAAS,CAAEy4C,MAAO,6BAClB,kBAAC,IAAD,CACI9nD,UAAWuO,IAAW,2BAA4B,CAAE,8BAA+B0a,QAAQ/pB,KAC3F4wD,mBAAiB,GACjB,kBAAC12C,EAAA,EAAD,CACIC,aAAW,QACX3K,QAAS3O,KAAK8J,aACd,kBAACiF,EAAA,EAAD,OAEJ,kBAACiT,GAAA,EAAD,CAAYC,QAAQ,KAAK7iB,GAAG,gCAAgCa,UAAU,sCAAsCiiB,QAAM,GAC7GtD,GAEL,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CACId,IAAK9d,KAAKg/E,WACV1vE,QAAS,CAAEjF,KAAM,mCACjBqsE,YAAa12E,KAAK0J,gBAClBitE,WAAY32E,KAAKu1E,eACjB5oD,SAAU3sB,KAAK2rB,cACdhG,GAEL,kBAACxH,EAAA,EAAD,CAAele,UAAWuO,IAAW,6BAA8B,CAAE,8BAA+B0a,QAAQ/pB,MACxG,kBAACif,EAAA,EAAD,CAAQne,UAAU,mCAAmC46C,kBAAgB,EAAC54B,QAAQ,YAAY1I,MAAOulE,EAAe,YAAc,UAAWnwE,QAAS3O,KAAK+uC,YACnIz8B,EAAfwsE,EAAiB,iBAAsB,iBAG/C,kBAAChgF,GAAA,EAAD,CAAgBK,QAASA,S,GAtUXoB,IAAMC,YA8UtByT,iBAAkByqE,ICrIlBU,I,mBAjNX,WAAY3/E,GAAQ,IAAD,8BACf,4CAAMA,KA6CV4/E,2BAA6B,SAAAhvE,GAAW,IAC5ByrC,EAAc,EAAK/8C,MAAnB+8C,UACR,GAAKA,EAAL,CAFmC,IAI3Bt2C,EAAas2C,EAAbt2C,SACR,GAAKA,EAAL,CALmC,IAOjBiF,EAASjF,EAAnBA,SACR,GAAKiF,EAAL,CARmC,IAU3B7C,EAAWyI,EAAXzI,OAER,GAAI6C,EAAKrL,KAAOwI,EAAhB,CAIA,GAAI,EAAK03E,cACL,GAAI,EAAKA,cAAcxjC,YAAcA,EAEjC,GADa,IAAI1qB,KAAS,EAAKkuD,cAAc79E,KAClC,IAIP,YAHAoI,WAAW,WACP,EAAK0H,eACN,KAMf,EAAKA,mBA1EU,EA6EnBsqC,oCAAsC,SAAAxrC,GAAW,IACrCyrC,EAAc,EAAK/8C,MAAnB+8C,UACR,GAAKA,EAAL,CAF4C,IAIpCt2C,EAAas2C,EAAbt2C,SACR,GAAKA,EAAL,CAL4C,IAOpCsV,EAActV,EAAdsV,UACR,GAAKA,EAAL,CAR4C,IAUpCrQ,EAASqQ,EAATrQ,KACR,GAAKA,EAAL,CAX4C,IAapC7C,EAAWyI,EAAXzI,OAEJ6C,EAAKrL,KAAOwI,IAIhB,EAAK03E,cAAgB,CACjBxjC,YACAr6C,KAAM,IAAI2vB,MAEd,EAAK7f,oBApGU,EAuGnBguE,6BAA+B,SAAAlvE,GAAW,IAC9ByrC,EAAczrC,EAAdyrC,UAER,EAAKwjC,cAAgB,CACjBxjC,YACAr6C,KAAM,IAAI2vB,MAEd,EAAK1xB,SAAS,CACVo8C,eA/GW,EAmHnB0jC,oCAAsC,SAAAnvE,GAClC,EAAKkB,eApHU,EAuHnBihB,qBAAuB,SAAAniB,GACnB,EAAK3Q,SAAS,CACVmR,OAAQR,EAAOoiB,WACfzL,UAAW3W,EAAOw5B,iBA1HP,EA8HnBmyC,eAAiB,WACb,EAAKyD,aAAazD,kBA/HH,EAkInBO,cAAgB,WACZ,EAAKkD,aAAalD,iBAnIH,EAsInBN,gBAAkB,WACd,EAAKwD,aAAaxD,mBApIlB,EAAKl9E,MAAQ,CACT8R,OAAQukB,KAASsG,YACjB1U,UAAWoO,KAAS0U,eACpB41C,cAAe,EACf5jC,UAAW,KACX6jC,aAAc,MARH,E,mFAYG/sE,EAAWC,GAAY,IAAD,EACgB7S,KAAKjB,MAArD8R,EADgC,EAChCA,OAAQmW,EADwB,EACxBA,UAAW04D,EADa,EACbA,cAAe5jC,EADF,EACEA,UAC1C,OAAIjpC,EAAUhC,SAAWA,IAGrBgC,EAAUmU,YAAcA,IAGxBnU,EAAU6sE,gBAAkBA,GAG5B7sE,EAAUipC,YAAcA,M,0CAQ5B1mB,KAAStkB,GAAG,oCAAqC9Q,KAAKw/E,qCACtDpqD,KAAStkB,GAAG,qBAAsB9Q,KAAKwyB,sBACvC7gB,IAAUb,GAAG,6BAA8B9Q,KAAKu/E,8BAChD70E,IAAUoG,GAAG,2BAA4B9Q,KAAKq/E,4BAC9C30E,IAAUoG,GAAG,oCAAqC9Q,KAAK67C,uC,6CAIvDzmB,KAASrkB,IAAI,oCAAqC/Q,KAAKw/E,qCACvDpqD,KAASrkB,IAAI,qBAAsB/Q,KAAKwyB,sBACxC7gB,IAAUZ,IAAI,6BAA8B/Q,KAAKu/E,8BACjD70E,IAAUqG,IAAI,2BAA4B/Q,KAAKq/E,4BAC/C30E,IAAUqG,IAAI,oCAAqC/Q,KAAK67C,uC,+BA+FlD,IAAD,SAiCoC77C,KAAKjB,MAAtC8R,EAjCH,EAiCGA,OAAQmW,EAjCX,EAiCWA,UAAW80B,EAjCtB,EAiCsBA,UAEvBz1C,EAAQ,KACRwL,EAAM,KACV,GAAIiqC,EAAW,CAAC,IACJt2C,EAAas2C,EAAbt2C,SACR,GAAIA,EAAU,CAAC,IACHsV,EAA8BtV,EAA9BsV,UAAqBrQ,EAASjF,EAAnBA,SACfiF,IACAoH,EAAMC,YAAOrH,KAGZoH,GAAOiJ,IACRjJ,EAAMC,YAAOgJ,EAAUrQ,OAI/BpE,EAAQ,CACJgqB,gBAAiBxe,EAAG,cAAUA,EAAV,KAAmB,MAM/C,OACI,yBAAK5R,UAAU,iBAAiBoG,MAAOA,GACnC,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQwK,OAAQA,IAChB,kBAAC,GAAD,CAAciN,IAAK,SAAAA,GAAG,OAAK,EAAK2hE,aAAe3hE,GAAMjN,OAAQA,EAAQmW,UAAWA,IAChF,kBAAC,GAAD,CAAQnW,OAAQA,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA3MYrQ,cCXtBo/E,GAAYr/E,IAAMs/E,cAAc,MAEvBD,MAER,SAASE,GAAOt/E,GAAY,IACzBu/E,EADwB,iLAEhB,IAAD,OACL,OAAO,kBAACH,GAAUI,SAAX,KAAqB,SAAA52E,GAAK,OAAI,kBAAC5I,EAAD,eAAWy/E,GAAI72E,GAAW,EAAK3J,cAH9C,GACJc,IAAMC,WAOhC,OAFAu/E,EAAYj9E,YAAZ,iBAAoCC,YAAevC,GAAnD,KAEOu/E,ECXX,SAASG,GAASzgF,GACd,OCqWG,SAAqB0gF,GACxB,IAAKA,EACD,OAAO,KAGX,GAAIA,aAAoBC,OACpB,OAAOD,EAGX,OAAQA,EAAS,UACb,IAAK,iBAAmB,IACZpuC,EAAeouC,EAAfpuC,KAAMtmC,EAAS00E,EAAT10E,KAEd,OAAO,kBAAC,GAAD,CAAYA,KAAMA,EAAMsmC,KAAMA,IAEzC,IAAK,eAAiB,IACVtmC,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAMA,KAAMA,IAEvB,IAAK,uBAAyB,IAClB40E,EAAwBF,EAAxBE,cAAe50E,EAAS00E,EAAT10E,KAEvB,OAAO,kBAAC,GAAD,CAAc60E,aAAcD,EAAe50E,KAAMA,IAE5D,IAAK,gBAAkB,IACXA,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAOA,KAAMA,IAExB,IAAK,eAAiB,IACVjG,EAA4B26E,EAA5B36E,SAAU0L,EAAkBivE,EAAlBjvE,OAAQhC,EAAUixE,EAAVjxE,MAE1B,OAAO,kBAAC,GAAD,CAAM1J,SAAUA,EAAU0L,OAAQA,EAAQhC,MAAOA,IAE5D,IAAK,iBAAmB,IACZzD,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAQA,KAAMA,IAEzB,IAAK,iBAAmB,IACZA,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAQA,KAAMA,IAEzB,IAAK,sBAAwB,IACjBkhE,EAAuBwT,EAAvBxT,aAAclhE,EAAS00E,EAAT10E,KAEtB,OAAO,kBAAC,GAAD,CAAauX,YAAa2pD,EAAclhE,KAAMA,IAEzD,IAAK,gBAAkB,IACXA,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAOA,KAAMA,IAExB,IAAK,wBAA0B,IACnBA,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAeA,KAAMA,IAEhC,IAAK,oBAAsB,IACfA,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAWA,KAAMA,IAE5B,IAAK,sBAAwB,IACjBA,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAaA,KAAMA,IAE9B,IAAK,YAAc,IACP80E,EAAUJ,EAAVI,MAER,OAAO,kBAAC,GAAD,CAAOA,MAAOA,IAEzB,IAAK,oBAAsB,IACf90E,EAAS00E,EAAT10E,KAER,OAAO,kBAAC,GAAD,CAAWA,KAAMA,IAE5B,IAAK,cAAgB,IACTA,EAAc00E,EAAd10E,KAAM4hB,EAAQ8yD,EAAR9yD,IAEd,OAAO,kBAAC,GAAD,CAAK5hB,KAAMA,EAAM4hB,IAAKA,IAIrC,MAAM,IAAN,OAAW8yD,EAAS,SAApB,KD5bOK,CAAY/gF,EAAMgM,MAG7By0E,GAASpzD,UAAY,CACjBrhB,KAAMshB,KAAU0zD,OAAOxzD,YAGZizD,UEAAQ,OARf,SAAgBjhF,GACZ,OAAO,uBAAGL,GAAIK,EAAMsyC,QCwBT4uC,OAxBf,SAAiBlhF,GAAQ,IACbgM,EAAiBhM,EAAjBgM,KAAMm1E,EAAWnhF,EAAXmhF,OAERC,GAAWC,GAAYr1E,GACvBs1E,GAAcD,GAAYF,GAChC,OAAKC,GAAYE,EAGb,oCACKF,GAAW,kBAAC,GAAD,CAAUp1E,KAAMA,IAC3Bs1E,GACG,8BACI,kBAAC,GAAD,CAAUt1E,KAAMm1E,MAPI,MCqBzBzN,OAzBf,SAAmB1zE,GAAQ,IACfw4D,EAAwDx4D,EAAxDw4D,UAAW+oB,EAA6CvhF,EAA7CuhF,MAAO3mE,EAAsC5a,EAAtC4a,QAAwBkO,GAAc9oB,EAA7BwhF,cAA6BxhF,EAAd8oB,WAElD,OACI,gCACI,kBAAC,KAAD,CACI03D,IAAI,EACJiB,UAAWF,EACX/oB,UAAWA,EACX/3D,YAAaihF,IACb54D,UAAWA,IAEf,kBAAC,GAAD,CAAS9c,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,W,SCe1CQ,OA3Bf,SAAoB3hF,GAAQ,IAChB4hF,EAAwB5hF,EAAxB4hF,OAAQC,EAAgB7hF,EAAhB6hF,YAEVC,GAAaT,GAAYO,GACzBG,EAAUF,EAAc,EAC9B,IAAKC,IAAcC,EAAS,OAAO,KAEnC,IAAMh/E,EAAI8+E,EAAc,EAAI,IAAIlwD,KAAmB,IAAdkwD,GAAsB,KAE3D,OACI,iCACKC,GACG,uBAAGE,IAAI,UACH,kBAAC,GAAD,CAAUh2E,KAAM41E,KAGvBE,GAAaC,GAAW,WACxBA,GAAW,0BAAME,SAAUl/E,EAAEm/E,eAAgBC,aAAWp/E,EAAG,mBCAzDq/E,OAnBf,SAAoBpiF,GAAQ,IAChBgM,EAAiBhM,EAAjBgM,KAAMm1E,EAAWnhF,EAAXmhF,OACd,OACI,oCACI,kBAAC,GAAD,CAAUn1E,KAAMA,IACfm1E,GACG,8BACI,kBAAC,GAAD,CAAUn1E,KAAMm1E,OCWrBd,UAhBf,SAAiBrgF,GAAQ,IACbqiF,EAA4BriF,EAA5BqiF,WAAYznE,EAAgB5a,EAAhB4a,QAAS4lE,EAAOxgF,EAAPwgF,GAE7B,OACI,yBAAKhgF,UAAU,WACV6hF,EAAWlqE,IAAI,SAACtW,EAAGwoB,GAAJ,OAAci4D,GAAazgF,EAAG2+E,EAAIn2D,KAClD,kBAAC,GAAD,CAASre,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,YCPzD,SAASoB,GAAMviF,GACX,OAAOsiF,GAAatiF,EAAMwiF,MAAOxiF,EAAMwgF,IAG3C+B,GAAMl1D,UAAY,CACdm1D,MAAOl1D,KAAU0zD,OAAOxzD,YAGb6yD,UAAOkC,ICYPlC,UAnBf,SAAiBrgF,GAAQ,IACbynD,EAAmCznD,EAAnCynD,OAAQ46B,EAA2BriF,EAA3BqiF,WAAYI,EAAeziF,EAAfyiF,OAAQjC,EAAOxgF,EAAPwgF,GAEpC,OACI,6BAAS1iE,KAAM2kE,GACX,iCACI,kBAAC,GAAD,CAAUz2E,KAAMy7C,KAEnB46B,EAAWlqE,IAAI,SAACtW,EAAGwoB,GAAJ,OAAci4D,GAAazgF,EAAG2+E,EAAIn2D,QCN/CxD,OAJf,WACI,OAAO,8B,UCDL67D,G,YACF,WAAY1iF,GAAQ,IAAD,8BACf,4CAAMA,KA6BV2iF,aAAe,SAAA3iF,GAEX,IAAIA,EAAMoS,IAAV,CAEA,IAAM8H,EAAUla,EAAMka,SAAWla,EAAMmrC,SACvC,GAAKjxB,EAAL,CAEA,IAAM0oE,EAAQ,EAAKC,SAASpoE,QAC5B,GAAKmoE,EAAL,CAOA,IAAME,EAAMF,EAAMG,gBACbD,IAEkB,kBAAZ5oE,GAIP4oE,EAAIhlE,OACJglE,EAAIE,MAAM9oE,GACV4oE,EAAIxzD,UAGJwzD,EAAIhlE,OACJglE,EAAIE,MAAM,gCACVF,EAAIxzD,QACJ64C,KAAS8a,OAAO/oE,EAAS4oE,EAAI38E,eAAe,sBA5DjC,EAiEnB+8E,uBAAyB,WACrB,GAAK,EAAKljF,MAAMmjF,iBAAhB,CACA,IAAMP,EAAQ,EAAKC,SAASpoE,QAC5B,GAAKmoE,EAAL,CAOA,IAAME,EAAMF,EAAMG,gBAClB,GAAKD,EAAL,CAEA,IAAIM,EAAe,KAOnB,GANA,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAO9gF,QAAQ,SAAA4zE,GACnD,IAAIkN,EAAJ,CACA,IAAMC,EAAQP,EAAIQ,qBAAqBpN,GACjCmN,GAASA,EAAMzsE,SACrBwsE,EAAeC,EAAM,OAEpBD,EAAL,CAIA,IAAMG,EAAuBx9E,SAASuP,cAAc,UACpDiuE,EAAqBlkE,KAAO,kBAC5BkkE,EAAqBnxE,IAAM,EAAKpS,MAAMmjF,iBACtCC,EAAar2E,YAAYw2E,QANrBruE,QAAQC,MAAM,8CAtFH,EA+FnBhB,OAAS,WACL,EAAK+uE,0BAhGU,EAqGnBM,aAAe,SAAAxjF,GACX,IAAM4iF,EAAQ,EAAKC,SAASpoE,QACvBmoE,GACD5iF,EAAMyjF,qBACNC,yBAAiB1jF,EAAM2jF,qBAAsBf,IAtGjD,EAAKC,SAAW/hF,IAAM4c,YAHP,E,iFAQfnd,KAAKoiF,aAAapiF,KAAKP,OACvBO,KAAKijF,aAAajjF,KAAKP,S,6CAMvB,IAAM4iF,EAAQriF,KAAKsiF,SAASpoE,QAC5B,GAAKmoE,EAAL,CAJmB,IAMXgB,EAAkBhB,EAAlBgB,cACHA,GAELA,EAAcC,qB,gDAGQ1wE,GAEtB5S,KAAKoiF,aAAaxvE,GAClB5S,KAAKijF,aAAarwE,K,+BAkFZ,IAAD,EAC8C5S,KAAKP,MAAhDoS,EADH,EACGA,IAAKzS,EADR,EACQA,GAAImkF,EADZ,EACYA,YAAatjF,EADzB,EACyBA,UAAWoG,EADpC,EACoCA,MACzC,OACI,4BACIyX,IAAK9d,KAAKsiF,SACVzwE,IAAKA,EACLzS,GAAIA,EACJmkF,YAAaA,EACbtjF,UAAWA,EACXoG,MAAOA,EACPuN,OAAQ5T,KAAK4T,a,GAxHDrT,IAAMC,WAkJlC2hF,GAAc/wE,aAAe,CAEzB8xE,qBAAqB,EACrBE,qBAAsB,GAStBR,iBAAkB,iGAElBW,YAAa,EACbl9E,MAAO,CACH6I,MAAO,OACP2X,UAAW,KAIJs7D,UC7EAqB,G,2MAxFXzkF,MAAQ,G,mFAgBJiB,KAAKyjF,oB,yCAGU5jF,EAAWC,EAAWC,GAAW,IAAD,EACzBC,KAAKP,MAAnB4tB,EADuC,EACvCA,IAAKq2D,EADkC,EAClCA,KAETr2D,IAAQxtB,EAAUwtB,KAAOq2D,IAAS7jF,EAAU6jF,MAC5C1jF,KAAKyjF,oB,wCAIM,IAAD,EACQzjF,KAAKP,MAAnB4tB,EADM,EACNA,IAAKq2D,EADC,EACDA,KAEb1jF,KAAKN,SAAS,CACV2tB,MACAq2D,W,+BAIE,IAAD,EACiB1jF,KAAKjB,MAAnBsuB,EADH,EACGA,IAAKq2D,EADR,EACQA,KADR,EAE2D1jF,KAAKP,MAA7DyP,EAFH,EAEGA,MAAOgC,EAFV,EAEUA,OAAQmJ,EAFlB,EAEkBA,QAASspE,EAF3B,EAE2BA,YAAaC,EAFxC,EAEwCA,eAEvCjjF,EAAU,CACZkjF,UAAWD,GAGTE,EAAiB50E,EAAQ,GAAKgC,EAAS,EACvC6yE,EAAY76D,QAAQmE,IAAQnE,QAAQw6D,GAE1C,OACI,gCACKK,GACG,oCACKD,EACG,4BACIjyE,IAAKwb,GAAY,KACjB22D,OAAQ32D,EAAM,KAAOq2D,EACrBx0E,MAAOA,EAAQ,EAAIA,EAAQ,KAC3BgC,OAAQA,EAAS,EAAIA,EAAS,KAC9B+yE,gBAAiBN,EACjBE,UAAWD,EAAiB,OAAS,KACrCL,YAAa,IAGjB,kBAAC,GAAD,CACI5pE,QAAS+pE,EACT7xE,IAAKwb,EACL+1D,qBAAsBziF,EACtB0F,MAAO,CAAE6I,MAAO,WAKhC,kBAAC,GAAD,CAASzD,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,a,gDArEzBnhF,EAAOV,GACnC,OAAIU,EAAM4tB,MAAQtuB,EAAMmlF,SAAWzkF,EAAMikF,OAAS3kF,EAAMolF,SAC7C,CACH92D,IAAK,KACLq2D,KAAM,KACNQ,QAASzkF,EAAM4tB,IACf82D,SAAU1kF,EAAMikF,MAIjB,S,GAbQnjF,IAAMC,WC2Bds/E,UAxBf,SAAsBrgF,GACkDA,EAA5D4tB,IADkB,IACbg0D,EAAuD5hF,EAAvD4hF,OAAqBnwD,GAAkCzxB,EAA/C2kF,YAA+C3kF,EAAlCyxB,MAAM4wD,EAA4BriF,EAA5BqiF,WAAYznE,EAAgB5a,EAAhB4a,QAAS4lE,EAAOxgF,EAAPwgF,GAE7D,OACI,oCACI,gCACK/2D,QAAQm4D,IAAW,4BAAKA,GACzB,kBAAC,GAAD,CAAYA,OAAQ,KAAMC,YAAapwD,IACtC4wD,EAAWlqE,IAAI,SAACtW,EAAGwoB,GAAJ,OAAci4D,GAAazgF,EAAG2+E,EAAIn2D,KAClD,kBAAC,GAAD,CAASre,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,aCgB9CyD,I,kNA7BXtlF,MAAQ,CACJ6V,MAAO,KACP0vE,UAAW,M,iFAGG1vE,EAAO0vE,GACrBtkF,KAAKN,SAAS,CAAEkV,QAAO0vE,gB,+BAGjB,IACE15C,EAAa5qC,KAAKP,MAAlBmrC,SADH,EAEwB5qC,KAAKjB,MAA1B6V,EAFH,EAEGA,MAAO0vE,EAFV,EAEUA,UACf,OAAI1vE,GAAS0vE,EAEL,yBAAKrkF,UAAU,iBACX,8BACI,uCACQ2U,EAAMm9B,KADd,aACuBn9B,EAAMiE,SACxByrE,EAAUC,kBAOxB35C,M,GA1BYrqC,IAAMC,YCalB0+D,OAZf,SAAgBz/D,GACZ,OACI,gCACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAM+kF,WCSnB9gB,OAZf,SAAgBjkE,GACZ,OACI,4BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMynD,WCUnBu9B,OAbf,SAAgBhlF,GAAQ,IACZilF,EAAWjlF,EAAXilF,OACR,OACI,wBAAIzkF,UAAU,UACV,kBAAC,GAAD,CAAUwL,KAAMi5E,MCMb5E,UATf,SAAkBrgF,GACd,OAAO,wBAAIklF,cAAallF,EAAM+vB,OAAQ/vB,EAAMqiF,WAAWlqE,IAAI,SAACtW,EAAGwoB,GAAJ,OAAci4D,GAAazgF,EAAG7B,EAAMwgF,GAAIn2D,QCYxF3D,OAdf,SAAc1mB,GACV,OACI,4BACKA,EAAMkmB,MAAM/N,IAAI,SAACtW,EAAGwoB,GAAJ,OACb,kBAAC,GAAD,CAAU3mB,IAAK2mB,EAAO0F,MAAOluB,EAAEkuB,MAAOsyD,WAAYxgF,EAAEsjF,kBCQrDC,OAZf,SAAmBplF,GACf,OACI,2BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCiBnBkjB,OAlBf,SAAelvB,GAAQ,IACXmS,EAAmCnS,EAAnCmS,MAAOyI,EAA4B5a,EAA5B4a,QAAckO,GAAc9oB,EAAnB4tB,IAAmB5tB,EAAd8oB,WAE7B,OACI,gCACI,kBAAC,KAAD,CAAY3W,MAAOA,EAAOZ,KAAM8zE,IAAe5kF,YAAaihF,IAAuB54D,UAAWA,IAC9F,kBAAC,GAAD,CAAS9c,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,WCK1CmE,OAbf,SAAsBtlF,GAClB,OACI,6BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCkBnBu5E,OArBf,SAAmBvlF,GAAQ,IACfgM,EAAiBhM,EAAjBgM,KAAMm1E,EAAWnhF,EAAXmhF,OACd,OACI,+BACI,kBAAC,GAAD,CAAUn1E,KAAMA,IACfm1E,GACG,8BACI,kBAAC,GAAD,CAAUn1E,KAAMm1E,OC4CrBqE,G,2MAhDX/gF,YAAc,SAAAhB,GACVA,EAAM2B,iBACN3B,EAAM0B,kBAFa,IAIXyoB,EAAQ,EAAK5tB,MAAb4tB,IAERhuB,IAAgBgI,aAAa,CACzB,QAAS,6BACTgmB,S,wEAIE,IAAD,EACoDrtB,KAAKP,MAAtD4hF,EADH,EACGA,OAAqBC,GADxB,EACWtzD,YADX,EACwBszD,aAAa1iE,EADrC,EACqCA,MAAOyO,EAD5C,EAC4CA,IAE3C7qB,EAAI8+E,EAAc,EAAI,IAAIlwD,KAAmB,IAAdkwD,GAAsB,KACrD4D,EAAyB7D,GAAU7+E,EACnC2iF,EAAgB3iF,GAAK6+E,EAE3B,OACI,4BACI,kBAAClzD,GAAA,EAAD,CAAUd,IAAKA,EAAK1e,QAAS3O,KAAKkE,aAC7B0a,GAEJumE,GACG,iCACK9D,EACA6D,GAA0B,WAC1B1iF,GAAK,0BAAMk/E,SAAUl/E,EAAEm/E,eAAgBC,aAAWp/E,EAAG,uB,GA7BjDjC,IAAMC,WC2BpB4kF,OA5Bf,SAAyB3lF,GACrB,OACI,oCACI,4BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMynD,UAE1B,wBAAIjnD,UAAU,oBACTR,EAAM4lF,SAASztE,IAAI,SAAAtW,GAAC,OACjB,kBAAC,GAAD,CACI6B,IAAK7B,EAAE+rB,IACPA,IAAK/rB,EAAE+rB,IACPzO,MAAOtd,EAAEsd,MACToP,YAAa1sB,EAAE0sB,YACfpc,MAAOtQ,EAAEsQ,MACTyvE,OAAQ//E,EAAE+/E,OACVC,YAAahgF,EAAEgkF,oBCExBxF,UAhBf,SAAmBrgF,GAAQ,IACfqiF,EAA4BriF,EAA5BqiF,WAAYznE,EAAgB5a,EAAhB4a,QAAS4lE,EAAOxgF,EAAPwgF,GAE7B,OACI,yBAAKhgF,UAAU,aACV6hF,EAAWlqE,IAAI,SAACtW,EAAGwoB,GAAJ,OAAci4D,GAAazgF,EAAG2+E,EAAIn2D,KAClD,kBAAC,GAAD,CAASre,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,YCI1C2E,OAZf,SAAmB9lF,GACf,OACI,4BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAM+lF,cCSnBC,OAZf,SAAkBhmF,GACd,OACI,4BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAM6f,aCSnBomE,OAZf,SAAejmF,GACX,OACI,4BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMmf,UCSnB+mE,OAZf,SAAclmF,GACV,OACI,2BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCUnBm6E,OAbf,SAAsBnmF,GAClB,OACI,uBAAGy1D,KAAI,iBAAYz1D,EAAM6gF,eACrB,kBAAC,GAAD,CAAU70E,KAAMhM,EAAMgM,SCSnBo6E,OAZf,SAAepmF,GACX,OACI,8BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SC0EnBq6E,G,2MAjEXjqC,oCAAsC,SAAAxrC,GAAW,IACrC7K,EAAa,EAAK/F,MAAlB+F,SACR,GAAKA,EAAL,CAF4C,IAIpCsV,EAActV,EAAdsV,UACR,GAAKA,EAAL,CAL4C,IAOpCrQ,EAASqQ,EAATrQ,KACR,GAAKA,EAAL,CAR4C,IAUpC7C,EAAWyI,EAAXzI,OAEJ6C,EAAKrL,KAAOwI,GAIhB,EAAK2J,kB,EAGT8tE,2BAA6B,SAAAhvE,GAAW,IAC5B7K,EAAa,EAAK/F,MAAlB+F,SACR,GAAKA,EAAL,CAEA,IAAMiF,EAAOjF,EAASA,SACtB,GAAKiF,EAAL,CALmC,IAO3B7C,EAAWyI,EAAXzI,OAEJ6C,EAAKrL,KAAOwI,GAIhB,EAAK2J,iB,mFAzCL7G,IAAUoG,GAAG,oCAAqC9Q,KAAK67C,qCACvDnxC,IAAUoG,GAAG,2BAA4B9Q,KAAKq/E,8B,6CAI9C30E,IAAUqG,IAAI,oCAAqC/Q,KAAK67C,qCACxDnxC,IAAUqG,IAAI,2BAA4B/Q,KAAKq/E,8B,0CAsC/BnwE,EAAOgC,GACvB,MAAM,6EAAN,OAAoFhC,EAApF,YAA6FgC,EAA7F,oB,+BAGM,IAAD,EAC+BlR,KAAKP,MAAjC+F,EADH,EACGA,SAAU0L,EADb,EACaA,OAAQhC,EADrB,EACqBA,MAC1B,IAAK1J,EAAU,OAAO,KAFjB,IAIGsV,EAA8BtV,EAA9BsV,UAAqBrQ,EAASjF,EAAnBA,SACbugF,EAAej0E,YAAOgJ,EAAYA,EAAUrQ,KAAO,MACnDoH,EAAMC,YAAOrH,GAEnB,OACI,yBACIoH,IAAKA,GAAOk0E,GAAgB/lF,KAAKgmF,oBAAoB,EAAG,GACxD92E,MAAOA,EAAQ,EAAIA,EAAQ,KAC3BgC,OAAQA,EAAS,EAAIA,EAAS,KAC9B2C,WAAW,EACXC,IAAI,S,GAhEDvT,IAAMC,WCWVylF,OAZf,SAAgBxmF,GACZ,OACI,2BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCSnBy6E,OAZf,SAAgBzmF,GACZ,OACI,8BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCUnB06E,OAbf,SAAqB1mF,GACjB,OACI,uBAAGy1D,KAAI,cAASz1D,EAAMujB,cAClB,kBAAC,GAAD,CAAUvX,KAAMhM,EAAMgM,SCJlC,SAAS26E,GAAM3mF,GACX,OAAOA,EAAMgM,KAGjB26E,GAAMt5D,UAAY,CACdrhB,KAAMshB,KAAUs5D,OAAOp5D,YAGZm5D,UCKAE,OAZf,SAAuB7mF,GACnB,OACI,6BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCSnB86E,OAZf,SAAmB9mF,GACf,OACI,6BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCSnB+6E,OAZf,SAAqB/mF,GACjB,OACI,6BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SCYnBi1E,OAff,SAAgBjhF,GAAQ,IACZsyC,EAAetyC,EAAfsyC,KAAMtmC,EAAShM,EAATgM,KAEd,OACI,uBAAGrM,GAAI2yC,GACFtmC,GAAQ,kBAAC,GAAD,CAAUA,KAAMA,MCStBg7E,OAdf,SAAehnF,GACX,OACI,oCACKA,EAAM8gF,MAAM3oE,IAAI,SAACtW,EAAGwoB,GAAJ,OACb,kBAAC,GAAD,CAAU3mB,IAAK2mB,EAAOre,KAAMnK,QCQ7BolF,OAZf,SAAmBjnF,GACf,OACI,6BACI,kBAAC,GAAD,CAAUgM,KAAMhM,EAAMgM,SC4BnBk7E,G,2MA5BXziF,YAAc,SAAAhB,GACVA,EAAM2B,iBACN3B,EAAM0B,kBAFa,IAIXyoB,EAAQ,EAAK5tB,MAAb4tB,IAERhuB,IAAgBgI,aAAa,CACzB,QAAS,6BACTgmB,S,wEAIE,IAAD,EACiBrtB,KAAKP,MAAnBgM,EADH,EACGA,KAAM4hB,EADT,EACSA,IAEd,OACI,kBAACc,GAAA,EAAD,CAAUd,IAAKA,EAAK1e,QAAS3O,KAAKkE,aAC9B,kBAAC,GAAD,CAAUuH,KAAMA,S,GAlBdlL,IAAMC,WC0BTs/E,UA1Bf,SAAergF,GAAQ,IACX4a,EAA8C5a,EAA9C4a,QAASusE,EAAqCnnF,EAArCmnF,MAAOC,EAA8BpnF,EAA9BonF,WAAYC,EAAkBrnF,EAAlBqnF,UAAW7G,EAAOxgF,EAAPwgF,GAE/C,OACI,2BAAO8G,QAASD,EAAY,GAAK,KAAME,OAAQH,EAAa,EAAI,IAC1D/F,GAAYzmE,IACV,iCACI,kBAAC,GAAD,CAAU5O,KAAM4O,KAGxB,+BACKusE,EAAMhvE,IAAI,SAAC0gE,EAAK2O,GACb,OAAO,wBAAI9jF,IAAK8jF,GAAW3O,EAAI1gE,IAAI,SAACtW,EAAGwoB,GAAJ,OAAci4D,GAAazgF,EAAG2+E,EAAIn2D,YCY1Eo9D,OAzBf,SAAmBznF,GAAQ,IACfgM,EAAoDhM,EAApDgM,KAAM07E,EAA8C1nF,EAA9C0nF,SAAUC,EAAoC3nF,EAApC2nF,QAASC,EAA2B5nF,EAA3B4nF,QAASp6B,EAAkBxtD,EAAlBwtD,MAAOq6B,EAAW7nF,EAAX6nF,OACjD,GAAIxG,GAAYr1E,GAAO,OAAO,KAE9B,IAAM87E,EAAa,CACfC,QAASJ,EACTK,QAASJ,EACTp6B,MAAOy6B,GAAuBz6B,GAC9Bq6B,OAAQK,GAAqBL,IAG3B3tE,EAAU,kBAAC,GAAD,CAAUlO,KAAMA,IAEhC,OAAO07E,EAAW,uBAAQI,EAAa5tE,GAAgB,uBAAQ4tE,EAAa5tE,I,UCOjElD,OAnBf,SAAahX,GAAQ,IACTolD,EAAsBplD,EAAtBolD,SAAUxqC,EAAY5a,EAAZ4a,QAElB,OACI,gCACI,kBAACutE,GAAA,EAAD,CAAU14E,MAAO24E,IAAmB32E,OAAQ42E,IAAoBjjC,SAAUA,IAC1E,kBAAC,GAAD,CAASp5C,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,WCW1CjjB,OAjBf,SAAel+D,GAAQ,IACX00D,EAA8B10D,EAA9B00D,MAAO95C,EAAuB5a,EAAvB4a,QAASkO,EAAc9oB,EAAd8oB,UAExB,OACI,gCACI,kBAAC,KAAD,CAAY4rC,MAAOA,EAAOj0D,YAAam0E,IAAoB9rD,UAAWA,IACtE,kBAAC,GAAD,CAAS9c,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,WCC1CmH,OAVf,SAAkBtoF,GACd,OAAO,+BCqBI2zE,OAnBf,SAAe3zE,GAAQ,IACXgE,EAAsDhE,EAAtDgE,MAAO4W,EAA+C5a,EAA/C4a,QAAiCkO,GAAc9oB,EAAtCuoF,aAAsCvoF,EAAxBwoF,SAAwBxoF,EAAd8oB,WAEhD,OACI,gCACI,kBAAC,KAAD,CAAY9kB,MAAOA,EAAOvD,YAAaihF,IAAuB54D,UAAWA,IACzE,kBAAC,GAAD,CAAS9c,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,WjDyClD,SAASsH,GAAqBh0B,EAAO75C,EAAS2mE,EAAO1O,EAAa6V,GAGrE,GAAKj0B,EAAL,CAKA,OAAQA,EAAM,UACV,IAAK,YAAc,IACEzpD,EAASypD,EAApB+D,UACN,IAAKxtD,EAAM,OAGX,GADAA,EAAOC,IAAUC,IAAIF,EAAKrL,KAAOqL,EAC7B09E,GAAc19E,EAAK8gC,MAAM68C,sBAEzB,YADA19E,IAAU8yE,oBAAoB/yE,EAAKrL,GAAI80D,GAEpC,GAAIi0B,GAAc19E,EAAKG,OAAOy9E,oBAEjC,YADA39E,IAAU49E,iBAAiB79E,EAAKrL,GAAI80D,GAGpCq0B,YAAS99E,EAAMypD,EAAOxpD,IAAU89E,oBAhB7B,EACG,EAeiE/9E,EAAKrL,KAGhFqpF,aAA4B,CACxBv0B,QACA75C,UACA2mE,QACA1O,gBAEJ,MAEJ,IAAK,QAAU,IACE7nE,EAASypD,EAAhBC,MACN,IAAK1pD,EAAM,OAGX,GADAA,EAAOC,IAAUC,IAAIF,EAAKrL,KAAOqL,EAC7B09E,GAAc19E,EAAK8gC,MAAM68C,sBAEzB,YADA19E,IAAU8yE,oBAAoB/yE,EAAKrL,GAAI80D,GAEpC,GAAIi0B,GAAc19E,EAAKG,OAAOy9E,oBAEjC,YADA39E,IAAU49E,iBAAiB79E,EAAKrL,GAAI80D,GAGpCq0B,YAAS99E,EAAMypD,EAAOxpD,IAAUg+E,gBAvC7B,EACG,EAsC6Dj+E,EAAKrL,KAG5EC,IAAgBgI,aAAa,CACzB,QAAS,0BACTirE,cACA0O,UAEJ,MAEJ,IAAK,QACDyH,aAA4B,CACxBv0B,QACA75C,UACA2mE,QACA1O,gBAEJ,MAEJ,IAAK,QAAU,IACE7nE,EAASypD,EAAhBzwD,MACN,IAAKgH,EAAM,OAGX,GADAA,EAAOC,IAAUC,IAAIF,EAAKrL,KAAOqL,EAC7B09E,GAAc19E,EAAK8gC,MAAM68C,sBAEzB,YADA19E,IAAU8yE,oBAAoB/yE,EAAKrL,GAAI80D,GAEpC,GAAIi0B,GAAc19E,EAAKG,OAAOy9E,oBAEjC,YADA39E,IAAU49E,iBAAiB79E,EAAKrL,GAAI80D,GAGpCq0B,YAAS99E,EAAMypD,EAAOxpD,IAAUi+E,gBAtE7B,EACG,EAqE6Dl+E,EAAKrL,KAG5EqpF,aAA4B,CACxBv0B,QACA75C,UACA2mE,QACA1O,kBAOT,SAASyP,GAAaf,EAAOf,GAAsB,IAAlB98E,EAAiB,4DAAXmwC,EAC1C,IAAK0tC,EAAO,OAAO,KAEnB,IAAI1zE,EAAU,KACd,OAAQ0zE,EAAM,UACV,IAAK,kBACD1zE,EAAU,kBAAC,GAAD,CAAQykC,KAAMivC,EAAMjvC,OAC9B,MAEJ,IAAK,qBACDzkC,EACI,kBAAC,GAAD,CACI0zE,MAAOA,EACP3mE,QAAS2mE,EAAM3mE,QACf49C,UAAW+oB,EAAM/oB,UACjB+vB,aAAchH,EAAMC,cACpB14D,UAAW,kBAAM2/D,GAAqBlH,EAAM/oB,UAAW+oB,EAAM3mE,QAAS2mE,EAAOf,GAAI,MAGzF,MAEJ,IAAK,iBACD3yE,EACI,kBAAC,GAAD,CACI+M,QAAS2mE,EAAM3mE,QACf85C,MAAO6sB,EAAM7sB,MACb5rC,UAAW,kBAAM2/D,GAAqBlH,EAAM7sB,MAAO6sB,EAAM3mE,QAAS2mE,EAAOf,GAAI,MAGrF,MAEJ,IAAK,sBACD3yE,EAAU,kBAAC,GAAD,CAAY+zE,OAAQL,EAAMK,OAAQC,YAAaN,EAAMsE,eAC/D,MAEJ,IAAK,sBACDh4E,EAAU,kBAAC,GAAD,CAAYszE,OAAQI,EAAMJ,OAAQn1E,KAAMu1E,EAAMv1E,OACxD,MAEJ,IAAK,mBACD6B,EAAU,kBAAC,GAAD,CAASw0E,WAAYd,EAAM4D,YAAavqE,QAAS2mE,EAAM3mE,UACjE,MAEJ,IAAK,oBACD/M,EAAU,kBAAC,GAAD,CAAUsR,MAAOoiE,EAAMpiE,MAAOhN,MAAOovE,EAAMpvE,MAAOiR,SAAUm+D,EAAMn+D,WAC5E,MAEJ,IAAK,iBACDvV,EAAU,kBAAC,GAAD,CAAO20E,MAAOjB,EAAMiB,QAC9B,MAEJ,IAAK,mBACD30E,EAAU,kBAAC,GAAD,CAAS45C,OAAQ85B,EAAM95B,OAAQ46B,WAAYd,EAAM4D,YAAa1C,OAAQlB,EAAM4H,UACtF,MAEJ,IAAK,mBACDt7E,EAAU,kBAAC,GAAD,MACV,MAEJ,IAAK,oBACDA,EACI,kBAAC,GAAD,CACI+f,IAAK2zD,EAAM3zD,IACXq2D,KAAM1C,EAAM0C,KACZmF,YAAa7H,EAAM8H,aACnB55E,MAAO8xE,EAAM9xE,MACbgC,OAAQ8vE,EAAM9vE,OACdmJ,QAAS2mE,EAAM3mE,QACfspE,YAAa3C,EAAM+H,cACnBnF,eAAgB5C,EAAMgI,kBAG9B,MAEJ,IAAK,wBACD17E,EACI,kBAAC,GAAD,CACI+f,IAAK2zD,EAAM3zD,IACXg0D,OAAQL,EAAMK,OACd+C,YAAapD,EAAMiI,aACnB/3D,KAAM8vD,EAAM9vD,KACZ4wD,WAAYd,EAAM4D,YAClBvqE,QAAS2mE,EAAM3mE,UAGvB,MAEJ,IAAK,kBACD/M,EAAU,kBAAC,GAAD,CAAQk3E,OAAQxD,EAAMwD,SAChC,MAEJ,IAAK,kBACDl3E,EAAU,kBAAC,GAAD,CAAQ45C,OAAQ85B,EAAM95B,SAChC,MAEJ,IAAK,kBACD55C,EAAU,kBAAC,GAAD,CAAQo3E,OAAQ1D,EAAM0D,SAChC,MAEJ,IAAK,gBACDp3E,EAAU,kBAAC,GAAD,CAAMqY,MAAOq7D,EAAMr7D,QAC7B,MAEJ,IAAK,oBACDrY,EAAU,kBAAC,GAAD,CAAUkiB,MAAOwxD,EAAMxxD,MAAOsyD,WAAYd,EAAM4D,cAC1D,MAEJ,IAAK,eACDt3E,EACI,kBAAC,GAAD,CACIu3C,SAAUm8B,EAAMn8B,SAChBqkC,KAAMlI,EAAMkI,KACZh6E,MAAO8xE,EAAM9xE,MACbgC,OAAQ8vE,EAAM9vE,OACdmJ,QAAS2mE,EAAM3mE,UAGvB,MAEJ,IAAK,qBACD/M,EAAU,kBAAC,GAAD,CAAW7B,KAAMu1E,EAAMv1E,OACjC,MAEJ,IAAK,iBACD6B,EACI,kBAAC,GAAD,CACI+M,QAAS2mE,EAAM3mE,QACfzI,MAAOovE,EAAMpvE,MACbyb,IAAK2zD,EAAM3zD,IACX9E,UAAW,kBAAM2/D,GAAqBlH,EAAMpvE,MAAOovE,EAAM3mE,QAAS2mE,EAAOf,GAAI,MAGrF,MAEJ,IAAK,wBACD3yE,EAAU,kBAAC,GAAD,CAAc7B,KAAMu1E,EAAMv1E,KAAM6lB,SAAU0vD,EAAM1vD,WAC1D,MAEJ,IAAK,qBACDhkB,EAAU,kBAAC,GAAD,CAAWszE,OAAQI,EAAMJ,OAAQn1E,KAAMu1E,EAAMv1E,OACvD,MAEJ,IAAK,0BACD6B,EACI,kBAAC,GAAD,CACI+f,IAAK2zD,EAAM3zD,IACXzO,MAAOoiE,EAAMpiE,MACboP,YAAagzD,EAAMhzD,YACnBpc,MAAOovE,EAAMpvE,MACbyvE,OAAQL,EAAMK,OACdC,YAAaN,EAAMsE,eAG3B,MAEJ,IAAK,2BACDh4E,EAAU,kBAAC,GAAD,CAAiB45C,OAAQ85B,EAAM95B,OAAQm+B,SAAUrE,EAAMqE,WACjE,MAEJ,IAAK,qBACD/3E,EAAU,kBAAC,GAAD,CAAWw0E,WAAYd,EAAM4D,YAAavqE,QAAS2mE,EAAM3mE,UACnE,MAEJ,IAAK,qBACD/M,EAAU,kBAAC,GAAD,CAAWk4E,UAAWxE,EAAMwE,YACtC,MAEJ,IAAK,oBACDl4E,EAAU,kBAAC,GAAD,CAAUgS,SAAU0hE,EAAM1hE,WACpC,MAEJ,IAAK,iBACDhS,EACI,kBAAC,GAAD,CACI+M,QAAS2mE,EAAM3mE,QACfusE,MAAO5F,EAAM4F,MACbC,WAAY7F,EAAMmI,YAClBrC,UAAW9F,EAAMoI,aAGzB,MAEJ,IAAK,qBACD97E,EACI,kBAAC,GAAD,CACI7B,KAAMu1E,EAAMv1E,KACZ07E,SAAUnG,EAAMqI,UAChBjC,QAASpG,EAAMoG,QACfC,QAASrG,EAAMqG,QACfp6B,MAAO+zB,EAAM/zB,MACbq6B,OAAQtG,EAAMsG,SAGtB,MAEJ,IAAK,iBACDh6E,EAAU,kBAAC,GAAD,CAAOsR,MAAOoiE,EAAMpiE,QAC9B,MAEJ,IAAK,iBACDtR,EACI,kBAAC,GAAD,CACI+M,QAAS2mE,EAAM3mE,QACf5W,MAAOu9E,EAAMv9E,MACbukF,aAAchH,EAAMC,cACpBgH,SAAUjH,EAAMsI,UAChB/gE,UAAW,kBAAM2/D,GAAqBlH,EAAMv9E,MAAOu9E,EAAM3mE,QAAS2mE,EAAOf,GAAI,MAO7F,OAAI3yE,EACO,kBAAC,GAAD,CAAcnK,IAAKA,GAAMmK,GAG7B,wCAAU0zE,EAAM,SAAhB,MA6FJ,SAASF,GAAYX,GACxB,IAAKA,EAAU,OAAO,EAEtB,OAAQA,EAAS,UACb,IAAK,iBAGD,OAAOW,GAFUX,EAAT10E,MAIZ,IAAK,eAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,uBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,gBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,eACD,OAAO,EAEX,IAAK,iBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,iBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,sBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,gBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,wBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,oBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,sBAGD,OAAOq1E,GAFUX,EAAT10E,MAIZ,IAAK,YAGD,OAFkB00E,EAAVI,MAEKl/E,MAAMy/E,IAEvB,IAAK,oBAGD,OAAOA,GAFUX,EAAT10E,MAIZ,IAAK,cAGD,OAAOq1E,GAFUX,EAAT10E,MAMhB,OAAO,EAGJ,SAASi8E,GAAuBz6B,GACnC,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qCACD,MAAO,SAEX,IAAK,mCACD,MAAO,OAEX,IAAK,oCACD,MAAO,QAIf,OAAO,KAGJ,SAAS06B,GAAqBL,GACjC,IAAKA,EAAQ,OAAO,KAEpB,OAAQA,EAAO,UACX,IAAK,mCACD,MAAO,SAEX,IAAK,mCACD,MAAO,SAEX,IAAK,gCACD,MAAO,MAIf,OAAO,KAGJ,SAASiC,GAAevI,GAC3B,IAAKA,EAAO,MAAO,GAEnB,OAAQA,EAAM,UACV,IAAK,kBACD,MAAO,GAEX,IAAK,qBAGL,IAAK,iBACD,MAAO,CAACA,EAAM3mE,SAElB,IAAK,sBAGL,IAAK,sBAGL,IAAK,oBACD,MAAO,GAEX,IAAK,mBACD,IAAMmvE,EAAcxI,EAAM4D,YAAYhtE,IAAI,SAAAtW,GAAC,OAAKA,GAAL,oBAAWioF,GAAejoF,OAErE,MAAO,GAAG6a,OAAOstE,MAAM,GAAID,GAE/B,IAAK,iBACD,MAAO,CAACxI,EAAMiB,OAElB,IAAK,mBACD,IAAMuH,EAAcxI,EAAM4D,YAAYhtE,IAAI,SAAAtW,GAAC,OAAKA,GAAL,oBAAWioF,GAAejoF,OAErE,MAAO,GAAG6a,OAAOstE,MAAM,GAAID,GAE/B,IAAK,mBACD,MAAO,GAEX,IAAK,oBACD,MAAO,CAACxI,EAAM3mE,SAElB,IAAK,wBACD,IAAMmvE,EAAcxI,EAAM4D,YAAYhtE,IAAI,SAAAtW,GAAC,OAAKA,GAAL,oBAAWioF,GAAejoF,OAErE,MAAO,GAAG6a,OAAOstE,MAAM,CAACzI,EAAM3mE,SAAUmvE,GAE5C,IAAK,kBAGL,IAAK,kBAGL,IAAK,kBACD,MAAO,GAEX,IAAK,gBACD,IAAMA,EAAcxI,EAAMr7D,MAAM/N,IAAI,SAAAtW,GAAC,OAAKA,GAAL,oBAAWioF,GAAejoF,OAE/D,MAAO,GAAG6a,OAAOstE,MAAM,GAAID,GAE/B,IAAK,oBACD,IAAMA,EAAcxI,EAAM4D,YAAYhtE,IAAI,SAAAtW,GAAC,OAAKA,GAAL,oBAAWioF,GAAejoF,OAErE,MAAO,GAAG6a,OAAOstE,MAAM,GAAID,GAE/B,IAAK,eACD,MAAO,CAACxI,EAAM3mE,SAElB,IAAK,qBACD,MAAO,GAEX,IAAK,iBACD,MAAO,CAAC2mE,EAAM3mE,SAElB,IAAK,wBAGL,IAAK,qBAGL,IAAK,0BACD,MAAO,GAEX,IAAK,2BACD,OAAO,aAAI2mE,EAAMqE,UAErB,IAAK,qBACD,IAAMmE,EAAcxI,EAAM4D,YAAYhtE,IAAI,SAAAtW,GAAC,OAAKA,GAAL,oBAAWioF,GAAejoF,OAErE,MAAO,GAAG6a,OAAOstE,MAAM,CAACzI,EAAM3mE,SAAUmvE,GAE5C,IAAK,qBAGL,IAAK,oBACD,MAAO,GAEX,IAAK,iBACD,OAAO,aAAIxI,EAAM4F,OAErB,IAAK,qBAGL,IAAK,iBACD,MAAO,GAEX,IAAK,iBACD,MAAO,CAAC5F,EAAM3mE,SAItB,MAAO,GAGJ,SAASqvE,GAAc1I,GAC1B,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qBACD,OAAOA,EAAM/oB,UAEjB,IAAK,iBACD,OAAO+oB,EAAMpvE,MAEjB,IAAK,iBACD,OAAOovE,EAAMv9E,MAIrB,OAAO,KAiCJ,SAASkmF,GAAkB3I,GAC9B,IAAKA,EAAO,OAAO,EAEnB,OAAQA,EAAM,UACV,IAAK,qBAGL,IAAK,iBAGL,IAAK,iBACD,OAAO,EAIf,OAAO,E,WkDnuBL4I,G,iLACQ,IAAD,EACwB5pF,KAAKP,MAA1BoqF,EADH,EACGA,aAAc5J,EADjB,EACiBA,GACtB,IAAKA,EAAI,OAAO,KAFX,IAIG2E,EAAwB3E,EAAxB2E,YAAakF,EAAW7J,EAAX6J,OACrB,GAAKlF,EAAL,CAEA,IAAMmF,EAASnF,EAAYhtE,IAAI,SAACtW,EAAGwoB,GAAJ,OAAci4D,GAAazgF,EAAG2+E,EAAIn2D,KAEjE,OACI,6BAAShM,IAAK+rE,EAAcG,IAAKF,EAAS,MAAQ,OAC7CC,Q,GAZKxpF,IAAMipC,eA4BblrB,GALCC,YACZkI,cACAq5D,GAGWxhE,CAAQsrE,IClCRrnF,eACX,0BAAMC,EAAE,4bACR,QCAEynF,I,kNACF/lF,YAAc,SAAAhB,GACVA,EAAM0B,mB,wEAGA,IACE6G,EAASzL,KAAKP,MAAdgM,KAER,OACI,yBAAKxL,UAAU,gBAAgB0O,QAAS3O,KAAKkE,aACzC,yBAAKjE,UAAU,sBAAsBwL,Q,GAV1BlL,IAAMC,YAoBjCypF,GAAa74E,aAAe,GAEb64E,UCwOAC,G,YApPX,WAAYzqF,GAAQ,IAAD,8BACf,4CAAMA,KA+EViqE,wBAA0B,SAAAr5D,GAAW,IACzBzI,EAAWyI,EAAXzI,OADwB,EAER,EAAKnI,MAArBy0D,EAFwB,EAExBA,MAAOljD,EAFiB,EAEjBA,KACPvG,EAAS,EAAK1L,MAAd0L,KAER,GAAIA,GAAQA,EAAKrL,KAAOwI,EAAQ,CAAC,IAAD,EAC+BuiF,YAAcj2B,EAAOljD,GADpD,mBACrB9B,EADqB,KACdgC,EADc,KACNzG,EADM,KACAoyD,EADA,KACU+M,EADV,KAG5B,EAAKlqE,SAAS,CACVwP,QACAgC,SACAzG,OACAoH,IAAKC,YAAOrH,GACZm/D,oBACA/M,eA9FO,EAmGnButB,iCAAmC,SAAA/5E,GAAW,IAClCzI,EAAWyI,EAAXzI,OACW6C,EAAS,EAAK1L,MAAzB+b,UAEJrQ,GAAQA,EAAKrL,KAAOwI,GACpB,EAAK2J,eArGT,EAAKk3D,SAAWloE,IAAM4c,YAEtB,EAAKpe,MAAQ,GALE,E,iFAsDf2L,IAAUoG,GAAG,wBAAyB9Q,KAAK0pE,yBAC3Ch/D,IAAUoG,GAAG,wBAAyB9Q,KAAK0pE,yBAC3Ch/D,IAAUoG,GAAG,4BAA6B9Q,KAAK0pE,yBAC/Ch/D,IAAUoG,GAAG,iCAAkC9Q,KAAKoqF,kCACpD1/E,IAAUoG,GAAG,qCAAsC9Q,KAAKoqF,oC,6CAIxD1/E,IAAUqG,IAAI,wBAAyB/Q,KAAK0pE,yBAC5Ch/D,IAAUqG,IAAI,wBAAyB/Q,KAAK0pE,yBAC5Ch/D,IAAUqG,IAAI,4BAA6B/Q,KAAK0pE,yBAChDh/D,IAAUqG,IAAI,iCAAkC/Q,KAAKoqF,kCACrD1/E,IAAUqG,IAAI,qCAAsC/Q,KAAKoqF,oC,yCAG1CvqF,EAAWC,EAAWC,GAAW,IACxC8R,EAAQ7R,KAAKjB,MAAb8S,IAER,GAAI/R,EAAU+R,MAAQA,EAAK,CACvB,IAAM3L,EAASlG,KAAKyoE,SAASvuD,QAC7B,IAAKhU,EAAQ,OAEbA,EAAOo5B,U,+BAgCL,IAAD,SAC2Bt/B,KAAKP,MAA7By0D,EADH,EACGA,MAAO75C,EADV,EACUA,QAASgT,EADnB,EACmBA,IACxB,IAAK6mC,EAAO,OAAO,KAFd,MAImIl0D,KAAKjB,MAArImQ,EAJH,EAIGA,MAAOgC,EAJV,EAIUA,OAAQzG,EAJlB,EAIkBA,KAAMoH,EAJxB,EAIwBA,IAAKgrD,EAJ7B,EAI6BA,SAAU3E,EAJvC,EAIuCA,eAAgBC,EAJvD,EAIuDA,gBAAiBr9C,EAJxE,EAIwEA,UAAWkV,EAJnF,EAImFA,cAAeq6D,EAJlG,EAIkGA,UAAWzgB,EAJ7G,EAI6GA,kBAClH,IAAKn/D,EAAM,OAAO,KAElB,IAAMwlB,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5E61D,EAAej0E,YAAOgJ,GACtB8V,EAAYm1D,EAAe31D,aAAmB,CAAElhB,MAAOgpD,EAAgBhnD,OAAQinD,IAAqBjvC,QAAQ+G,GAE9Go6C,EAAan7D,EACbo7D,EAAcp5D,EAClB,GAAIxP,KAAK0N,IAAIi7D,EAAYC,GAAe,IAAK,CACzC,IAAMggB,EAAQ,IAAM5oF,KAAK0N,IAAIi7D,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAM5oE,KAAKyM,MAAMk8D,EAAaigB,IAC7B,IAAM5oF,KAAKyM,MAAMm8D,EAAcggB,GAG5E,IAAI3wE,EAAU,KACRvZ,EAASyR,EAAM,4BAAQA,IAAKA,EAAKiN,KAAM+9C,IAAc,KAC3D,OAAQ3I,EAAM,UACV,IAAK,QACDv6C,EACI,yBAAK1Z,UAAU,gCACX,kBAAC6N,EAAA,EAAD,CACIgQ,IAAK9d,KAAKyoE,SACVxoE,UAAU,oCACV2H,OAAQ6C,EAAKrL,GACb8P,MAAOm7D,EACPn5D,OAAQo5D,EACRigB,OAAQ3gB,EAAqBmc,GAAgB91D,EAAW,KACxD9oB,OAAQ,WACJ,EAAKzH,SAAS,CAAE2qF,WAAW,MAG9BjqF,IAEHiqF,IAAczgB,IACVmc,GAAgB91D,EACd,yBACIhwB,UAAWuO,IAAW,uCAAwC,CAC1D,gBAAiBoiB,IAErB/e,IAAKk0E,GAAgB91D,EACrBnc,IAAI,GACJ5E,MAAOm7D,EACPn5D,OAAQo5D,IAGZ,yBACIrqE,UAAU,uCACVoG,MAAO,CACH6I,MAAOm7D,EACPn5D,OAAQo5D,OAMhC,MAEJ,IAAK,YACD3wD,EACI,yBAAK1Z,UAAU,gCACX,2BACI6d,IAAK9d,KAAKyoE,SACVxoE,UAAU,oCACV0O,QAAS3O,KAAKwqF,mBACdhxC,MAAI,EACJoyB,UAAQ,EACR18D,MAAOm7D,EACPn5D,OAAQo5D,EACRnjE,OAAQ,WACJ,EAAKzH,SAAS,CAAE2qF,WAAW,MAG9BjqF,IAEHiqF,IACItE,GAAgB91D,EACd,yBACIhwB,UAAWuO,IAAW,uCAAwC,CAC1D,gBAAiBoiB,IAErB/e,IAAKk0E,GAAgB91D,EACrBnc,IAAI,GACJ5E,MAAOm7D,EACPn5D,OAAQo5D,IAGZ,yBACIrqE,UAAU,uCACVoG,MAAO,CACH6I,MAAOm7D,EACPn5D,OAAQo5D,OAMhC,MAEJ,QACI3wD,EACI,yBAAK1Z,UAAU,6BAA6B4R,IAAKA,EAAKiC,IAAI,GAAGnF,QAAS3O,KAAKwqF,qBAKvF,OACI,yBAAKvqF,UAAU,wBACV0Z,GACCiwD,GAAqB,kBAAC5tB,GAAA,EAAD,CAAcvxC,KAAMA,EAAMisC,OAAQ,IACxDr8B,KAAaymE,GAAYzmE,EAAQ5O,QAAUq1E,GAAYzmE,EAAQumE,SAAWvzD,IACvE,kBAAC,GAAD,CACI5hB,KACI,oCACI,kBAAC,GAAD,CAASA,KAAM4O,EAAQ5O,KAAMm1E,OAAQvmE,EAAQumE,SAC7C,kBAACzyD,GAAA,EAAD,CAAUd,IAAKA,W,gDA3NX5tB,EAAOV,GAAQ,IACnCm1D,EAA8Bz0D,EAA9By0D,MAAOljD,EAAuBvR,EAAvBuR,KAAuBvR,EAAjB4a,QAAiB5a,EAAR4tB,IAE9B,GAAI6mC,IAAUn1D,EAAM0rF,UAAW,CAAC,IAAD,EAEwBC,YAAmBx2B,GAF3C,mBAEtBgE,EAFsB,KAENC,EAFM,KAEWr9C,EAFX,KAG3BA,EAAYpQ,IAAUC,IAAImQ,EAAU1b,KAAO0b,EAHhB,MAKsC6vE,YAAuBz2B,GAL7D,mBAKpB02B,EALoB,KAKAC,EALA,KAKqB76D,EALrB,OAO8Bm6D,YAAcj2B,EAAOljD,GAPnD,mBAOtB9B,EAPsB,KAOfgC,EAPe,KAOPzG,EAPO,KAODoyD,EAPC,KAOS+M,EAPT,KAQ3Bn/D,EAAOC,IAAUC,IAAIF,EAAKrL,KAAOqL,EACjC,IAAIoH,EAAMC,YAAOrH,GAEjB,IAAKoH,GAAO+3D,EAAmB,CAAC,IACpBnmE,EAAUywD,EAAVzwD,MACJA,IACAoO,EAAG,6BAAyBpH,EAAKrL,GAA9B,iBAAyCqL,EAAKuG,KAA9C,sBAAgEvN,EAAMumE,YAIjF,MAAO,CACHygB,UAAWv2B,EAEX42B,MAAO,EACPT,WAAW,EACXn7E,QACAgC,SACAzG,OACAoH,MACAzR,OAjBS,KAkBTwpE,oBACA/M,WACA3E,iBACAC,kBACAr9C,YACA8vE,qBACAC,sBACA76D,iBAIR,OAAO,S,GAnD6BzvB,IAAMC,WCyBnCuqF,I,kNAhCX7mF,YAAc,SAAAhB,GACVA,EAAM0B,kBADa,MAGW,EAAKnF,MAA3BsQ,EAHW,EAGXA,SAAUpB,EAHC,EAGDA,QAEdoB,GAEJpB,EAAQzL,I,wEAGF,IAAD,EACkDlD,KAAKP,MAApDsQ,EADH,EACGA,SAAUi7E,EADb,EACaA,KAAMpgD,EADnB,EACmBA,SAAU3qC,EAD7B,EAC6BA,UAAWoG,EADxC,EACwCA,MAEvCgyB,EAAK7pB,IACPuB,EAAW,+BAAiC,sBAC5C,CAAEi7E,KAAMA,GACR/qF,GAGJ,OACI,yBAAKA,UAAWo4B,EAAIhyB,MAAOA,EAAOsI,QAAS3O,KAAKkE,aAC3C0mC,O,GAtBerqC,IAAMC,YCwBvByqF,I,wLAxBD,IAAD,EAC8BjrF,KAAKP,MAAhCmf,EADH,EACGA,MAAOU,EADV,EACUA,SAAUjZ,EADpB,EACoBA,MAEzB,OACI,yBAAKpG,UAAU,2BAA2BoG,MAAOA,GAC7C,yBAAKpG,UAAU,oCACX,8BAAO2e,GACNsK,QAAQ5J,IACL,qCAEKA,S,GAXO/e,IAAMC,YC6B3B0qF,I,kNAlCXhnF,YAAc,SAAAhB,GACVA,EAAM0B,kBADa,MAGW,EAAKnF,MAA3BkP,EAHW,EAGXA,QAHW,EAGFoB,UAIjBpB,EAAQzL,I,wEAGF,IAAD,EAC0ClD,KAAKP,MAA5C4iB,EADH,EACGA,QAASuoB,EADZ,EACYA,SAAU76B,EADtB,EACsBA,SAAU6O,EADhC,EACgCA,MAErC,OACI,yBACI3e,UAAWuO,IAAW,6BAA8B,CAChD,qCAAsC6T,EACtC,sCAAuCtS,IAE3C6O,MAAOA,EACPjQ,QAAS3O,KAAKkE,aACb0mC,O,GAtBqBrqC,IAAMC,YCStC2qF,G,2MACFpsF,MAAQ,G,EA4ERqsF,aAAe,SAAA/6E,GAAW,IACdzI,EAAW,EAAKnI,MAAhBmI,OACA6C,EAAS4F,EAAT5F,KAEJA,EAAKrL,KAAOwI,GAEZ6C,EAAK8gC,MAAM8/C,0BACX,EAAKC,mB,EAIb5hB,wBAA0B,SAAAr5D,GAAW,IACzBzI,EAAW,EAAK7I,MAAhB6I,OAEJA,IAAWyI,EAAOzI,QAClB,EAAKlI,SAAS,CACVqQ,SAAUo7E,EAA0BI,aAAa3jF,M,EAS7D1D,YAAc,SAAAhB,GACVA,EAAM0B,kBADa,IAGX+J,EAAY,EAAKlP,MAAjBkP,QACa,EAAK5P,MAAlBgR,UAGRpB,EAAQzL,I,kFA3FOrD,EAAWC,EAAWC,GACjCF,EAAU+H,SAAW5H,KAAKP,MAAMoR,QAChC7Q,KAAKsrF,oB,wCAIM,IAAD,OAEN1jF,EAAW5H,KAAKP,MAAhBmI,OAER,IADa8C,IAAU41B,QAAQ14B,GAC/B,CAKA,IAAM6C,EAAOC,IAAUC,IAAI/C,GAC3B,GAAK6C,EAAL,CAVc,IAeN8gC,EAAU9gC,EAAV8gC,MACR,GAAKA,GACAA,EAAM8/C,yBAAX,CAGA,IAAMn5E,EAAQxH,IAAUyH,WACxBzH,IAAU8gF,aAAat5E,EAAOzH,EAAM,KAAM,WAEtC,EAAK/K,SAAS,CACVqQ,SAAUo7E,EAA0BI,aAAa3jF,Y,0CAMzD5H,KAAKsrF,kBAEL5gF,IAAUoG,GAAG,aAAc9Q,KAAKorF,cAEhC1gF,IAAUoG,GAAG,4BAA6B9Q,KAAK0pE,yBAC/Ch/D,IAAUoG,GAAG,uBAAwB9Q,KAAK0pE,yBAC1Ch/D,IAAUoG,GAAG,2BAA4B9Q,KAAK0pE,yBAC9Ch/D,IAAUoG,GAAG,wBAAyB9Q,KAAK0pE,yBAC3Ch/D,IAAUoG,GAAG,uBAAwB9Q,KAAK0pE,yBAC1Ch/D,IAAUoG,GAAG,wBAAyB9Q,KAAK0pE,2B,6CAI3Ch/D,IAAUqG,IAAI,aAAc/Q,KAAKorF,cAEjC1gF,IAAUqG,IAAI,4BAA6B/Q,KAAK0pE,yBAChDh/D,IAAUqG,IAAI,uBAAwB/Q,KAAK0pE,yBAC3Ch/D,IAAUqG,IAAI,2BAA4B/Q,KAAK0pE,yBAC/Ch/D,IAAUqG,IAAI,wBAAyB/Q,KAAK0pE,yBAC5Ch/D,IAAUqG,IAAI,uBAAwB/Q,KAAK0pE,yBAC3Ch/D,IAAUqG,IAAI,wBAAyB/Q,KAAK0pE,2B,+BAsCtC,IAAD,EACuB1pE,KAAKP,MAAzBmf,EADH,EACGA,MAAOgsB,EADV,EACUA,SACP76B,EAAa/P,KAAKjB,MAAlBgR,SAER,OACI,kBAAC,GAAD,CAAyBA,SAAUA,EAAU6O,MAAOA,EAAOjQ,QAAS3O,KAAKkE,aACpE0mC,GAAY,kBAAC,KAAD,U,gDAnHOnrC,EAAOV,GAAQ,IACnC6I,EAAWnI,EAAXmI,OAGR,OAAIA,IAFwB7I,EAApB0sF,gBAGG,CACHA,gBAAiB7jF,EACjBA,SACAmI,SAAUo7E,EAA0BI,aAAa3jF,IAIlD,S,GAfyBrH,IAAMC,WAAxC2qF,GAkGKI,aAAe,SAAA3jF,GAClB,OAAQshB,QAAQxe,IAAU41B,QAAQ14B,KA+B3BujF,UClHTO,I,mBACF,WAAYjsF,GAAQ,IAAD,8BACf,4CAAMA,KAuBVwD,UAAY,SAAAC,GACR,KAAIua,KAAaqtB,OAAOz0B,OAAS,KAI7BnT,EAAM6nC,YAAV,CALiB,MASS,EAAKhsC,MAAvB+qB,EATS,EASTA,MAAOigE,EATE,EASFA,OACf,IAAKA,EAAQ,OAAO,KACpB,IAAe,IAAXjgE,EAAc,OAAO,KAEzB,IACMoqC,EAAQw1B,GADAK,EAAOjgE,IAErB,GAAKoqC,EAAL,CAGA,OADgBhxD,EAARC,KAEJ,IAAK,SAID,OAHA,EAAK2G,cACL5G,EAAM0B,uBACN1B,EAAM2B,iBAGV,IAAK,YAID,OAHA,EAAK8mF,iBACLzoF,EAAM0B,uBACN1B,EAAM2B,iBAGV,IAAK,aAID,OAHA,EAAKklE,aACL7mE,EAAM0B,uBACN1B,EAAM2B,iBAKqB,UAAnBqvD,EAAM,UAElB70D,IAAgBgI,aAAa,CAAE,QAAS,4BAA6BnE,aAjE1D,EA4FnByoF,eAAiB,SAAAzoF,GACTA,GACAA,EAAM0B,kBAFY,MAKI,EAAK7F,MAAvB+qB,EALc,EAKdA,MAAOigE,EALO,EAKPA,OACTv7B,EAAY1kC,EAAQ,EAE1B,GAAK,EAAK8hE,iBAAiB9hE,EAAOigE,GAElC,OAAO,EAAK8B,UAAUr9B,IAtGP,EAgHnBub,WAAa,SAAA7mE,GACLA,GACAA,EAAM0B,kBAFQ,MAKQ,EAAK7F,MAAvB+qB,EALU,EAKVA,MAAOigE,EALG,EAKHA,OACTv7B,EAAY1kC,EAAQ,EAE1B,GAAK,EAAKgiE,aAAahiE,EAAOigE,GAE9B,OAAO,EAAK8B,UAAUr9B,IA1HP,EA6HnBq9B,UAAY,SAAA/hE,GAAU,IACVigE,EAAW,EAAKhrF,MAAhBgrF,OAER,QAAIjgE,EAAQ,OACRA,GAASigE,EAAO1zE,UAEpB,EAAK3W,SACD,CACIoqB,QACA8hE,iBAAkB,EAAKA,iBAAiB9hE,EAAOigE,GAC/C+B,aAAc,EAAKA,aAAahiE,EAAOigE,KAI/CgC,YAA4BjiE,EAAOigE,IAC5B,KA5IQ,EA+InBjgF,YAAc,WACV2+E,aAA4B,MADZ,MAGU,EAAK1pF,MAAvB+qB,EAHQ,EAGRA,MAAOigE,EAHC,EAGDA,QACA,IAAXjgE,GACAkiE,YAAkCliE,EAAOigE,IApJ9B,EAwJnB9iE,cAAgB,WAAO,IACXitC,EAAU,EAAKz0D,MAAfy0D,MAEFn6C,EAAsBkyE,aAAqB/3B,EAAO,MACnDn6C,GAELtB,aAAQsB,IA9JO,EAiKnBmyE,WAAa,WAAO,IACRh4B,EAAU,EAAKz0D,MAAfy0D,MAERi4B,YAAUj4B,EAAO,OAjKjB,EAAKn1D,MAAQ,CACT+qB,OAAQ,EACR8hE,kBAAkB,EAClBE,cAAc,EACd/B,OAAQ,IAGZ,EAAKhkF,gBAAkB,IAAIoF,IAAgB,EAAKlI,WAVjC,E,iFAcfjD,KAAKgX,cAGLnR,IAAgBC,IAAI9F,KAAK+F,mB,6CAIzBF,IAAgBG,OAAOhG,KAAK+F,mB,oCAgDjB,IAAD,EACY/F,KAAKP,MAAnBwgF,EADE,EACFA,GAAI/rB,EADF,EACEA,MAEN61B,E1D8oBP,SAA6B9J,GAChC,IAAKA,EAAI,MAAO,GADoB,IAG5B2E,EAAgB3E,EAAhB2E,YAEFmF,EAAS,GASf,OARAnF,EAAY7iF,QAAQ,SAAAT,GAChByoF,EAAOxyE,KAAKjW,GACQioF,GAAejoF,GACvBS,QAAQ,SAAA4U,GAChBozE,EAAOxyE,KAAKZ,OAIbozE,EAAO3tE,OAAOutE,I0D5pBFyC,CAAoBnM,GAC7Bn2D,EAAQigE,EAAOhgE,UAAU,SAAAzoB,GAAC,OAAIooF,GAAcpoF,KAAO4yD,IAEzDl0D,KAAKN,SAAS,CACVqqF,SACAjgE,QACA8hE,iBAAkB5rF,KAAK4rF,iBAAiB9hE,EAAOigE,GAC/C+B,aAAc9rF,KAAK8rF,aAAahiE,EAAOigE,KAG3CgC,YAA4BjiE,EAAOigE,K,uCAGtBjgE,EAAOigE,GACpB,OAAe,IAAXjgE,GAEcA,EAAQ,EACPigE,EAAO1zE,S,mCAgBjByT,EAAOigE,GAChB,OAAe,IAAXjgE,GAEcA,EAAQ,GACN,I,+BA0Dd,IAAD,EACe9pB,KAAKP,MAAjBuR,EADH,EACGA,KAAMsB,EADT,EACSA,EADT,EAEqDtS,KAAKjB,MAAvD+qB,EAFH,EAEGA,MAAOigE,EAFV,EAEUA,OAAQ+B,EAFlB,EAEkBA,aAAcF,EAFhC,EAEgCA,iBACrC,IAAK7B,EAAQ,OAAO,KACpB,IAAe,IAAXjgE,EAAc,OAAO,KAEzB,IAAMk3D,EAAQ+I,EAAOjgE,GACfoqC,EAAQw1B,GAAc1I,GACtB3mE,E1DufP,SAAyB2mE,GAC5B,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qBAGL,IAAK,iBAGL,IAAK,iBACD,OAAOA,EAAM3mE,QAIrB,OAAO,K0DtgBagyE,CAAgBrL,GAC1B3zD,E1DwgBP,SAAqB2zD,GACxB,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,iBACD,OAAOA,EAAM3zD,IAIrB,OAAO,K0DjhBSi/D,CAAYtL,GATnB,EAWyBmJ,YAAcj2B,EAAOljD,GAX9C,mBAWiBvG,GAXjB,gBAaDmU,EAAQ,GACW,UAAnBs1C,EAAM,WACNt1C,EAAQtM,EAAE,gBAES,UAAnB4hD,EAAM,SACNt1C,EAAQtM,EAAE,eACgB,cAAnB4hD,EAAM,WACbt1C,EAAQtM,EAAE,cAEd,IAAMi6E,EAAWxC,EAAO1zE,OAExB,OACI,yBAAKpW,UAAWuO,IAAW,4BAA6B,yBACpD,yBAAKvO,UAAU,uBACX,kBAAC,GAAD,CACI2e,MAAOA,EACPU,SAAUitE,GAAYziE,GAAS,EAArB,UAA4BA,EAAQ,EAApC,eAA4CyiE,GAAa,KACnElmF,MAAO,CAAEmtE,WAAY,OAEzB,kBAAC,GAAD,CAA2B50D,MAAOtM,EAAE,QAAS1K,OAAQ6C,EAAKrL,GAAIuP,QAAS3O,KAAKksF,aAC5E,kBAAC,GAAD,CAAyBttE,MAAOtM,EAAE,WAAY3D,QAAS3O,KAAKinB,eACxD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBrI,MAAOtM,EAAE,SAAU3D,QAAS3O,KAAK8J,aACtD,kBAACiF,EAAA,EAAD,QAGR,yBAAK9O,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,CAAmB8P,UAAW+7E,EAAcd,MAAI,EAACr8E,QAAS3O,KAAK+pE,YAC3D,kBAAC,GAAD,QAGR,yBAAK9pE,UAAU,+BACX,kBAAC,GAAD,CAA+Bi0D,MAAOA,EAAOljD,KAAMA,EAAMqJ,QAASA,EAASgT,IAAKA,KAEpF,yBAAKptB,UAAU,6BACX,kBAAC,GAAD,CAAmB8P,UAAW67E,EAAkBZ,MAAI,EAACr8E,QAAS3O,KAAK2rF,gBAC/D,kBAAC,GAAD,CAAoBtlF,MAAO,CAAE+xB,UAAW,4B,GA3N/B73B,IAAMC,YA+O5B8d,GALCC,YACZtK,cACA6rE,GAGWxhE,CAAQotE,I,SCjPjBc,I,mBACF,WAAY/sF,GAAQ,IAAD,8BACf,4CAAMA,KAyEVgtF,uCAAyC,SAAAp8E,GAAW,IACxCsJ,EAAYtJ,EAAZsJ,QACR,GAAKA,EAAL,CAF+C,IAOvCu6C,EAAqCv6C,EAArCu6C,MAAO75C,EAA8BV,EAA9BU,QAASgT,EAAqB1T,EAArB0T,IAAKilD,EAAgB34D,EAAhB24D,YAEzB,EAAK7yE,MAAM6yE,cAAgBA,GAE/B,EAAK5yE,SAAS,CAAEw0D,QAAO75C,UAASgT,aAR5B,EAAK3tB,SAAS,CAAEw0D,MAAO,KAAM75C,QAAS,KAAMgT,IAAK,QA7EtC,EAwFnBq/D,6BAxFmB,sCAwFY,WAAMr8E,GAAN,yBAAAkE,EAAA,wDAC3BI,QAAQi0B,IAAI,kCAAmCv4B,GACvCgd,EAAQhd,EAARgd,IACF3d,EAASi9E,KAAiBC,aAHL,EAIU,EAAKntF,MAAlC6yE,EAJmB,EAInBA,YAAkBua,EAJC,EAINx/D,IAEjB3d,IAAW4iE,EANY,qDAQvBA,IAAejlD,EAAIC,WAAWu/D,GARP,oBASjBC,EAAO,IAAIp/D,IAAIL,GAAKy/D,KACtBz/D,EAAIrQ,QAAQ,OAASqQ,EAAIhX,OAAS,EAVf,wBAWnB,EAAKgN,UAAU,UAXI,+BAcZypE,IAAQ,EAAKC,aAAaD,EAAM,UAdpB,mDAmB3B5a,GAAgB7kD,GAnBW,0CAxFZ,wDAgMnBpqB,UAAY,SAAAC,GACR,KAAIua,KAAaqtB,OAAOz0B,OAAS,KAI7BnT,EAAM6nC,YAIV,OAAQ7nC,EAAMC,KACV,IAAK,SAMD,GALAD,EAAM0B,kBACN1B,EAAM2B,iBAEY,EAAK9F,MAAfm1D,MAIJ,YADAu0B,aAA4B,MAIhC,EAAK3+E,gBArNE,EA+NnBkjF,WAAa,WAAO,IAAD,EACgB,EAAKjuF,MAA5B4rE,EADO,EACPA,QADO,EACEsU,UAEb,EAAK57D,UAAU,UAIfsnD,EACAtrE,IAAgBgI,aAAa,CACzB,QAAS,gCAKjB,EAAKyC,eA7OU,EAgPnB6hB,aAAe,WACX,IAAMre,EAAU,EAAK2/E,iBAAiB/yE,QACtC,EAAKxa,SAAS,CACVu/E,UAAW3xE,EAAQ+V,UAAY,KAGnC,EAAKw3D,qBAnPL,EAAK90E,gBAAkB,IAAIoF,IAAgB,EAAKlI,WAChD,EAAKiqF,WAAa3sF,IAAM4c,YACxB,EAAK8vE,iBAAmB1sF,IAAM4c,YAE9B,EAAKpe,MAAQ,GAEb,EAAK87E,kBAAoB50C,YAAS,EAAK40C,kBAAmB,KAT3C,E,mFA2BGjoE,EAAWC,EAAWsqB,GAAc,IAC9Cm1C,EAAgBtyE,KAAKP,MAArB6yE,YAD6C,EAEDtyE,KAAKjB,MAAjDkgF,EAF6C,EAE7CA,UAAWtU,EAFkC,EAElCA,QAASzW,EAFyB,EAEzBA,MAAO75C,EAFkB,EAElBA,QAASgT,EAFS,EAETA,IAE5C,OAAIilD,IAAgB1/D,EAAU0/D,cAI1B2M,IAAcpsE,EAAUosE,YAIxBtU,IAAY93D,EAAU83D,UAItBzW,IAAUrhD,EAAUqhD,QAIpB75C,IAAYxH,EAAUwH,SAItBgT,IAAQxa,EAAUwa,U,0CAQtBrtB,KAAKmtF,SAAU,EACfntF,KAAK2rB,eAEL9lB,IAAgBC,IAAI9F,KAAK+F,iBACzB4mF,KAAiB77E,GAAG,6BAA8B9Q,KAAK0sF,8BACvDC,KAAiB77E,GAAG,uCAAwC9Q,KAAKysF,0C,6CAIjEzsF,KAAKmtF,SAAU,EACftnF,IAAgBG,OAAOhG,KAAK+F,iBAC5B4mF,KAAiB57E,IAAI,6BAA8B/Q,KAAK0sF,8BACxDC,KAAiB57E,IAAI,uCAAwC/Q,KAAKysF,0C,mCAuCzDK,EAAMzuD,GACf,IAAKyuD,EAAM,OAAO,EAElB,IAAMM,EAAgB5nF,SAASI,eAAeknF,EAAKhhD,OAAO,IAC1D,GAAIshD,EAAe,CACf,IAAMC,EAAU,GACZC,GAAW,EACXC,EAAiBH,EACrB,IACIG,EAAiBA,EAAe93B,YAEI,YAA5B83B,EAAet4B,SACfo4B,EAAQ91E,KAAKg2E,GACsB,YAA5BA,EAAet4B,WACtBq4B,GAAW,GAGfA,GAAW,SAETA,GASV,OAPAD,EAAQtrF,QAAQ,SAAAT,GAAC,OAAKA,EAAEic,MAAO,IAE/B6vE,EAAcn3C,eAAe,CACzB+qC,MAAO,SACP3iD,cAGG,EAGX,OAAO,I,gCAGDA,GACN,IAAM/wB,EAAUtN,KAAKitF,iBAAiB/yE,QAEtC,OAAQmkB,GACJ,IAAK,SACDhb,GAAU/V,GACV,MAEJ,QACIA,EAAQgxB,SAAS,CACb93B,IAAK,EACL63B,gB,yCAMGx+B,EAAWC,EAAWC,GAAW,IAAD,EAClBC,KAAKP,MAA1B6yE,EADuC,EACvCA,YAAajlD,EAD0B,EAC1BA,IACrB1Y,QAAQi0B,IAAI,0BAA2Bvb,EAAKA,IAAQxtB,EAAUwtB,KAE9D,IAAMy/D,EAAO,IAAIp/D,IAAIL,GAAKy/D,KACtBjtF,EAAUyyE,cAAgBA,IACtBzyE,EAAUwtB,MAAQA,EACdA,EAAIrQ,QAAQ,OAASqQ,EAAIhX,OAAS,GAClC1B,QAAQi0B,IAAI,0CACZ5oC,KAAKqjB,UAAU,SACRypE,GACPn4E,QAAQi0B,IAAI,uCAAwCkkD,GACpD9sF,KAAK+sF,aAAaD,EAAM,UAExBn4E,QAAQi0B,IAAI,0CACZ5oC,KAAKqjB,UAAU,SAGfypE,GACAn4E,QAAQi0B,IAAI,uCAAwCkkD,GACpD9sF,KAAK+sF,aAAaD,EAAM,UAExBn4E,QAAQi0B,IAAI,4CACZ5oC,KAAKqjB,UAAU,WAIvBrjB,KAAK2rB,kB,oCAgCT0mD,aAAsB,Q,0CA8BtB,GAAKryE,KAAKmtF,QAAV,CADgB,IAGR7a,EAAgBtyE,KAAKP,MAArB6yE,YACR,GAAKA,EAAL,CAOA,IAXgB,IAMRsS,EAAgBtS,EAAhBsS,YAEFmF,EAAS,IAAItzE,IACbkP,EAAQy1D,YAAYp7E,KAAKitF,iBAAkBjtF,KAAKktF,YAE7Cv2E,EAAI,EAAGA,EAAIgP,EAAMtP,OAAQM,IAAK,CACnC,IAAMqqE,EAAQ4D,EAAYj/D,EAAMhP,IAChCozE,EAAOzuE,IAAI0lE,EAAOA,GAEEuI,GAAevI,GACvBj/E,QAAQ,SAAAT,GAAC,OAAIyoF,EAAOzuE,IAAIha,EAAGA,KAG3CjC,IAAgBgI,aAAa,CACzB,QAAS,2BACT0iF,e,+BAIE,IACEzX,EAAgBtyE,KAAKP,MAArB6yE,YADH,EAE+CtyE,KAAKjB,MAAxCkgF,GAFZ,EAEGtU,QAFH,EAEYsU,WAAW/qB,EAFvB,EAEuBA,MAAO75C,EAF9B,EAE8BA,QAASgT,EAFvC,EAEuCA,IAC5C,OAAKilD,EAGD,kBAAC,GAAUkb,SAAX,CAAoBpkF,MAAOkpE,GACvB,yBAAKx0D,IAAK9d,KAAKitF,iBAAkBhtF,UAAU,iBAAiB0sB,SAAU3sB,KAAK2rB,cACvE,yBAAK1rB,UAAU,6BAA6B0O,QAAS3O,KAAKgtF,YACtD,kBAAC,GAAD,CACI/sF,UAAU,6BACVoG,MAAO,CAAE+f,WAAY,cACrBzX,QAAS3O,KAAKgtF,YACd,kBAAC,GAAD,CACI3mF,MAAO,CACHu+B,WAAY,2BACZxM,UAAW6mD,EAAY,gBAAkB,oBAKzD,yBAAKh/E,UAAU,iCACX,6BACI,kBAAC,GAAD,CAAS6d,IAAK9d,KAAKktF,eAG3B,yBAAKjtF,UAAU,+BACX,kBAAC,GAAD,CAAmBA,UAAU,8BAA8B0O,QAAS3O,KAAK8J,aACrE,kBAACiF,EAAA,EAAD,SAIXmlD,GAAS,kBAAC,GAAD,CAAwBA,MAAOA,EAAOljD,KAAM8zE,IAAezqE,QAASA,EAASgT,IAAKA,KA7B3E,Q,gDAzQG5tB,EAAOV,GACnC,OAAIU,EAAM6yE,cAAgBvzE,EAAM0uF,gBACrB,CACHA,gBAAiBhuF,EAAM6yE,YACvB3H,QAASgiB,KAAiBhiB,UAC1BsU,WAAW,EACX/qB,MAAO,KACP75C,QAAS,KACTgT,IAAK,MAIN,S,GAzBa9sB,IAAMC,YA6TnByT,iBAAkBu4E,IChSlBkB,I,mBAxCX,WAAYjuF,GAAQ,qEACVA,I,sEAGA,IAAD,EACyBO,KAAKP,MAA3BoR,EADH,EACGA,OAAQmW,EADX,EACWA,UAEVnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAJhB,IAMGqY,EAASrY,EAATqY,KAEF5gB,EAASq9E,aAAgB90E,GACzB+0E,EAAWtiB,aAAYp6C,GAEvB28D,EAAcv9E,EAAS,kBAACk6B,GAAA,EAAD,CAAUl6B,OAAQA,IAAa,kBAAC,GAAD,CAAUO,OAAQA,IAE9E,OACI,yBAAK5Q,UAAU,cACX,yBAAKA,UAAU,sBACV4tF,EACD,yBAAK5tF,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC8xB,GAAA,EAAD,CAAelhB,OAAQA,EAAQP,OAAQA,KAE3C,yBAAKrQ,UAAU,uBACX,8BAAO2tF,W,GA3BXrtF,IAAMC,YCKxBstF,I,mBACF,WAAYruF,GAAQ,IAAD,8BACf,4CAAMA,KAsFViqE,wBAA0B,SAAAr5D,GAAW,IAAD,EACI,EAAK5Q,MAAjCoR,EADwB,EACxBA,OAAQmW,EADgB,EAChBA,UAAWhW,EADK,EACLA,KAE3B,GAAIH,IAAWR,EAAOQ,QAAUmW,IAAc3W,EAAO2W,UAAW,CAAC,IAAD,EACD+mE,YAAal9E,EAAQmW,EAAWhW,GAD/B,mBACrD9B,EADqD,KAC9CgC,EAD8C,KACtCzG,EADsC,KAChCoyD,EADgC,KACtB+M,EADsB,KAG5D,EAAKlqE,SAAS,CACVwP,QACAgC,SACAzG,OACAoH,IAAKC,YAAOrH,GACZm/D,oBACA/M,eAnGO,EAwGnButB,iCAAmC,SAAA/5E,GAAW,IAAD,EACX,EAAK5Q,MAA3BoR,EADiC,EACjCA,OAAQmW,EADyB,EACzBA,UAEhB,GAAInW,IAAWR,EAAOQ,QAAUmW,IAAc3W,EAAO2W,UAAW,CAAC,IAAD,EAC9BgnE,YAAoBn9E,EAAQmW,GADE,mBACrD9X,EADqD,KAC9CgC,EAD8C,KACtCzG,EADsC,KAE5D,EAAK/K,SAAS,CACVw4D,eAAgBhpD,EAChBipD,gBAAiBjnD,EACjB4J,UAAWrQ,MAhHJ,EAqHnB+e,uBAAyB,SAAAnZ,GAAW,IAAD,EACQ,EAAK5Q,MAApCoR,EADuB,EACvBA,OAAQmW,EADe,EACfA,UAAWhW,EADI,EACJA,KAAMsB,EADF,EACEA,EACzBL,EAAwB5B,EAAxB4B,QAASqG,EAAejI,EAAfiI,WAEjB,GAAIzH,IAAWoB,GAAW+U,IAAc1O,EAAY,CAChD,IAAMO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACnCvb,EAAOkgD,aAAQ9yC,EAAS,KAAMvG,GAFY,EAIWy7E,YAAal9E,EAAQmW,EAAWhW,GAJ3C,mBAIzC9B,EAJyC,KAIlCgC,EAJkC,KAI1BzG,EAJ0B,KAIpBoyD,EAJoB,KAIV+M,EAJU,KAK5C/3D,EAAMC,YAAOrH,GAEjB,IAAKoH,GAAO+3D,EAAmB,CAAC,IACpBnmE,EAAUoV,EAAQc,QAAlBlW,MACJA,IACAoO,EAAG,6BAAyBpH,EAAKrL,GAA9B,iBAAyCqL,EAAKuG,KAA9C,sBAAgEvN,EAAMumE,YAIjF,EAAKtqE,SAAS,CACVwP,QACAgC,SACAzG,OACAoH,MACAzR,OAbS,KAcTwpE,oBACA/M,WACApxD,WA/IO,EAoJnB++E,mBAAqB,SAAAtnF,GACbA,GAAOA,EAAM0B,mBArJF,EAwJnBV,YAAc,SAAAhB,GACVA,EAAM2B,iBACN3B,EAAM0B,kBAFa,IAKXxE,EAAW,EAAKrB,MAAhBqB,OACHA,GAELA,EAAO6tF,kBA7JP,EAAKlvF,MAAQ,GAEb,EAAK0pE,SAAWloE,IAAM4c,YALP,E,iFA2DfzS,IAAUoG,GAAG,wBAAyB9Q,KAAK0pE,yBAC3Ch/D,IAAUoG,GAAG,wBAAyB9Q,KAAK0pE,yBAC3Ch/D,IAAUoG,GAAG,4BAA6B9Q,KAAK0pE,yBAC/Ch/D,IAAUoG,GAAG,iCAAkC9Q,KAAKoqF,kCACpD1/E,IAAUoG,GAAG,qCAAsC9Q,KAAKoqF,kCACxD3wE,KAAa3I,GAAG,uBAAwB9Q,KAAKwpB,0B,6CAI7C9e,IAAUqG,IAAI,wBAAyB/Q,KAAK0pE,yBAC5Ch/D,IAAUqG,IAAI,wBAAyB/Q,KAAK0pE,yBAC5Ch/D,IAAUqG,IAAI,4BAA6B/Q,KAAK0pE,yBAChDh/D,IAAUqG,IAAI,iCAAkC/Q,KAAKoqF,kCACrD1/E,IAAUqG,IAAI,qCAAsC/Q,KAAKoqF,kCACzD3wE,KAAa1I,IAAI,uBAAwB/Q,KAAKwpB,0B,yCAG/B3pB,EAAWC,EAAWC,GAAW,IACxC8R,EAAQ7R,KAAKjB,MAAb8S,IAER,GAAI/R,EAAU+R,MAAQA,EAAK,CACvB,IAAM3L,EAASlG,KAAKyoE,SAASvuD,QAC7B,IAAKhU,EAAQ,OAEbA,EAAOo5B,U,+BAgFL,IAAD,SACyBt/B,KAAKP,MAA3BoR,EADH,EACGA,OAAQmW,EADX,EACWA,UADX,EAeDhnB,KAAKjB,MAZLmQ,EAHC,EAGDA,MACAgC,EAJC,EAIDA,OACAzG,EALC,EAKDA,KACAoH,EANC,EAMDA,IACA+3D,EAPC,EAODA,kBACA/M,EARC,EAQDA,SACApxD,EATC,EASDA,KACAysD,EAVC,EAUDA,eACAC,EAXC,EAWDA,gBACAnoC,EAZC,EAYDA,cACAlV,EAbC,EAaDA,UACAuvE,EAdC,EAcDA,UAGJ,IAAK5/E,EAAM,OAAO,KAElB,IAAMwlB,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5E61D,EAAej0E,YAAOgJ,GACtB8V,EAAYm1D,EAAe31D,aAAmB,CAAElhB,MAAOgpD,EAAgBhnD,OAAQinD,IAAqBjvC,QAAQ+G,GAE5Gi+D,EAAUC,aAAet9E,EAAQmW,GACjConE,EAAcC,aAAmBx9E,EAAQmW,GAE3CqjD,EAAan7D,EACbo7D,EAAcp5D,EAClB,GAAIxP,KAAK0N,IAAIi7D,EAAYC,GAAe,IAAK,CACzC,IAAMggB,EAAQ,IAAM5oF,KAAK0N,IAAIi7D,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAM5oE,KAAKyM,MAAMk8D,EAAaigB,IAC7B,IAAM5oF,KAAKyM,MAAMm8D,EAAcggB,GAG5E,IAAI3wE,EAAU,KACRvZ,EAASyR,EAAM,4BAAQA,IAAKA,EAAKiN,KAAM+9C,IAAc,KAoF3D,OAlFIljD,EADAu0E,EAEI,yBAAKjuF,UAAU,gCACX,kBAAC6N,EAAA,EAAD,CACIgQ,IAAK9d,KAAKyoE,SACVxoE,UAAU,oCACV2H,OAAQ6C,EAAKrL,GACb8P,MAAOm7D,EACPn5D,OAAQo5D,EACRigB,OAAQ3gB,EAAqBmc,GAAgB91D,EAAW,KACxD9oB,OAAQ,WACJ,EAAKzH,SAAS,CAAE2qF,WAAW,MAG9BjqF,IAEHiqF,IAAczgB,IACVmc,GAAgB91D,EACd,yBACIhwB,UAAWuO,IAAW,uCAAwC,CAC1D,gBAAiBoiB,IAErB/e,IAAKk0E,GAAgB91D,EACrBnc,IAAI,GACJ5E,MAAOm7D,EACPn5D,OAAQo5D,IAGZ,yBACIrqE,UAAU,uCACVoG,MAAO,CACH6I,MAAOm7D,EACPn5D,OAAQo5D,OAMzB8jB,EAEH,yBAAKnuF,UAAU,gCACX,2BACI6d,IAAK9d,KAAKyoE,SACVxoE,UAAU,oCACV0O,QAAS3O,KAAKwqF,mBACdhxC,MAAI,EACJoyB,UAAQ,EACR18D,MAAOm7D,EACPn5D,OAAQo5D,EACRnjE,OAAQ,WACJ,EAAKzH,SAAS,CAAE2qF,WAAW,MAG9BjqF,IAEHiqF,IACItE,GAAgB91D,EACd,yBACIhwB,UAAWuO,IAAW,uCAAwC,CAC1D,gBAAiBoiB,IAErB/e,IAAKk0E,GAAgB91D,EACrBnc,IAAI,GACJ5E,MAAOm7D,EACPn5D,OAAQo5D,IAGZ,yBACIrqE,UAAU,uCACVoG,MAAO,CACH6I,MAAOm7D,EACPn5D,OAAQo5D,OAQ5B,yBAAKrqE,UAAU,6BAA6B4R,IAAKA,EAAKiC,IAAI,GAAGnF,QAAS3O,KAAKwqF,qBAK/E,yBAAKvqF,UAAU,wBACV0Z,GACCiwD,GAAqB,kBAAC5tB,GAAA,EAAD,CAAcvxC,KAAMA,EAAMisC,OAAQ,IACxDjrC,GAAQA,EAAK4K,OAAS,GAAK,kBAAC,GAAD,CAAc5K,KAAMA,Q,gDAtR5BhM,EAAOV,GAAQ,IACnC8R,EAA+BpR,EAA/BoR,OAAQmW,EAAuBvnB,EAAvBunB,UAAWhW,EAAYvR,EAAZuR,KAAMsB,EAAM7S,EAAN6S,EAEjC,GAAIzB,IAAW9R,EAAMiV,YAAcgT,IAAcjoB,EAAMs6B,cAAe,CAAC,IAAD,EACf20D,YAAoBn9E,EAAQmW,GADb,mBAC7DkxC,EAD6D,KAC7CC,EAD6C,KAC5Br9C,EAD4B,KAE9DA,IACAA,EAAYpQ,IAAUC,IAAImQ,EAAU1b,KAAO0b,GAHmB,MAKDwzE,YAAoBz9E,EAAQmW,GAL3B,mBAK3D4jE,EAL2D,KAKvCC,EALuC,KAKlB76D,EALkB,KAO5DnX,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACnCvb,EAAOkgD,aAAQ9yC,EAAS,KAAMvG,GAR8B,EAUTy7E,YAAal9E,EAAQmW,EAAWhW,GAVvB,mBAU7D9B,EAV6D,KAUtDgC,EAVsD,KAU9CzG,EAV8C,KAUxCoyD,EAVwC,KAU9B+M,EAV8B,KAWlEn/D,EAAOC,IAAUC,IAAIF,EAAKrL,KAAOqL,EACjC,IAAIoH,EAAMC,YAAOrH,GAEjB,IAAKoH,GAAO+3D,EAAmB,CAAC,IACpBnmE,EAAUoV,EAAQc,QAAlBlW,MACJA,IACAoO,EAAG,6BAAyBpH,EAAKrL,GAA9B,iBAAyCqL,EAAKuG,KAA9C,sBAAgEvN,EAAMumE,YAIjF,MAAO,CACHh2D,WAAYnD,EACZwoB,cAAerS,EAEf8jE,MAAO,EACPT,WAAW,EACXn7E,QACAgC,SACAzG,OACAoH,MACAzR,OAlBS,KAmBTwpE,oBACA/M,WACApxD,OACAysD,iBACAC,kBACAr9C,YACA8vE,qBACAC,sBACA76D,iBAIR,OAAO,S,GAxDkBzvB,IAAMC,YA2SxByT,iBAAkB65E,IC5Q3BS,I,mBACF,WAAY9uF,GAAQ,IAAD,uBACf,4CAAMA,KAsFVwD,UAAY,SAAAC,GAAU,IACV2N,EAAW,EAAKpR,MAAhBoR,OACA29E,EAAqB,EAAKzvF,MAA1ByvF,iBAER,KAAI/wE,KAAaqtB,OAAOz0B,OAAS,KAI7BnT,EAAM6nC,YAAV,CAIA,IAAMtlC,EAAoBD,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAGlG,OADgBzC,EAARC,KAEJ,IAAK,SAKD,OAHA,EAAK2G,cACL5G,EAAM0B,uBACN1B,EAAM2B,iBAGV,IAAK,YACD,IAAKY,EAID,OAHA,EAAKkmF,iBACLzoF,EAAM0B,uBACN1B,EAAM2B,iBAGV,MAEJ,IAAK,aACD,IAAKY,EAID,OAHA,EAAKskE,aACL7mE,EAAM0B,uBACN1B,EAAM2B,iBAOFspF,aAAet9E,EAAQ29E,IAEnCnvF,IAAgBgI,aAAa,CAAE,QAAS,4BAA6BnE,YApI1D,EAwInBsmB,uBAAyB,SAAAnZ,GAAW,IACxB4B,EAAkD5B,EAAlD4B,QAASqG,EAAyCjI,EAAzCiI,WAAYqR,EAA6BtZ,EAA7BsZ,YAAaC,EAAgBvZ,EAAhBuZ,YAClC/Y,EAAW,EAAKpR,MAAhBoR,OAFuB,EAGU,EAAK9R,MAAtCyvF,EAHuB,EAGvBA,iBAAkBC,EAHK,EAGLA,WAE1B,GAAI59E,IAAWoB,EAAf,CAEA,IAAM4G,EAAUY,KAAa9O,IAAIsH,EAASqG,GAC1C,GAAKO,EAAL,CAKA,GAHA61E,YAAuB,CAAC71E,IAEL81E,aAAehlE,KAAiBglE,aAAe/kE,GAClD,CACZ,GACI,EAAKkwD,QAAQzjE,QAAU,IACtB,EAAKu4E,kBACF/kE,YAAQvR,EAAY,EAAKwhE,QAAQ,GAAG16E,GAAI,EAAK06E,QAAQ,EAAKA,QAAQzjE,OAAS,GAAGjX,KACpF,CAGE,IAFA,IAAIyvF,GAAW,EACX/U,EAAU,GACLnjE,EAAI,EAAGA,EAAI,EAAKmjE,QAAQzjE,OAAQM,IACjC,EAAKmjE,QAAQnjE,GAAGvX,GAAKkZ,EACrBwhE,EAAQviE,KAAK,EAAKuiE,QAAQnjE,KAErBk4E,IACDA,GAAW,EACX/U,EAAQviE,KAAKsB,IAEjBihE,EAAQviE,KAAK,EAAKuiE,QAAQnjE,KAGlC,EAAKmjE,QAAUA,EAGnB,IAAMhwD,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IACnD,EAAK9uF,SAAS,CACVosF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,GACxC2kE,WAAYA,EAAa,IAKjC,IADuBE,aAAehlE,IAAgBglE,aAAe/kE,GAClD,CACf,IAAIklE,EAAa,EAAKhV,QAGtB,GAFA,EAAKA,QAAU,EAAKA,QAAQ19D,OAAO,SAAA9a,GAAC,OAAIA,EAAElC,KAAOkZ,IAE7Ck2E,IAAqBl2E,EAAY,CACjC,IAAMy2E,EAAY,IAAIt4E,IACtBs4E,EAAUzzE,IAAIhD,EAAYA,GAE1B,EAAK02E,gBAAgBF,EAAYC,GACjC,EAAKrvF,SAAS,CACV+uF,WAAY/sF,KAAK0N,IAAIq/E,EAAa,EAAG,SAEtC,CACH,IAAM3kE,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IACnD,EAAK9uF,SAAS,CACVosF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,GACxC2kE,WAAY/sF,KAAK0N,IAAIq/E,EAAa,EAAG,UArMlC,EA2MnBlkE,uBAAyB,SAAAla,GAAW,IACxB4B,EAAuC5B,EAAvC4B,QAASiJ,EAA8B7K,EAA9B6K,YAAak8C,EAAiB/mD,EAAjB+mD,aACtBvmD,EAAW,EAAKpR,MAAhBoR,OAFuB,EAGU,EAAK9R,MAAtCyvF,EAHuB,EAGvBA,iBAAkBC,EAHK,EAGLA,WAE1B,GAAKr3B,GACDvmD,IAAWoB,EAAf,CAEA,IAAM88E,EAAY7zE,EAAYsf,OAAO,SAACy0D,EAAaC,GAE/C,OADAD,EAAY3zE,IAAI4zE,EAAWA,GACpBD,GACR,IAAIx4E,KAEDq4E,EAAa,EAAKhV,QACpBqV,EAAeL,EAAWz4E,OAE9B,EAAKyjE,QAAU,EAAKA,QAAQ19D,OAAO,SAAA9a,GAAC,OAAKytF,EAAUn4E,IAAItV,EAAElC,MACzD+vF,GAAgB,EAAKrV,QAAQzjE,OAE7B,EAAK3W,SAAS,CAAE+uF,WAAY/sF,KAAK0N,IAAIq/E,EAAaU,EAAc,KAE3D,EAAKrV,QAAQzjE,OAKd04E,EAAUn4E,IAAI43E,IACd,EAAKQ,gBAAgBF,EAAYC,GALjCK,aAAsB,QAjOX,EA0OnBhlE,mBAAqB,SAAA/Z,GAAW,IACpBQ,EAAW,EAAKpR,MAAhBoR,OADmB,EAEc,EAAK9R,MAAtCyvF,EAFmB,EAEnBA,iBAAkBC,EAFC,EAEDA,WAElB51E,EAAYxI,EAAZwI,QACR,GAAKA,GACA81E,aAAe91E,EAAQc,UAExBd,EAAQ5G,UAAYpB,GACnB,EAAK+9E,iBAAV,CAEA,EAAK9U,QAAU,CAACjhE,GAASsD,OAAO,EAAK29D,SACrC,IAAMhwD,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IAEnD,EAAK9uF,SAAS,CACVosF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,GACxC2kE,WAAYA,EAAa,MA3Pd,EA+PnBY,UAAY,SAACx+E,EAAQmW,GACjB,IAAMnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,KAFU,IAIvBc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACH,QAAS,qCAGjB,QACI,OAAO,OAvRA,EA4RnB21E,YA5RmB,qBA4RL,gDAAA/6E,EAAA,0DACoB,EAAK9U,MAA3BoR,EADE,EACFA,OAAQmW,EADN,EACMA,UAEV5K,EAAS,EAAKizE,UAAUx+E,EAAQmW,GAElCxnB,EAAS,CACT,QAAS,WACT8rB,SAAU,GACVC,YAAa,IAEbnP,EAVM,gCAWS/c,IAAgBC,KAAK,CAChC,QAAS,qBACT2S,QAASpB,EACT0L,MAAO,GACP2O,eAAgB,EAChBC,gBAAiBnE,EACjBoE,QAASmkE,IACTj4E,MAAO,EAAIi4E,IACXnzE,OAAQA,IAnBN,OAWN5c,EAXM,iBAuBV8tC,aAAwB9tC,EAAQ,EAAKs6E,SACrCrgE,KAAagS,SAASjsB,EAAO8rB,UAE7B,EAAKwuD,QAAUt6E,EAAO8rB,SACtB,EAAKsjE,iBAA8C,IAA3BpvF,EAAO8rB,SAASjV,OAEhCm4E,EAAqB,EAAKzvF,MAA1ByvF,iBACF1kE,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IAEnD,EAAK9uF,SAAS,CACVosF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,MAG7B,IAAXA,EArCM,iBAsCN,EAAKgwD,QAAU,CAACrgE,KAAa9O,IAAIkG,EAAQ29E,IACzCgB,YAA0B,EAAG,EAAK1V,SAvC5B,2BAyCN0V,YAA0B1lE,EAAO,EAAKgwD,SAEhC19D,EAAS,EAAKizE,UAAUx+E,EAAQmW,GA3ChC,mDA8CAulE,EAAW,KACbn+C,EAAQ,EA/CN,IAAA75B,EAAA,qCAAAA,EAAA,qEAiDmBlV,IAAgBC,KAAK,CACtC,QAAS,qBACT2S,QAASpB,EACT0L,MAAO,GACP2O,eAAgB,EAChBC,gBAAiB,EAAK2uD,QAAQzjE,OAAS,EAAI,EAAKyjE,QAAQ,GAAG16E,GAAK,EAChEgsB,QAAS,GACT9T,MAAO,IACP8E,OAAQA,IAzDV,OAiDI5c,EAjDJ,OA2DF4uC,GAAS5uC,EAAO8rB,SAASjV,OAEzBi3B,aAAwB9tC,EAAQ,EAAKs6E,SACrCrgE,KAAagS,SAASjsB,EAAO8rB,UAE7B,EAAKwuD,QAAUt6E,EAAO8rB,SAASnP,OAAO,EAAK29D,SAC3C,EAAK8U,iBAA8C,IAA3BpvF,EAAO8rB,SAASjV,OAEhCm4E,EAAqB,EAAKzvF,MAA1ByvF,iBACF1kE,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IAEnD,EAAK9uF,SAAS,CACVosF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,GACxC8kE,iBAAkB,EAAKA,iBACvBH,WAAYjvF,EAAO+rB,cA1ErB,oDAgDE,EAAKqjE,oBAAoBxgD,EAAQm+C,GAhDnC,uHA5RK,EA4WnBziF,YAAc,WACVslF,aAAsB,MADN,IAGRZ,EAAqB,EAAKzvF,MAA1ByvF,iBACF1kE,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,KACpC,IAAX1kE,GACA2lE,YAAgC3lE,EAAO,EAAKgwD,UAlXjC,EAsXnBoS,WAAa,WAAO,IACRr7E,EAAW,EAAKpR,MAAhBoR,OACA29E,EAAqB,EAAKzvF,MAA1ByvF,iBAEF31E,EAAUY,KAAa9O,IAAIkG,EAAQ29E,GACzC,GAAK31E,EAAL,CALe,IAOPc,EAAYd,EAAZc,QACR,GAAKA,EAAL,CAEA,IAAIu6C,EAAQ,KACZ,OAAQv6C,EAAQ,UACZ,IAAK,mBAGDu6C,EAFsBv6C,EAAds+C,UAGR,MAEJ,IAAK,yBAGD/D,EAFkBv6C,EAAV/H,MAGR,MAEJ,IAAK,kBAGDsiD,EAFqBv6C,EAAbnU,SAGR,MAEJ,IAAK,eAGD0uD,EAFkBv6C,EAAV/H,MAGR,MAEJ,IAAK,cAAgB,IACTkd,EAAanV,EAAbmV,SACR,IAAKA,EAAU,OAFC,IAIRmpC,EAAsCnpC,EAAtCmpC,UAAWzyD,EAA2BspB,EAA3BtpB,SAAUoM,EAAiBkd,EAAjBld,MAAOnO,EAAUqrB,EAAVrrB,MAEpC,GAAIw0D,EAAW,CACX/D,EAAQ+D,EACR,MAGJ,GAAIzyD,EAAU,CACV0uD,EAAQ1uD,EACR,MAGJ,GAAIoM,EAAO,CACPsiD,EAAQtiD,EACR,MAGJ,GAAInO,EAAO,CACPywD,EAAQzwD,EACR,MAEJ,MAEJ,IAAK,eAGDywD,EAFkBv6C,EAAVlW,MAOhB0oF,YAAUj4B,EAAOr7C,MA7bF,EAgcnBoO,cAAgB,WAAO,IACXpW,EAAW,EAAKpR,MAAhBoR,OACA29E,EAAqB,EAAKzvF,MAA1ByvF,iBAERtnE,aAAgBrW,EAAQ,CAAC29E,KApcV,EAucnBrnE,aAAe,WACX,EAAKuoE,oBAxcU,EA2cnB9D,iBAAmB,SAAA9hE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKgwD,QAAQzjE,QA/cjB,EAkdnBs1E,eAAiB,SAAAzoF,GACTA,GACAA,EAAM0B,kBAFY,IAKd4pF,EAAqB,EAAKzvF,MAA1ByvF,iBAEFhgC,EADQ,EAAKsrB,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IACzB,EAE1B,OAAO,EAAK3C,UAAUr9B,EAAW,WACzBA,IAAc,EAAKsrB,QAAQzjE,OAAS,GACpC,EAAKs5E,kBA7dE,EAkenBA,aAlemB,qBAkeJ,wCAAAp7E,EAAA,0DACmB,EAAK9U,MAA3BoR,EADG,EACHA,OAAQmW,EADL,EACKA,UACRwnE,EAAqB,EAAKzvF,MAA1ByvF,iBAEFpyE,EAAS,EAAKizE,UAAUx+E,EAAQmW,GAElCxnB,EAAS,CACT,QAAS,WACT8rB,SAAU,GACVC,YAAa,IAEbnP,EAXO,gCAYQ/c,IAAgBC,KAAK,CAChC,QAAS,qBACT2S,QAASpB,EACT0L,MAAO,GACP2O,eAAgB,EAChBC,gBAAiBqjE,EACjBpjE,OAAQ,EACR9T,MAAOi4E,IACPnzE,OAAQA,IApBL,OAYP5c,EAZO,cAwBX8tC,aAAwB9tC,EAAQ,EAAKs6E,SACrCrgE,KAAagS,SAASjsB,EAAO8rB,UAE7B,EAAKwuD,QAAU,EAAKA,QAAQ39D,OAAO3c,EAAO8rB,UAEpCxB,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IAEnD,EAAK9uF,SAAS,CACVosF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,GACxC2kE,WAAYjvF,EAAO+rB,cAlCZ,0CAleI,EAwgBnBugE,aAAe,SAAAhiE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GA5gBL,EA+gBnBigD,WAAa,SAAA7mE,GACLA,GACAA,EAAM0B,kBAFQ,IAKV4pF,EAAqB,EAAKzvF,MAA1ByvF,iBAEFhgC,EADQ,EAAKsrB,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IACzB,EAE1B,OAAO,EAAK3C,UAAUr9B,EAAW,WACX,IAAdA,GACA,EAAKohC,cA1hBE,EA+hBnBA,SA/hBmB,qBA+hBR,wCAAAr7E,EAAA,0DACuB,EAAK9U,MAA3BoR,EADD,EACCA,OAAQmW,EADT,EACSA,UACRwnE,EAAqB,EAAKzvF,MAA1ByvF,iBAEFpyE,EAAS,EAAKizE,UAAUx+E,EAAQmW,GAElCxnB,EAAS,CACT,QAAS,WACT8rB,SAAU,GACVC,YAAa,IAEbnP,EAXG,gCAYY/c,IAAgBC,KAAK,CAChC,QAAS,qBACT2S,QAASpB,EACT0L,MAAO,GACP2O,eAAgB,EAChBC,gBAAiBqjE,EACjBpjE,QAASmkE,IACTj4E,MAAOi4E,IAAoB,EAC3BnzE,OAAQA,IApBT,OAYH5c,EAZG,cAwBP8tC,aAAwB9tC,EAAQ,EAAKs6E,SACrCrgE,KAAagS,SAASjsB,EAAO8rB,UAE7B,EAAKsjE,iBAA8C,IAA3BpvF,EAAO8rB,SAASjV,OACxC,EAAKyjE,QAAUt6E,EAAO8rB,SAASnP,OAAO,EAAK29D,SAErChwD,EAAQ,EAAKgwD,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IAEnD,EAAK9uF,SAAS,CACVosF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,GACxC8kE,iBAAkB,EAAKA,iBACvBH,WAAYjvF,EAAO+rB,cApChB,0CA/hBQ,EAukBnBsgE,UAAY,SAAC/hE,EAAOU,GAChB,QAAIV,EAAQ,OACRA,GAAS,EAAKgwD,QAAQzjE,UAE1B,EAAK3W,SACD,CACI8uF,iBAAkB,EAAK1U,QAAQhwD,GAAO1qB,GACtC0sF,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,IAE5CU,GAGJglE,YAA0B1lE,EAAO,EAAKgwD,UAC/B,KArlBQ,EAwlBnBkV,gBAAkB,SAACF,EAAYC,GAK3B,IAL0C,IAClCP,EAAqB,EAAKzvF,MAA1ByvF,iBAEF1kE,EAAQglE,EAAW/kE,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,IAC7CqB,EAAS,EACJl5E,EAAImT,EAAQ,EAAGnT,GAAK,EAAGA,IAC5B,GAAIo4E,IAAcA,EAAUn4E,IAAIk4E,EAAWn4E,GAAGvX,IAAK,CAC/CywF,EAASf,EAAWn4E,GAAGvX,GACvB,MAGR,IAAKywF,EACD,IAAK,IAAIl5E,EAAImT,EAAQ,EAAGnT,EAAIm4E,EAAWz4E,OAAQM,IAC3C,GAAIo4E,IAAcA,EAAUn4E,IAAIk4E,EAAWn4E,GAAGvX,IAAK,CAC/CywF,EAASf,EAAWn4E,GAAGvX,GACvB,MAKZ,GAAKywF,EAAL,CAEA,IAAMrhC,EAAY,EAAKsrB,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOywF,IAEvD,OAAO,EAAKhE,UAAUr9B,EAAW,WACX,IAAdA,EACA,EAAKohC,WACEphC,IAAc,EAAKsrB,QAAQzjE,OAAS,GAC3C,EAAKs5E,mBApnBE,EAynBnBD,iBAAmB,WACf,EAAKhwF,SAAS,CAAEowF,0BAA0B,KA1nB3B,EA6nBnBC,kBAAoB,WAChB,EAAKrwF,SAAS,CAAEowF,0BAA0B,KA9nB3B,EAioBnB/gD,WAAa,WACT,EAAKrvC,SAAS,CAAEowF,0BAA0B,IAD3B,IAGPj/E,EAAW,EAAKpR,MAAhBoR,OAHO,EAI4B,EAAK9R,MAAxCyvF,EAJO,EAIPA,iBAAkBwB,EAJX,EAIWA,aAEpBn3E,EAAUY,KAAa9O,IAAIkG,EAAQ29E,GACzC,GAAK31E,EAAL,CAPe,IASP0O,EAA+D1O,EAA/D0O,6BAA8BC,EAAiC3O,EAAjC2O,8BACjBD,GAAgCC,IAGrDnoB,IAAgBC,KAAK,CACjB,QAAS,iBACT2S,QAASpB,EACTqK,YAAa,CAACszE,GACd1qB,OAAQt8C,GAAgCwoE,MAlpB7B,EAspBnBC,yBAA2B,SAAA/sF,GACvB,EAAKxD,SAAS,CAAEswF,aAAc9sF,EAAMyD,OAAO0b,WAvpB5B,EA0pBnB6tE,mBAAqB,WAAO,IAGpBC,EAAiB,uBACrB,OAHuB,EAAKpxF,MAApBkxD,YAIJ,IAAK,uBACDkgC,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB,EAAKzwF,SAAS,CACVuwD,WAAYkgC,KA9qBD,EAkrBnBxtB,eAAiB,SAAC9xD,EAAQmW,GACtB,IAAMnO,EAAUY,KAAa9O,IAAIkG,EAAQmW,GACzC,IAAKnO,EAAS,OAAO,EAFe,IAI5Ba,EAA8Bb,EAA9Ba,iBAAkBC,EAAYd,EAAZc,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOD,IA9rBA,EAmsBnB02E,mBAAqB,SAAAltF,GAAU,IACnBmtF,EADkB,eAClBA,gBACR,EAAKA,gBAAkB,KAEnBntF,EAAMy+B,gBAAkB0uD,GAE5B,EAAKvmF,eAzsBU,EA4sBnBwmF,uBAAyB,SAAAptF,GACrB,EAAKmtF,gBAAkBntF,EAAMy+B,eA1sB7B,EAAK57B,gBAAkB,IAAIoF,IAAgB,EAAKlI,WAChD,EAAK62E,QAAU,GAJA,MAMe,EAAKr6E,MAA3BoR,EANO,EAMPA,OAAQmW,EAND,EAMCA,UAND,OAQf,EAAKjoB,MAAQ,CACTkxD,WAAY,uBACZj8C,WAAYnD,EACZwoB,cAAerS,EACfwnE,iBAAkBxnE,EAClB8kE,cAAc,EACdF,kBAAkB,EAClBkE,0BAA0B,EAC1BE,cAAc,GAhBH,E,mFAoBGp9E,EAAWC,GAAY,IAAD,EACV7S,KAAKP,MAA3BoR,EADgC,EAChCA,OAAQmW,EADwB,EACxBA,UADwB,EAUpChnB,KAAKjB,MAPLkxD,EAHoC,EAGpCA,WACAu+B,EAJoC,EAIpCA,iBACAsB,EALoC,EAKpCA,yBACAlB,EANoC,EAMpCA,iBACA9C,EAPoC,EAOpCA,aACAF,EARoC,EAQpCA,iBACA6C,EAToC,EASpCA,WAGJ,OAAI57E,EAAUo9C,aAAeA,IAIzBr9C,EAAU/B,SAAWA,IAIrB+B,EAAUoU,YAAcA,IAIxBnU,EAAU27E,mBAAqBA,IAI/B37E,EAAU09E,kBAAoB3E,IAI9B/4E,EAAUi5E,eAAiBA,IAI3Bj5E,EAAU+7E,mBAAqBA,IAI/B/7E,EAAU47E,aAAeA,GAIzB57E,EAAUi9E,2BAA6BA,W,0CAQ3C9vF,KAAKsvF,cAELzpF,IAAgBC,IAAI9F,KAAK+F,iBACzB0T,KAAa3I,GAAG,uBAAwB9Q,KAAKuqB,wBAC7C9Q,KAAa3I,GAAG,mBAAoB9Q,KAAKoqB,oBACzC3Q,KAAa3I,GAAG,uBAAwB9Q,KAAKwpB,0B,6CAI7C3jB,IAAgBG,OAAOhG,KAAK+F,iBAC5B0T,KAAa1I,IAAI,uBAAwB/Q,KAAKuqB,wBAC9C9Q,KAAa1I,IAAI,mBAAoB/Q,KAAKoqB,oBAC1C3Q,KAAa1I,IAAI,uBAAwB/Q,KAAKwpB,0B,+BA4nBxC,IAAD,EACiBxpB,KAAKP,MAAnBoR,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAWDtS,KAAKjB,MARLkxD,EAHC,EAGDA,WACAu+B,EAJC,EAIDA,iBACAsB,EALC,EAKDA,yBACAE,EANC,EAMDA,aACApB,EAPC,EAODA,iBACA9C,EARC,EAQDA,aACAF,EATC,EASDA,iBACA6C,EAVC,EAUDA,WAGA3kE,GAAS,EACT2kE,GAAcG,IACd9kE,EAAQ9pB,KAAK85E,QAAQ/vD,UAAU,SAAAzoB,GAAC,OAAIA,EAAElC,KAAOovF,KAEjD,IAAMjC,EAAW7qF,KAAK0N,IAAIpP,KAAK85E,QAAQzjE,OAAQo4E,GAGvCjnE,EADQ/N,KAAa9O,IAAIkG,EAAQ29E,GACjChnE,6BAEFk7C,EAAe2O,aAAoBxgE,EAAQ29E,GAC3C7rB,EAAiB3iE,KAAK2iE,eAAe9xD,EAAQ29E,GAE/CgC,EAA4B,GAE5BA,EADArC,aAAet9E,EAAQ29E,GACKl8E,EAAE,yBACvB+7E,aAAmBx9E,EAAQ29E,GACNl8E,EAAE,uBAEFA,EAAE,yBAElC,IAAMm+E,EAAqBX,EACvB,kBAAC,IAAD,CACItyE,QAASC,KACTC,mBAAoB,EACpBH,KAAMuyE,EACNnyE,QAAS3d,KAAK+vF,kBACdnyE,kBAAgB,qBAChB,kBAAC,IAAD,CAAaxe,GAAG,qBAAqBkT,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC68B,GAAA,EAAD,KAAoBqhD,GACnBhpE,GACG,kBAACg2B,GAAA,EAAD,CACIhuB,MAAOld,EAAE,gBACTmrC,QACI,kBAACkC,GAAA,EAAD,CAAUpmC,MAAM,UAAUnQ,MAAM,YAAYuG,SAAU3P,KAAKiwF,2BAE/D5tE,QAAS2tE,KAIrB,kBAAC7xE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQzP,QAAS3O,KAAK+vF,kBAAmBx2E,MAAM,WAC1CjH,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQzP,QAAS3O,KAAK+uC,WAAYx1B,MAAM,WACnCjH,EAAE,SAIf,KA9DC,EAgEmCy7E,YAAal9E,EAAQ29E,EAAkBkC,KAhE1E,mBAgEiBjmF,GAhEjB,gBAkEC7C,GAlED,KAkEU6C,EAAOA,EAAKrL,GAAK,GAC5Bwf,EAAQtM,EAAE,eAOd,OANI67E,aAAet9E,EAAQ29E,GACvB5vE,EAAQtM,EAAE,eACH+7E,aAAmBx9E,EAAQ29E,KAClC5vE,EAAQtM,EAAE,cAIV,yBAAKrS,UAAWuO,IAAW,eAAgByhD,IACvC,yBAAKhwD,UAAU,uBACX,kBAAC,GAAD,CAAW4Q,OAAQA,EAAQmW,UAAWwnE,IACtC,kBAAC,GAAD,CACI5vE,MAAOA,EACPU,SAAUitE,GAAYziE,GAAS,EAArB,UAA4ByiE,EAAWziE,EAAvC,eAAmDyiE,GAAa,OAE9E,kBAAC,GAAD,CAA2B3tE,MAAOtM,EAAE,QAAS1K,OAAQA,EAAQ+G,QAAS3O,KAAKksF,aAC3E,kBAAC,GAAD,CACIttE,MAAOtM,EAAE,WACTvC,UAAW4yD,EACXh0D,QAAS3O,KAAKinB,eACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBrI,MAAOtM,EAAE,UAAWvC,UAAW2yD,EAAc/zD,QAAS3O,KAAKmnB,cAChF,kBAACoiB,GAAD,OAEJ,kBAAC,GAAD,CAAyB3qB,MAAOtM,EAAE,SAAU3D,QAAS3O,KAAK8J,aACtD,kBAACiF,EAAA,EAAD,QAGR,yBAAK9O,UAAU,uBAAuBwO,YAAazO,KAAKswF,uBAAwB3hF,QAAS3O,KAAKowF,oBAC1F,yBAAKnwF,UAAU,4BACX,kBAAC,GAAD,CAAmB8P,UAAW67E,EAAkBZ,MAAI,EAACr8E,QAAS3O,KAAK2rF,gBAC/D,kBAAC,GAAD,QAIR,yBAAK1rF,UAAU,+BACX,kBAAC,GAAD,CACI4Q,OAAQA,EACRmW,UAAWwnE,EACXx9E,KAAM0/E,IACN/hF,QAAS3O,KAAK2rF,kBAItB,yBAAK1rF,UAAU,6BACX,kBAAC,GAAD,CAAmB8P,UAAW+7E,EAAcd,MAAI,EAACr8E,QAAS3O,KAAK+pE,YAC3D,kBAAC,GAAD,CAAoB1jE,MAAO,CAAE+xB,UAAW,uBAInDq4D,O,GAv0BSlwF,IAAMC,YAk1BjByT,iBAAkBs6E,IChyBlBoC,I,mBA7FX,WAAYlxF,GAAQ,IAAD,uBACf,4CAAMA,KA0CV+R,uBAAyB,SAAAnB,GAAW,IAAD,EACL,EAAK5Q,MAAvBoR,EADuB,EACvBA,OAAQe,EADe,EACfA,MAEhB,GAAIf,IAAWR,EAAOQ,QAAUe,EAAMqB,IAAI7T,KAAOiR,EAAOzI,OAAQ,CAC5D,IAAM6C,EAAOC,IAAUC,IAAI0F,EAAOzI,SAAW,EAAK7I,MAAM0L,KACxD,EAAK/K,SAAS,CACV+K,KAAMA,MAjDC,EAsDnBmmF,uBAAyB,SAAAvgF,GAAW,IAAD,EACL,EAAK5Q,MAAvBoR,EADuB,EACvBA,OAAQe,EADe,EACfA,MAGhB,GAFehB,YAAcC,KAEdR,EAAOC,QAAUsB,EAAMqB,IAAI7T,KAAOiR,EAAOzI,OAAQ,CAC5D,IAAM6C,EAAOC,IAAUC,IAAI0F,EAAOzI,SAAW,EAAK7I,MAAM0L,KACxD,EAAK/K,SAAS,CACV+K,KAAMA,MA7DC,EAkEnB+/E,mBAAqB,SAAAtnF,GACbA,GAAOA,EAAM0B,kBAEjB,EAAKnF,MAAMkP,QAAQzL,IArEJ,MAGW,EAAKzD,MAAvBoR,EAHO,EAGPA,OAAQe,EAHD,EAGCA,MAELnH,EAASmH,EAAdqB,IALS,OAMfxI,EAAOC,IAAUC,IAAIF,EAAKrL,KAAOqL,EAEjC,EAAK1L,MAAQ,CACTiV,WAAYnD,EACZggF,UAAWj/E,EACX1C,MAAO4hF,KACP5/E,OAAQ4/E,KACRrmF,KAAMA,GAbK,E,iFAkCfC,IAAUoG,GAAG,uBAAwB9Q,KAAKwR,wBAC1C9G,IAAUoG,GAAG,uBAAwB9Q,KAAK4wF,0B,6CAI1ClmF,IAAUqG,IAAI,uBAAwB/Q,KAAKwR,wBAC3C9G,IAAUqG,IAAI,uBAAwB/Q,KAAK4wF,0B,+BAgCrC,IAAD,EAC2B5wF,KAAKjB,MAAd0L,GADlB,EACGyE,MADH,EACUgC,OADV,EACkBzG,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAM41B,EAAO31B,IAAU41B,QAAQ71B,EAAKrL,KAAOqL,EAAK41B,KAC1CxuB,EAAMnH,IAAUqmF,WAAW1wD,GAEjC,OACI,yBAAKpgC,UAAU,wBACX,yBAAKA,UAAU,6BAA6B4R,IAAKA,EAAKiC,IAAI,GAAGnF,QAAS3O,KAAKwqF,qBAC3E,kBAACxuC,GAAA,EAAD,CAAcvxC,KAAMA,Q,gDAjEAhL,EAAOV,GAAQ,IACnC8R,EAAkBpR,EAAlBoR,OAAQe,EAAUnS,EAAVmS,MAEhB,OAAIf,IAAW9R,EAAMiV,YAAcpC,IAAU7S,EAAM8xF,UACxC,CACH78E,WAAYnD,EACZggF,UAAWj/E,EACX1C,MAAO4hF,KACP5/E,OAAQ4/E,KACRrmF,KAAMmH,EAAMqB,KAIb,S,GA/ByB1S,IAAMC,YCsC/BwwF,G,YAhCX,WAAYvxF,GAAQ,qEACVA,I,sEAGA,IAAD,EACoBO,KAAKP,MAAtBoR,EADH,EACGA,OAAQqgB,EADX,EACWA,KAEhB,OACI,yBAAKjxB,UAAU,cACX,yBAAKA,UAAU,sBACX,kBAAC,GAAD,CAAU4Q,OAAQA,EAAQkC,mBAAmB,IAC7C,yBAAK9S,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC8xB,GAAA,EAAD,CAAelhB,OAAQA,KAE1BqgB,GACG,yBAAKjxB,UAAU,uBACX,8BAAOixB,W,GAlBR3wB,IAAMC,WCqB/BywF,G,YACF,WAAYxxF,GAAQ,IAAD,uBACf,4CAAMA,KA6EVqpB,cAAgB,SAAA5lB,GACZ,KAAIua,KAAaqtB,OAAOz0B,OAAS,KAI7BnT,EAAM6nC,YAIV,OAAQ7nC,EAAMC,KACV,IAAK,SAID,OAHA,EAAK2G,cACL5G,EAAM2B,sBACN3B,EAAM0B,kBAGV,IAAK,YAID,OAHA,EAAK+mF,iBACLzoF,EAAM0B,uBACN1B,EAAM2B,iBAGV,IAAK,aAID,OAHA,EAAKklE,aACL7mE,EAAM0B,uBACN1B,EAAM2B,mBAvGC,EA6GnByqF,YA7GmB,sCA6GL,WAAM19E,GAAN,iBAAA2C,EAAA,wDACF1D,EAAW,EAAKpR,MAAhBoR,OAEHkD,aAAclD,GAHT,iEAKWxR,IAAgBC,KAAK,CACtC,QAAS,uBACTiR,QAASK,YAAcC,GACvBua,OAAQ,EACR9T,MAAO,MATD,OAKJ9X,EALI,OAYV,EAAKs6E,QAAUt6E,EAAO0xF,OACtB,EAAKtC,iBAA4C,IAAzBpvF,EAAO0xF,OAAO76E,OAExB,EAEd,EAAK3W,SAAS,CACV+nC,aAHU,EAIVqkD,aAAc,EAAKA,aAJT,GAKVF,iBAAkB,EAAKA,iBALb,GAMV6C,WAAYjvF,EAAO+rB,cAGvB4lE,YAAiCtgF,EATnB,EASkC,EAAKipE,SAxB3C,0CA7GK,wDAwInBhwE,YAAc,WACVyZ,aAA6B,OAzId,EA4InB2oE,WAAa,WAAO,IACRr7E,EAAW,EAAKpR,MAAhBoR,OADO,EAEsB,EAAK9R,MAAlC0oC,EAFO,EAEPA,aAAcgnD,EAFP,EAEOA,WAEhB/8E,EAAOC,IAAUhH,IAAIkG,GAC3B,GAAKa,EAAL,CAEA,IAAIoY,GAAS,EACT2kE,IACA3kE,EAAQ2d,GAGZ,IAAM71B,EACFkY,EAAQ,GAAKA,EAAQ,EAAKgwD,QAAQzjE,OAAS+6E,YAAgB,EAAKtX,QAAQhwD,IAAU8J,YAAiB/iB,GACvG,GAAKe,GACAA,EAAMqB,IAAX,CAEA,IAAMxI,EAAOC,IAAUC,IAAIiH,EAAMqB,IAAI7T,KAAOwS,EAAMqB,IAC7CxI,GAEL4mF,YAAe5mF,EAAMA,EAAKrL,GAAK,OAAQsS,EAAM,kBAAMhH,IAAU4mF,oBAAoBzgF,EAAQpG,EAAKrL,SAhK/E,EAmKnB6nB,cAAgB,WAAO,IACXpW,EAAW,EAAKpR,MAAhBoR,OADU,EAEmB,EAAK9R,MAAlC0oC,EAFU,EAEVA,aAEJ3d,GAAS,EAJK,EAEI2kE,aAIlB3kE,EAAQ2d,GAGZ,IAAI8pD,EAAY,KAGhB,GADkB,EAAKzX,SAAWhwD,GAAS,GAAKA,EAAQ,EAAKgwD,QAAQzjE,OACtD,CACX,IAAMzE,EAAQw/E,YAAgB,EAAKtX,QAAQhwD,IAC3C,IAAKlY,EAAO,OAFD,IAIAnH,EAASmH,EAAdqB,IACN,IAAKxI,EAAM,OAEX8mF,EAAY,CACR,QAAS,cACTnyF,GAAIqL,EAAKrL,QAEV,CACH,IAAMoyF,EAAY59D,YAAiB/iB,GACnC,IAAK2gF,EAAW,OAFb,IAIU/mF,EAAS+mF,EAAdv+E,IACR,IAAKxI,EAAM,OAEX,IAAM41B,EAAO31B,IAAU41B,QAAQ71B,EAAKrL,IACpC,IAAKihC,EAAM,OAEXkxD,EAAY,CACR,QAAS,gBACTrhE,KAAMmQ,EACN0R,KAAM,IAId,GAAKw/C,EAAL,CAEA,IAAMx3E,EAAsB,CACxB,QAAS,oBACTnI,MAAO2/E,EACPz2E,UAAW,KACXC,uBAAwB,GACxB7L,MAAO4hF,KACP5/E,OAAQ4/E,KACRz2E,QAAS,CACL,QAAS,gBACT5O,KAAM,GACN6O,SAAU,MAEdU,IAAK,GAGTvC,aAAQsB,KA5NO,EA+NnBoN,aAAe,WAAO,IAAD,EACa,EAAK1nB,MAA3BoR,EADS,EACTA,OADS,KACDmW,UACqB,EAAKjoB,OAAlC0oC,EAFS,EAETA,aAEJ3d,GAAS,EAJI,EAEK2kE,aAIlB3kE,EAAQ2d,GAGZ,IAAM71B,EACFkY,EAAQ,GAAKA,EAAQ,EAAKgwD,QAAQzjE,OAAS+6E,YAAgB,EAAKtX,QAAQhwD,IAAU8J,YAAiB/iB,GAEvG,GAAIe,EAAO,CACP,IAAInH,EAAOmH,EAAMqB,IAEjB,GADAxI,EAAOC,IAAUC,IAAIF,EAAKrL,KAAOqL,EACvB,CACN,IAAMyH,EAAQxH,IAAU+mF,oBAExB/mF,IAAUgnF,gBAAgBx/E,EAAOzH,MAjP1B,EAsPnBmhF,iBAAmB,SAAA9hE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKgwD,QAAQzjE,QA1PjB,EA6PnBs1E,eAAiB,SAAAzoF,GACTA,GACAA,EAAM0B,kBAFY,IAMhB4pD,EADmB,EAAKzvD,MAAtB0oC,aACyB,EAEjC,OAAO,EAAKokD,UAAUr9B,EAAW,WACzBA,IAAc,EAAKsrB,QAAQzjE,OAAS,GACpC,EAAKs5E,kBAvQE,EA4QnBA,aA5QmB,qBA4QJ,sBAAAp7E,EAAA,wHA5QI,EAgRnBu3E,aAAe,SAAAhiE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GApRL,EAuRnBigD,WAAa,SAAA7mE,GACLA,GACAA,EAAM0B,kBAFQ,IAMZ4pD,EADmB,EAAKzvD,MAAtB0oC,aACyB,EAEjC,OAAO,EAAKokD,UAAUr9B,EAAW,WACX,IAAdA,GACA,EAAKohC,cAjSE,EAsSnBA,SAtSmB,qBAsSR,sBAAAr7E,EAAA,wHAtSQ,EA0SnBs3E,UAAY,SAAC/hE,EAAOU,GAChB,GAAIV,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS,EAAKgwD,QAAQzjE,OAAQ,OAAO,EAEzC,EAAK3W,SACD,CACI+nC,aAAc3d,EACdgiE,aAAc,EAAKA,aAAahiE,GAChC8hE,iBAAkB,EAAKA,iBAAiB9hE,IAE5CU,GAVyB,IAarB3Z,EAAW,EAAKpR,MAAhBoR,OAGR,OADAsgF,YAAiCtgF,EAAQiZ,EAAO,EAAKgwD,UAC9C,GAvTP,EAAKA,QAAU,GACf,EAAK/zE,gBAAkB,IAAIoF,IAAgB,EAAK2d,eAJjC,MAMY,EAAKrpB,MAAxBoR,EANO,EAMPA,OAAQjJ,EAND,EAMCA,OAND,OAQf,EAAK7I,MAAQ,CACTiV,WAAYnD,EACZ8gF,WAAY/pF,EACZ6/B,aAAc,EACdqkD,cAAc,EACdF,kBAAkB,EAClBkE,0BAA0B,GAdf,E,mFAkBGl9E,EAAWC,GAAY,IAAD,EACV7S,KAAKP,MAA3BoR,EADgC,EAChCA,OAAQmW,EADwB,EACxBA,UADwB,EASpChnB,KAAKjB,MANL6yF,EAHoC,EAGpCA,cACAhG,EAJoC,EAIpCA,iBACAE,EALoC,EAKpCA,aACA8C,EANoC,EAMpCA,iBACAH,EAPoC,EAOpCA,WACAqB,EARoC,EAQpCA,yBAGJ,OAAIl9E,EAAU/B,SAAWA,IAIrB+B,EAAUoU,YAAcA,IAIxBnU,EAAU++E,gBAAkBA,IAI5B/+E,EAAU09E,kBAAoB3E,IAI9B/4E,EAAUi5E,eAAiBA,IAI3Bj5E,EAAU+7E,mBAAqBA,IAI/B/7E,EAAU47E,aAAeA,GAIzB57E,EAAUi9E,2BAA6BA,U,0CAO1B,IACTj/E,EAAW7Q,KAAKP,MAAhBoR,OACFe,EAAQgiB,YAAiB/iB,GAC/BgjB,YAA8BhjB,EAAQ,CAACe,IAEvC5R,KAAKsvF,YAAY19E,GAEjB/L,IAAgBC,IAAI9F,KAAK+F,mB,6CAIzBF,IAAgBG,OAAOhG,KAAK+F,mB,+BAkPtB,IAAD,EACiB/F,KAAKP,MAAnBoR,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAUDtS,KAAKjB,MAPL0oC,EAHC,EAGDA,aACAqkD,EAJC,EAIDA,aACAF,EALC,EAKDA,iBAEA6C,GAPC,EAMDG,iBANC,EAODH,YAKA3kE,GAZC,EAQDgmE,yBARC,EASDE,cAGS,GACTvB,IACA3kE,EAAQ2d,GAGZ,IACMoqD,EAAY/nE,GAAS,GAAKA,EAAQ9pB,KAAK85E,QAAQzjE,OAC/CzE,EAAQigF,GAAuB,IAAV/nE,EAAcsnE,YAAgBpxF,KAAK85E,QAAQhwD,IAAU8J,YAAiB/iB,GAC3FihF,EAAmBD,EAAY7xF,KAAK85E,QAAQhwD,GAAS,KAC9Crf,EAASmH,EAAdqB,IAER,OACI,yBAAKhT,UAAWuO,IAAW,eAAgB,yBACvC,yBAAKvO,UAAU,uBACX,kBAAC,GAAD,CAAkB4Q,OAAQA,EAAQqgB,KAAM6gE,YAAwBD,KAChE,kBAAC,GAAD,CACIlzE,MAAOtM,EAAE,eACTgN,SAAUmvE,GAAc3kE,GAAS,EAAvB,UAA8BA,EAAQ,EAAtC,eAA8C2kE,GAAe,OAE3E,kBAAC,GAAD,CAA2B7vE,MAAOtM,EAAE,QAAS1K,OAAQ6C,EAAKrL,GAAIuP,QAAS3O,KAAKksF,aAC5E,kBAAC,GAAD,CAA2BttE,MAAOtM,EAAE,WAAY1K,OAAQ6C,EAAKrL,GAAIuP,QAAS3O,KAAKinB,eAC3E,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBrI,MAAOtM,EAAE,UAAWvC,UAAQ,EAACpB,QAAS3O,KAAKmnB,cAChE,kBAACoiB,GAAD,OAEJ,kBAAC,GAAD,CAAyB3qB,MAAOtM,EAAE,SAAU3D,QAAS3O,KAAK8J,aACtD,kBAACiF,EAAA,EAAD,QAGR,yBAAK9O,UAAU,uBAAuB0O,QAAS3O,KAAK2rF,gBAChD,yBAAK1rF,UAAU,4BACX,kBAAC,GAAD,CAAmB8P,UAAW+7E,EAAcd,MAAI,EAACr8E,QAAS3O,KAAK+pE,YAC3D,kBAAC,GAAD,QAIR,yBAAK9pE,UAAU,+BACX,kBAAC,GAAD,CAA2B4Q,OAAQA,EAAQe,MAAOA,EAAOjD,QAAS3O,KAAK2rF,kBAG3E,yBAAK1rF,UAAU,6BACX,kBAAC,GAAD,CAAmB8P,UAAW67E,EAAkBZ,MAAI,EAACr8E,QAAS3O,KAAK2rF,gBAC/D,kBAAC,GAAD,CAAoBtlF,MAAO,CAAE+xB,UAAW,uBAtCjC,U,GA/UF73B,IAAMC,WAmYxByT,iBAAkBg9E,ICxY3Be,I,mBACF,WAAYvyF,GAAQ,IAAD,uBACf,4CAAMA,KAiDVwyF,+BAAiC,SAAA5hF,GAAW,IAChCtG,EAAcsG,EAAdtG,UAER,EAAKrK,SAAS,CACVqK,eAtDW,EA0DnBsoB,wBAA0B,SAAAhiB,GAAW,IACzBiiB,EAAiBjiB,EAAjBiiB,aAER,EAAK5yB,SAAS,CAAE4yB,kBA7DD,EAgEnB4/D,iCAAmC,SAAA7hF,GAAW,IAClCsJ,EAAYtJ,EAAZsJ,QAER,EAAKja,SAAS,CACVyyF,mBAAoBx4E,KApET,EAwEnBy4E,uBAAyB,SAAA/hF,GAAW,IACxBQ,EAA6BR,EAA7BQ,OAAQmW,EAAqB3W,EAArB2W,UAAWxE,EAAUnS,EAAVmS,MAE3B,EAAK0yD,iBAAiBrkE,EAAQmW,EAAWxE,IA3E1B,EA8EnB6vE,uBAAyB,SAAAhiF,GAAW,IACxBC,EAAkBD,EAAlBC,OAAQkS,EAAUnS,EAAVmS,MAEhB,EAAKyyD,iBAAiB3kE,EAAQkS,IAjFf,EAoFnBg9D,oCAAsC,SAAAnvE,GAAW,IACrCiiF,EAAyBl9D,KAAzBk9D,qBAER,EAAK5yF,SAAS,CAAE4yF,0BAvFD,EA0FnBpoC,iCAAmC,SAAA75C,GAAW,IAClC85C,EAAuB/0B,KAAvB+0B,mBAER,EAAKzqD,SAAS,CAAEyqD,wBA7FD,EAgGnBooC,wCAA0C,SAAAliF,GAAW,IACzCmiF,EAA8Bp9D,KAA9Bo9D,0BAER,EAAK9yF,SAAS,CAAE8yF,+BAnGD,EAsGnBC,sBAAwB,SAAApiF,GAAW,IACvBsQ,EAAStQ,EAATsQ,KAER,EAAKjhB,SAAS,CAAEyuE,YAAaxtD,KAzGd,EA4GnBu0D,iBAAmB,SAACrkE,GAA6C,IAArCmW,EAAoC,uDAAxB,KAAMxE,EAAkB,wDACtD8S,EAAgBF,KAASsG,YACzBg3D,EAAsBt9D,KAASC,aAC/Bm5D,EAAmBp5D,KAAS0U,eAE9BtnB,EACIkwE,IAAwB7hF,GACxBxR,IAAgBgI,aAAa,CACzB,QAAS,2BACTwJ,WAORykB,IAAkBzkB,GAAUmW,GAAawnE,IAAqBxnE,GAC9D,EAAK2rE,iBAAiBz4E,QAAQ+hE,kBAC1Bj1D,GACAk2D,aAAiBrsE,EAAQmW,IAEtBsO,IAAkBzkB,GAAWmW,EAGpC3nB,IAAgBuoC,UAAU/2B,EAAQmW,GAFlC,EAAK2rE,iBAAiBz4E,QAAQqiE,iBAlInB,EAwInBtH,iBAxImB,sCAwIA,WAAO3kE,EAAQkS,GAAf,eAAAjO,EAAA,wDACVjE,EADU,iEAGIjR,IAAgBC,KAAK,CACpC,QAAS,oBACTiR,QAASD,EACToH,OAAO,IANI,OAGThG,EAHS,OASf,EAAKwjE,iBAAiBxjE,EAAKtS,GAAI,KAAMojB,GATtB,yCAxIA,wDAGf,EAAKmwE,iBAAmBpyF,IAAM4c,YAHf,IAKPm1E,EAAsFl9D,KAAtFk9D,qBAAsBnoC,EAAgE/0B,KAAhE+0B,mBAAoBqoC,EAA4Cp9D,KAA5Co9D,0BAA2BlgE,EAAiB8C,KAAjB9C,aAL9D,OAOf,EAAKvzB,MAAQ,CACTuzF,uBACAnoC,qBACAqoC,4BACAlgE,eACA67C,YAAa,KACbgkB,mBAAoB,KACpBpoF,UAAW,MAdA,E,iFAyBf0G,IAAUK,GAAG,uBAAwB9Q,KAAKqyF,wBAC1C1gF,IAAUb,GAAG,uBAAwB9Q,KAAKoyF,wBAE1Ch9D,KAAStkB,GAAG,oCAAqC9Q,KAAKw/E,qCACtDpqD,KAAStkB,GAAG,iCAAkC9Q,KAAKkqD,kCACnD90B,KAAStkB,GAAG,wBAAyB9Q,KAAKqyB,yBAC1C+C,KAAStkB,GAAG,wCAAyC9Q,KAAKuyF,yCAC1Dn9D,KAAStkB,GAAG,sBAAuB9Q,KAAKyyF,uBACxC9F,KAAiB77E,GAAG,iCAAkC9Q,KAAKkyF,kCAC3DpnF,IAAYgG,GAAG,+BAAgC9Q,KAAKiyF,kC,6CAIpDxhF,IAAUM,IAAI,uBAAwB/Q,KAAKqyF,wBAC3C1gF,IAAUZ,IAAI,uBAAwB/Q,KAAKoyF,wBAE3Ch9D,KAASrkB,IAAI,oCAAqC/Q,KAAKw/E,qCACvDpqD,KAASrkB,IAAI,iCAAkC/Q,KAAKkqD,kCACpD90B,KAASrkB,IAAI,wBAAyB/Q,KAAKqyB,yBAC3C+C,KAASrkB,IAAI,wCAAyC/Q,KAAKuyF,yCAC3Dn9D,KAASrkB,IAAI,sBAAuB/Q,KAAKyyF,uBACzC9F,KAAiB57E,IAAI,iCAAkC/Q,KAAKkyF,kCAC5DpnF,IAAYiG,IAAI,+BAAgC/Q,KAAKiyF,kC,+BAqG/C,IAAD,EASDjyF,KAAKjB,MAPLozF,EAFC,EAEDA,mBACAG,EAHC,EAGDA,qBACAnoC,EAJC,EAIDA,mBACAqoC,EALC,EAKDA,0BACArkB,EANC,EAMDA,YACApkE,EAPC,EAODA,UACAuoB,EARC,EAQDA,aAGJ,OACI,oCACI,yBACIryB,UAAWuO,IAAW,OAAQ,CAC1B,aAAc8jB,EACd,oBAAqBggE,KAEzB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAex0E,IAAK9d,KAAK2yF,mBACxBL,GAAwB,kBAAC,GAAD,OAE5BH,GAAsB,kBAAC,GAAkBA,GACzChoC,GAAsB,kBAAC,GAAgBA,GACvCqoC,GAA6B,kBAAC,GAAuBA,GACrDrkB,GAAe,kBAAC,GAAkBA,GAClCpkE,GAAa,kBAAC,EAAcA,Q,GA/KtBxJ,IAAMC,YAuLvB8d,GAAUC,YACZq0E,IACAnwF,GAGW6b,aAAQ0zE","file":"static/js/4.08e97516.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n        if (fullscreen) {\n            KeyboardManager.add(this.keyboardHandler);\n        } else {\n            KeyboardManager.remove(this.keyboardHandler);\n        }\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.mouseDownRoot = false;\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div id='pip-player-wrapper' className={classNames({ 'pip-player-wrapper-hidden': hidden })}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\nimport { unregister } from '../../registerServiceWorker';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n\n        unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_2.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: true,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                    }\n                                }}\n                                onClick={this.handleAnimationClick}\n                            />\n                        </React.Suspense>\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        // console.log('[f] filters', filters);\n\n        const filtersMap = new Map();\n        for (let i = 0; i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        // console.log('[f] recommended', recommendedFilters);\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        // console.log('[f] filters.render');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            <React.Suspense fallback={null}>\n                                <Lottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        autoplay: true,\n                                        loop: false,\n                                        animationData: data,\n                                        renderer: 'svg',\n                                        rendererSettings: {\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                            clearCanvas: false,\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        }\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc, supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMediaTitle, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n        const { currentTime, duration } = this.getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message } = this.state;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message } = this.state;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n        if (!audio) return;\n        if (!useAudioPlaybackRate(chat_id, id)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = value;\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        const { currentTime, duration } = this.getCurrentTime(message);\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    player.currentTime = currentTime;\n                }\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    if (supportsStreaming()) return;\n\n                    const { audio: file } = audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const { audio: file } = audio;\n                    if (file) {\n                        let src = getSrc(file);\n                        if (!src && supportsStreaming()) {\n                            src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${audio.mime_type}`;\n                        }\n\n                        return src;\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, currentTime } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n        const voiceNote = hasVoice(chat_id, id);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(chat_id, id)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            chatId: message.chat_id,\n            messageId: message.id,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            chatId: message.chat_id,\n            messageId: message.id,\n            buffered: player.buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { chat_id: chatId, id: messageId } = message;\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({\n            currentTime\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId,\n            messageId,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    getCurrentTime = message => {\n        if (!message) return { currentTime: 0, duration: 0 };\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return { currentTime: 0, duration: 0 };\n\n        const { audio: file } = audio;\n        if (!file) return { currentTime: 0, duration: 0 };\n\n        const { remote } = file;\n        if (!remote) return { currentTime: 0, duration: 0 };\n\n        const { unique_id } = remote;\n        if (!unique_id) return { currentTime: 0, duration: 0 };\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { message } = this.state;\n        if (!message) return;\n\n        if (!useAudioPlaybackRate(message.chat_id, message.id)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, duration, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        let useAudioRate = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n            useAudioRate = useAudioPlaybackRate(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport { getArrayBuffer } from '../../Utils/File';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    handleTest = async () => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { video } = content;\n        if (!video) return;\n\n        const { video: file } = video;\n        if (!file) return;\n\n        const { size } = file;\n\n        const chunk = 512 * 1024;\n        const count = size / chunk;\n\n        for (let i = 0; i < count; i++) {\n            console.log('[d] filePart', file.id, chunk * i);\n            await TdLibController.send({\n                '@type': 'downloadFile',\n                file_id: file.id,\n                priority: 1,\n                offset: chunk * i,\n                limit: chunk,\n                synchronous: true\n            });\n\n            const filePart = await TdLibController.send({\n                '@type': 'readFilePart',\n                file_id: file.id,\n                offset: chunk * i,\n                count: chunk\n            });\n\n            const buffer = await getArrayBuffer(filePart.data);\n        }\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleTest}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary='Test' />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    const { name, text } = props;\n\n    return (\n        <a id={name}>\n            {text && <RichText text={text} />}\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport FileStore from '../../Stores/FileStore';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying, supportsStreaming } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        // setTimeout(() => KeyboardManager.add(this.keyboardHandler), 0);\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}