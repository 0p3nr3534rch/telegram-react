{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Actions/Message.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Stores/FilterStore.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","withTranslation","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","nextContext","openMedia","minithumbnail","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","sender","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","sender_user_id","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","unpinMessage","unpinAllMessages","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","reset","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","log","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","is_blocked","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","canClearHistory","hasOnePinnedMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","getPathData","barHeight","getClipPath","rx","ry","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","Photo","Video","inlineMeta","getWebPage","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","scrollBehavior","isServiceMessage","newState","scrollDownVisible","history","scrollBehaviorNone","insert","filterMessages","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","hasLastMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","LeaveChatDialog","getDeleteDialogText","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","persist","disableNotification","onlyForSelf","disable_notification","only_for_self","pinMessageAction","unpinMessageAction","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.c8b4faec.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={t('Bio')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                            secondary={t('Username')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                    {/*{(photoCount > 0 ||*/}\n                    {/*    videoCount > 0 ||*/}\n                    {/*    documentCount > 0 ||*/}\n                    {/*    audioCount > 0 ||*/}\n                    {/*    urlCount > 0 ||*/}\n                    {/*    voiceAndVideoNoteCount > 0 ||*/}\n                    {/*    groupInCommonCount > 0) && (*/}\n                    {/*    <>*/}\n                            {/*<Divider />*/}\n                            {/*<List className='shared-media-list'>*/}\n                            {/*    {photoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedPhotos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <PhotoIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {photoCount === 1 ? '1 photo' : `${photoCount} photos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {videoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVideos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <VideocamIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {videoCount === 1 ? '1 video' : `${videoCount} videos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {documentCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedDocuments}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertDriveFileIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {documentCount === 1 ? '1 file' : `${documentCount} files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {audioCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedAudios}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <HeadsetIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {urlCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedLinks}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertLinkIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {voiceAndVideoNoteCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <MicIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {voiceAndVideoNoteCount === 1*/}\n                            {/*                            ? '1 voice message'*/}\n                            {/*                            : `${voiceAndVideoNoteCount} voice messages`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {groupInCommonCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenGroupInCommon}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <GroupIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {groupInCommonCount === 1*/}\n                            {/*                            ? '1 group in common'*/}\n                            {/*                            : `${groupInCommonCount} groups in common`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                    {/*{items.length > 0 && (*/}\n                    {/*    <>*/}\n                    {/*        <Divider />*/}\n                    {/*        <List>{items}</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false, onlyForSelf = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification,\n        only_for_self: onlyForSelf\n    });\n}\n\nexport function unpinMessage(chatId, messageId) {\n    return TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n    });\n}\n\nexport function unpinAllMessages(chatId) {\n    return TdLibController.send({\n        '@type': 'unpinAllChatMessages',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender.user_id) {\n                users.set(sender.user_id, sender.user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        await TdLibController.send({\n           '@type': 'toggleMessageSenderIsBlocked',\n            sender: { '@type': 'messageSenderUser', user_id: userId },\n            is_blocked: false\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    getPathData = (barHeight, count) => {\n        let data = '';\n        for (let i = 0; i < count; i++) {\n            const x = 1;\n            const y = 1 + (barHeight + 2) * i;\n            data += `M${x},${y}v${barHeight - 2}Z`;\n        }\n\n        return data;\n    }\n\n    getClipPath = (id, barHeight, count) => {\n        if (count === 3) {\n            return (\n                <clipPath id={id}>\n                    <rect x={0} y={0} width={2} height={barHeight} rx={1} ry={1}/>\n                    <rect x={0} y={11} width={2} height={barHeight + 1} rx={1} ry={1}/>\n                    <rect x={0} y={23} width={2} height={barHeight} rx={1} ry={1}/>\n                </clipPath>\n            );\n        }\n\n        const items = [];\n        for (let i = 0; i < count; i++) {\n            const x = 0;\n            const y = (barHeight + 2) * i;\n\n            items.push(<rect key={i} x={x} y={y} width={2} height={barHeight} rx={1} ry={1}/>);\n        }\n\n        return (\n            <clipPath id={id}>\n                {items}\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        console.log('[pin] animate', messageId, prevMessageId, duration);\n\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isBadSelection, isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(filterMessages(history), newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result, limit);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                 getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return false;\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = {\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result, limit);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                    <Footer chatId={chatId} />\n                </div>\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {count === 1\n                            ? 'Do you want to delete this message?'\n                            : `Do you want to delete ${count} messages?`}\n                    </DialogContentText>\n                    { isSupergroup(chatId) ? (\n                        <DialogContentText>\n                            { !isChannelChat(chatId) && (count === 1\n                                ? 'This will delete it for everyone in this chat'\n                                : 'This will delete them for everyone in this chat')\n                            }\n                        </DialogContentText>\n                    ) : (\n                        <>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all'\n                                        }\n                                    />\n                                )}\n                        </>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canPinMessages, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages, pinMessage, unpinMessage } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}