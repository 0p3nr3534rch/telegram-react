{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Utils/Punycode.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","_this$props5","setProfileMediaViewerContent","handleOpenChat","_this$props6","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props7","migratedCounters","_this$props8","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","_this$props9","_counters$map","el","_counters$map2","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","_ref","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","Boolean","headerSearchButton","SpeedDialIcon_default","icon","Search_default","openIcon","SharedMediaBase","constructor","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","toConsumableArray","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","_this$state3","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","messages","incompleteResults","_args","undefined","query","sender_user_id","from_message_id","offset","finally","total_count","setItems","onLoadMigratedNext","_args2","_x2","handleScroll","listRef","assertThisInitialized","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","_callee3","_args3","_context3","searchItems","searchMigratedItems","_x3","_ref4","_callee4","_args4","_context4","_x4","_ref5","_callee5","_context5","handleCloseSearch","_x5","sharedMediaList","sharedMediaSearchList","default","Error","Tile_SharedMedia_SharedDocument","_this$state4","getItemTemplate","searchMessages","ColumnRight_SharedMedia_SharedMediaHeader","getHeader","hasSearch","onScroll","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","punycode","utf16","decode","extra","len","charCodeAt","RangeError","encode","String","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","d","flag","adapt","delta","numpoints","firsttime","k","Math","floor","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","splice","h","b","m","q","ijv","bcp","ToASCII","domain","domain_array","split","s","match","ToUnicode","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","error","webPage","description","display_url","getTitleFromUrl","SafeLink","displayText","isValidEntityType","entityText","substring","mail","typeUrl","tileColor","abs","charAt","Media_Photo","showProgress","accentStyles","SharedLinks","web_page","Tile_SharedMedia_SharedLink","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","SharedPhoto","onClientUpdatePhotoBlob","thumbSize","fileId","thumbnailSize","getSize","src","getSrc","thumbSrc","isBlurredThumbnail","sharedPhotoContent","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","backgroundColor","SharedPhotos","Tile_SharedMedia_SharedPhoto","flexWrap","justifyContent","alignItems","alignContent","SharedVideo","onClientUpdateVideoThumbnailBlob","video","_this$props$video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","media-blurred","getDurationString","SharedVideos","Tile_SharedMedia_SharedVideo","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","voiceNoteMeta","AudioAction","MediaStatus","SharedVoiceNotes","Tile_SharedMedia_SharedVoiceNote","voice_note","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedAudios","ColumnRight_SharedMedia_SharedDocuments","ColumnRight_SharedMedia_SharedLinks","ColumnRight_SharedMedia_SharedPhotos","ColumnRight_SharedMedia_SharedVideos","ColumnRight_SharedMedia_SharedVoiceNotes","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","includes","recentlyFound","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","category","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","handleEmojiSelect","native","regex","t1","performance","emojiRegex","exec","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","video_note","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","displayExtraSmallSize","site_name","animation","Sticker","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","getWebPage","webPageContent","_this$getMedia","_this$getMedia2","webPageMediaTop","webPageMediaBottom","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Check_default","messageSelectTick","Components_Message_MessageStatus","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","resolve","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.6898fd9a.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaList: {},\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        console.log('SharedMediaBase.render', items, messages);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', classes.sharedMediaList)}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            console.log('getTitleFromUrl', punycode);\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, classes, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = <SafeLink className='shared-link-url' url={url} displayText={display_url} />;\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url);\n\n                        return <SafeLink className='shared-link-url' url={url} displayText={entityText} mail={mail} />;\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize)\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div\n                    className={classNames('shared-photo-content', classes.sharedPhotoContent)}\n                    style={{ backgroundImage: `url(${thumbSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedPhotos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        // backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', { 'media-blurred': isBlurred })}\n                        style={{ backgroundImage: `url(${thumbSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedVideos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    voiceNoteMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className={classNames(classes.voiceNoteMeta, 'voice-note-meta')}>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [null, <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    getWebPage = () => {\n        const { classes, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { site_name, title, description } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getWebPage()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}